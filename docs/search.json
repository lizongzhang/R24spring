[
  {
    "objectID": "L8.html",
    "href": "L8.html",
    "title": "第8讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "5dplyr.html",
    "href": "5dplyr.html",
    "title": "Data Manipulation with dplyr",
    "section": "",
    "text": "本节使用数据集starwars。\n#加载包dplyr\nlibrary(dplyr)\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#dplyr函数的分类",
    "href": "5dplyr.html#dplyr函数的分类",
    "title": "Data Manipulation with dplyr",
    "section": "dplyr函数的分类",
    "text": "dplyr函数的分类\n所有的dplyr函数，第1项参数都是数据框（data frame 或者 tibble)\ndplyr提供了一系列管理数据的函数，根据管理的对象不同，可以将这些函数分为对列的管理、对行的管理、对行组的管理三类。\n\n列的管理 Columns:\n\nselect() changes whether or not a column is included.\nrename() changes the name of columns.\nmutate() changes the values of columns and creates new columns.\nrelocate() changes the order of the columns.\n\n行的管理 Rows:\n\nfilter() chooses rows based on column values.\nslice() chooses rows based on location.\narrange() changes the order of the rows.\n\n行组的管理Groups of rows:\n\nsummarise() collapses a group into a single row.\ncount()\ntop_n()"
  },
  {
    "objectID": "5dplyr.html#dplyr函数的共性-commonalities",
    "href": "5dplyr.html#dplyr函数的共性-commonalities",
    "title": "Data Manipulation with dplyr",
    "section": "dplyr函数的共性 Commonalities",
    "text": "dplyr函数的共性 Commonalities\n\n第1项参数是data frame.\n第2项参数描述动作。\n输出结果是一个新的data frame."
  },
  {
    "objectID": "5dplyr.html#select",
    "href": "5dplyr.html#select",
    "title": "Data Manipulation with dplyr",
    "section": "select()",
    "text": "select()\n\ncontains()\nstarts_with()\nends_with()\nlast_col()\n?select_helpers\n\n\n#names()列出数据框所有变量名\nnames(starwars)\n\n [1] \"name\"       \"height\"     \"mass\"       \"hair_color\" \"skin_color\"\n [6] \"eye_color\"  \"birth_year\" \"sex\"        \"gender\"     \"homeworld\" \n[11] \"species\"    \"films\"      \"vehicles\"   \"starships\" \n\n#选择需要的变量，创建新的数据框\nstarwars_selected &lt;- starwars %&gt;% select(\n  name, height, mass, sex, species, films)\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#选择一个范围，变量名1：变量2\ndata1 &lt;- starwars %&gt;% \n       select(name:mass)\ndata1\n\n# A tibble: 87 × 3\n   name               height  mass\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt;\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n\n#设置条件 contains()\ndata2 &lt;- starwars %&gt;% \n       select(name, species, contains(\"color\"))\ndata2\n\n# A tibble: 87 × 5\n   name               species hair_color    skin_color  eye_color\n   &lt;chr&gt;              &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;    \n 1 Luke Skywalker     Human   blond         fair        blue     \n 2 C-3PO              Droid   &lt;NA&gt;          gold        yellow   \n 3 R2-D2              Droid   &lt;NA&gt;          white, blue red      \n 4 Darth Vader        Human   none          white       yellow   \n 5 Leia Organa        Human   brown         light       brown    \n 6 Owen Lars          Human   brown, grey   light       blue     \n 7 Beru Whitesun lars Human   brown         light       blue     \n 8 R5-D4              Droid   &lt;NA&gt;          white, red  red      \n 9 Biggs Darklighter  Human   black         light       brown    \n10 Obi-Wan Kenobi     Human   auburn, white fair        blue-gray\n# ℹ 77 more rows"
  },
  {
    "objectID": "5dplyr.html#mutate",
    "href": "5dplyr.html#mutate",
    "title": "Data Manipulation with dplyr",
    "section": "mutate()",
    "text": "mutate()\n在数据集中追加新的变量。\n\n#生成新变量\nstarwars_selected %&gt;% \n  mutate(BMI = mass/((height/100)^2)) %&gt;% \n  arrange(desc(BMI))\n\n# A tibble: 87 × 7\n   name                  height  mass sex            species        films    BMI\n   &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;          &lt;list&gt; &lt;dbl&gt;\n 1 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt           &lt;chr&gt;  443. \n 2 Dud Bolt                  94    45 male           Vulptereen     &lt;chr&gt;   50.9\n 3 Yoda                      66    17 male           Yoda's species &lt;chr&gt;   39.0\n 4 Owen Lars                178   120 male           Human          &lt;chr&gt;   37.9\n 5 IG-88                    200   140 none           Droid          &lt;chr&gt;   35  \n 6 R2-D2                     96    32 none           Droid          &lt;chr&gt;   34.7\n 7 Grievous                 216   159 male           Kaleesh        &lt;chr&gt;   34.1\n 8 R5-D4                     97    32 none           Droid          &lt;chr&gt;   34.0\n 9 Jek Tono Porkins         180   110 male           Human          &lt;chr&gt;   34.0\n10 Darth Vader              202   136 male           Human          &lt;chr&gt;   33.3\n# ℹ 77 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\nstarwars_selected %&gt;% \n  mutate(wt_rank = min_rank(desc(mass))) %&gt;% \n  arrange((wt_rank)) \n\n# A tibble: 87 × 7\n   name                  height  mass sex            species    films  wt_rank\n   &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;      &lt;list&gt;   &lt;int&gt;\n 1 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt       &lt;chr&gt;        1\n 2 Grievous                 216   159 male           Kaleesh    &lt;chr&gt;        2\n 3 IG-88                    200   140 none           Droid      &lt;chr&gt;        3\n 4 Darth Vader              202   136 male           Human      &lt;chr&gt;        4\n 5 Tarfful                  234   136 male           Wookiee    &lt;chr&gt;        4\n 6 Owen Lars                178   120 male           Human      &lt;chr&gt;        6\n 7 Bossk                    190   113 male           Trandoshan &lt;chr&gt;        7\n 8 Chewbacca                228   112 male           Wookiee    &lt;chr&gt;        8\n 9 Jek Tono Porkins         180   110 male           Human      &lt;chr&gt;        9\n10 Dexter Jettster          198   102 male           Besalisk   &lt;chr&gt;       10\n# ℹ 77 more rows\n\n#overwrite the variable\nstarwars_selected %&gt;% \n  mutate(height = height/100) %&gt;% \n  arrange(desc(height))\n\n# A tibble: 87 × 6\n   name         height  mass sex    species  films    \n   &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;list&gt;   \n 1 Yarael Poof    2.64    NA male   Quermian &lt;chr [1]&gt;\n 2 Tarfful        2.34   136 male   Wookiee  &lt;chr [1]&gt;\n 3 Lama Su        2.29    88 male   Kaminoan &lt;chr [1]&gt;\n 4 Chewbacca      2.28   112 male   Wookiee  &lt;chr [5]&gt;\n 5 Roos Tarpals   2.24    82 male   Gungan   &lt;chr [1]&gt;\n 6 Grievous       2.16   159 male   Kaleesh  &lt;chr [1]&gt;\n 7 Taun We        2.13    NA female Kaminoan &lt;chr [1]&gt;\n 8 Rugor Nass     2.06    NA male   Gungan   &lt;chr [1]&gt;\n 9 Tion Medon     2.06    80 male   Pau'an   &lt;chr [1]&gt;\n10 Darth Vader    2.02   136 male   Human    &lt;chr [4]&gt;\n# ℹ 77 more rows\n\n#everything() selects all variable.\nstarwars %&gt;%\n  mutate(height_m = height / 100) %&gt;%\n  select(height_m, height, everything())\n\n# A tibble: 87 × 15\n   height_m height name    mass hair_color skin_color eye_color birth_year sex  \n      &lt;dbl&gt;  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;\n 1     1.72    172 Luke …    77 blond      fair       blue            19   male \n 2     1.67    167 C-3PO     75 &lt;NA&gt;       gold       yellow         112   none \n 3     0.96     96 R2-D2     32 &lt;NA&gt;       white, bl… red             33   none \n 4     2.02    202 Darth…   136 none       white      yellow          41.9 male \n 5     1.5     150 Leia …    49 brown      light      brown           19   fema…\n 6     1.78    178 Owen …   120 brown, gr… light      blue            52   male \n 7     1.65    165 Beru …    75 brown      light      blue            47   fema…\n 8     0.97     97 R5-D4     32 &lt;NA&gt;       white, red red             NA   none \n 9     1.83    183 Biggs…    84 black      light      brown           24   male \n10     1.82    182 Obi-W…    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 6 more variables: gender &lt;chr&gt;, homeworld &lt;chr&gt;, species &lt;chr&gt;,\n#   films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#rename",
    "href": "5dplyr.html#rename",
    "title": "Data Manipulation with dplyr",
    "section": "rename()",
    "text": "rename()\n\n#重命名变量，rename(新名=旧名)\nstarwars_selected %&gt;% \n  rename(weight = mass)\n\n# A tibble: 87 × 6\n   name               height weight sex    species films    \n   &lt;chr&gt;               &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172     77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167     75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96     32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202    136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150     49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178    120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun lars    165     75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97     32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183     84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182     77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#在select 的时候重命名\ndata3 &lt;- starwars %&gt;% \n  select(name, height, weight = mass)\ndata3\n\n# A tibble: 87 × 3\n   name               height weight\n   &lt;chr&gt;               &lt;int&gt;  &lt;dbl&gt;\n 1 Luke Skywalker        172     77\n 2 C-3PO                 167     75\n 3 R2-D2                  96     32\n 4 Darth Vader           202    136\n 5 Leia Organa           150     49\n 6 Owen Lars             178    120\n 7 Beru Whitesun lars    165     75\n 8 R5-D4                  97     32\n 9 Biggs Darklighter     183     84\n10 Obi-Wan Kenobi        182     77\n# ℹ 77 more rows"
  },
  {
    "objectID": "5dplyr.html#transmute",
    "href": "5dplyr.html#transmute",
    "title": "Data Manipulation with dplyr",
    "section": "transmute()",
    "text": "transmute()\ntransmute()是select()和mutate()的结合。\nTransmute is like a combination of select and mutate: you are getting back just a subset of the columns, but you are transforming and changing them at the same time.\n\ndata4 &lt;- starwars %&gt;% \n  filter(height != \"NA\") %&gt;% \n  transmute(name, height, mass, bmi = mass/((height/100)^2))\ndata4\n\n# A tibble: 81 × 4\n   name               height  mass   bmi\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Luke Skywalker        172    77  26.0\n 2 C-3PO                 167    75  26.9\n 3 R2-D2                  96    32  34.7\n 4 Darth Vader           202   136  33.3\n 5 Leia Organa           150    49  21.8\n 6 Owen Lars             178   120  37.9\n 7 Beru Whitesun lars    165    75  27.5\n 8 R5-D4                  97    32  34.0\n 9 Biggs Darklighter     183    84  25.1\n10 Obi-Wan Kenobi        182    77  23.2\n# ℹ 71 more rows"
  },
  {
    "objectID": "5dplyr.html#relocate",
    "href": "5dplyr.html#relocate",
    "title": "Data Manipulation with dplyr",
    "section": "relocate()",
    "text": "relocate()\n调整列的排列顺序。\n\nstarwars %&gt;% relocate(sex:homeworld, .before = height)\n\n# A tibble: 87 × 14\n   name      sex   gender homeworld height  mass hair_color skin_color eye_color\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;    \n 1 Luke Sky… male  mascu… Tatooine     172    77 blond      fair       blue     \n 2 C-3PO     none  mascu… Tatooine     167    75 &lt;NA&gt;       gold       yellow   \n 3 R2-D2     none  mascu… Naboo         96    32 &lt;NA&gt;       white, bl… red      \n 4 Darth Va… male  mascu… Tatooine     202   136 none       white      yellow   \n 5 Leia Org… fema… femin… Alderaan     150    49 brown      light      brown    \n 6 Owen Lars male  mascu… Tatooine     178   120 brown, gr… light      blue     \n 7 Beru Whi… fema… femin… Tatooine     165    75 brown      light      blue     \n 8 R5-D4     none  mascu… Tatooine      97    32 &lt;NA&gt;       white, red red      \n 9 Biggs Da… male  mascu… Tatooine     183    84 black      light      brown    \n10 Obi-Wan … male  mascu… Stewjon      182    77 auburn, w… fair       blue-gray\n# ℹ 77 more rows\n# ℹ 5 more variables: birth_year &lt;dbl&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars %&gt;% \n  select(name, species, everything())\n\n# A tibble: 87 × 14\n   name    species height  mass hair_color skin_color eye_color birth_year sex  \n   &lt;chr&gt;   &lt;chr&gt;    &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;\n 1 Luke S… Human      172    77 blond      fair       blue            19   male \n 2 C-3PO   Droid      167    75 &lt;NA&gt;       gold       yellow         112   none \n 3 R2-D2   Droid       96    32 &lt;NA&gt;       white, bl… red             33   none \n 4 Darth … Human      202   136 none       white      yellow          41.9 male \n 5 Leia O… Human      150    49 brown      light      brown           19   fema…\n 6 Owen L… Human      178   120 brown, gr… light      blue            52   male \n 7 Beru W… Human      165    75 brown      light      blue            47   fema…\n 8 R5-D4   Droid       97    32 &lt;NA&gt;       white, red red             NA   none \n 9 Biggs … Human      183    84 black      light      brown           24   male \n10 Obi-Wa… Human      182    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 5 more variables: gender &lt;chr&gt;, homeworld &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#if_else",
    "href": "5dplyr.html#if_else",
    "title": "Data Manipulation with dplyr",
    "section": "if_else()",
    "text": "if_else()\n对变量值进行条件转换。\n\n#加载包tidyr，drop_na()属于包tidyr\nlibrary(tidyr)\nsize_of_weight &lt;- starwars_selected %&gt;% \n  drop_na(mass) %&gt;% \n  mutate(weight_size = if_else(mass &gt;100, \n                               \"large\",\n                               \"small\"))\nsize_of_weight\n\n# A tibble: 59 × 7\n   name               height  mass sex    species films     weight_size\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;    &lt;chr&gt;      \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt; small      \n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt; small      \n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt; small      \n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt; large      \n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt; small      \n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt; large      \n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt; small      \n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt; small      \n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt; small      \n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt; small      \n# ℹ 49 more rows"
  },
  {
    "objectID": "5dplyr.html#recode",
    "href": "5dplyr.html#recode",
    "title": "Data Manipulation with dplyr",
    "section": "recode()",
    "text": "recode()\n对变量值进行重新编码。\n\n# overwrite the original variable.\nsize_of_weight %&gt;% \n  mutate(weight_size = recode(weight_size,\n                              \"large\" =1,\n                              \"small\" =2))\n\n# A tibble: 59 × 7\n   name               height  mass sex    species films     weight_size\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;          &lt;dbl&gt;\n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;           2\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;           2\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;           2\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;           1\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;           2\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;           1\n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt;           2\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;           2\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;           2\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;           2\n# ℹ 49 more rows\n\nsize_of_weight\n\n# A tibble: 59 × 7\n   name               height  mass sex    species films     weight_size\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;    &lt;chr&gt;      \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt; small      \n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt; small      \n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt; small      \n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt; large      \n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt; small      \n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt; large      \n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt; small      \n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt; small      \n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt; small      \n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt; small      \n# ℹ 49 more rows"
  },
  {
    "objectID": "5dplyr.html#duplicated",
    "href": "5dplyr.html#duplicated",
    "title": "Data Manipulation with dplyr",
    "section": "duplicated()",
    "text": "duplicated()\n\n# Create a Data Frame\ndf6 &lt;- data.frame(x1 = c(1:5),\n                    x2 = letters[1:5],\n                    x3 = seq(2,10,2),\n                    x1 = LETTERS[22:26],\n                    check.names = FALSE)\ndf6\n\n  x1 x2 x3 x1\n1  1  a  2  V\n2  2  b  4  W\n3  3  c  6  X\n4  4  d  8  Y\n5  5  e 10  Z\n\n# Find Duplicate Column Names\nduplicated_names &lt;- duplicated(colnames(df6))\n\n# Remove Duplicate Column Names\ndf6[!duplicated_names]\n\n  x1 x2 x3\n1  1  a  2\n2  2  b  4\n3  3  c  6\n4  4  d  8\n5  5  e 10"
  },
  {
    "objectID": "5dplyr.html#as.factor",
    "href": "5dplyr.html#as.factor",
    "title": "Data Manipulation with dplyr",
    "section": "as.factor()",
    "text": "as.factor()\n将字符串转换为因子。\n\nstarwars_selected %&gt;% \n  mutate(vore = as.factor(species)) %&gt;% \n  glimpse()\n\nRows: 87\nColumns: 7\n$ name    &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Organ…\n$ height  &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 228,…\n$ mass    &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.0, …\n$ sex     &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\", \"n…\n$ species &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Human\",…\n$ films   &lt;list&gt; &lt;\"The Empire Strikes Back\", \"Revenge of the Sith\", \"Return of…\n$ vore    &lt;fct&gt; Human, Droid, Droid, Human, Human, Human, Human, Droid, Human,…"
  },
  {
    "objectID": "5dplyr.html#arrange",
    "href": "5dplyr.html#arrange",
    "title": "Data Manipulation with dplyr",
    "section": "arrange()",
    "text": "arrange()\n将个案按某个变量排序。\n\n#升序\nstarwars_selected %&gt;% arrange(height)\n\n# A tibble: 87 × 6\n   name                  height  mass sex   species        films    \n   &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;          &lt;list&gt;   \n 1 Yoda                      66    17 male  Yoda's species &lt;chr [5]&gt;\n 2 Ratts Tyerell             79    15 male  Aleena         &lt;chr [1]&gt;\n 3 Wicket Systri Warrick     88    20 male  Ewok           &lt;chr [1]&gt;\n 4 Dud Bolt                  94    45 male  Vulptereen     &lt;chr [1]&gt;\n 5 R2-D2                     96    32 none  Droid          &lt;chr [7]&gt;\n 6 R4-P17                    96    NA none  Droid          &lt;chr [2]&gt;\n 7 R5-D4                     97    32 none  Droid          &lt;chr [1]&gt;\n 8 Sebulba                  112    40 male  Dug            &lt;chr [1]&gt;\n 9 Gasgano                  122    NA male  Xexto          &lt;chr [1]&gt;\n10 Watto                    137    NA male  Toydarian      &lt;chr [2]&gt;\n# ℹ 77 more rows\n\n#降序 desc()\nstarwars_selected %&gt;% \n  arrange(desc(height))\n\n# A tibble: 87 × 6\n   name         height  mass sex    species  films    \n   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;list&gt;   \n 1 Yarael Poof     264    NA male   Quermian &lt;chr [1]&gt;\n 2 Tarfful         234   136 male   Wookiee  &lt;chr [1]&gt;\n 3 Lama Su         229    88 male   Kaminoan &lt;chr [1]&gt;\n 4 Chewbacca       228   112 male   Wookiee  &lt;chr [5]&gt;\n 5 Roos Tarpals    224    82 male   Gungan   &lt;chr [1]&gt;\n 6 Grievous        216   159 male   Kaleesh  &lt;chr [1]&gt;\n 7 Taun We         213    NA female Kaminoan &lt;chr [1]&gt;\n 8 Rugor Nass      206    NA male   Gungan   &lt;chr [1]&gt;\n 9 Tion Medon      206    80 male   Pau'an   &lt;chr [1]&gt;\n10 Darth Vader     202   136 male   Human    &lt;chr [4]&gt;\n# ℹ 77 more rows\n\n# 查看前6行\nhead(starwars_selected)\n\n# A tibble: 6 × 6\n  name           height  mass sex    species films    \n  &lt;chr&gt;           &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n1 Luke Skywalker    172    77 male   Human   &lt;chr [5]&gt;\n2 C-3PO             167    75 none   Droid   &lt;chr [6]&gt;\n3 R2-D2              96    32 none   Droid   &lt;chr [7]&gt;\n4 Darth Vader       202   136 male   Human   &lt;chr [4]&gt;\n5 Leia Organa       150    49 female Human   &lt;chr [5]&gt;\n6 Owen Lars         178   120 male   Human   &lt;chr [3]&gt;\n\n# see a few values from all the columns\nglimpse(starwars_selected)\n\nRows: 87\nColumns: 6\n$ name    &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Organ…\n$ height  &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 228,…\n$ mass    &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.0, …\n$ sex     &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\", \"n…\n$ species &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Human\",…\n$ films   &lt;list&gt; &lt;\"The Empire Strikes Back\", \"Revenge of the Sith\", \"Return of…"
  },
  {
    "objectID": "5dplyr.html#filter",
    "href": "5dplyr.html#filter",
    "title": "Data Manipulation with dplyr",
    "section": "filter()",
    "text": "filter()\n提取满足条件的个案。\n\n#列出变量的取值种类\nunique(starwars$species)\n\n [1] \"Human\"          \"Droid\"          \"Wookiee\"        \"Rodian\"        \n [5] \"Hutt\"           \"Yoda's species\" \"Trandoshan\"     \"Mon Calamari\"  \n [9] \"Ewok\"           \"Sullustan\"      \"Neimodian\"      \"Gungan\"        \n[13] NA               \"Toydarian\"      \"Dug\"            \"Zabrak\"        \n[17] \"Twi'lek\"        \"Vulptereen\"     \"Xexto\"          \"Toong\"         \n[21] \"Cerean\"         \"Nautolan\"       \"Tholothian\"     \"Iktotchi\"      \n[25] \"Quermian\"       \"Kel Dor\"        \"Chagrian\"       \"Geonosian\"     \n[29] \"Mirialan\"       \"Clawdite\"       \"Besalisk\"       \"Kaminoan\"      \n[33] \"Aleena\"         \"Skakoan\"        \"Muun\"           \"Togruta\"       \n[37] \"Kaleesh\"        \"Pau'an\"        \n\n#提取species == \"Droid\"的个案\nstarwars_selected %&gt;% \n  filter(species == \"Droid\") %&gt;% \n  arrange(height) \n\n# A tibble: 6 × 6\n  name   height  mass sex   species films    \n  &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;list&gt;   \n1 R2-D2      96    32 none  Droid   &lt;chr [7]&gt;\n2 R4-P17     96    NA none  Droid   &lt;chr [2]&gt;\n3 R5-D4      97    32 none  Droid   &lt;chr [1]&gt;\n4 C-3PO     167    75 none  Droid   &lt;chr [6]&gt;\n5 IG-88     200   140 none  Droid   &lt;chr [1]&gt;\n6 BB8        NA    NA none  Droid   &lt;chr [1]&gt;\n\n#提取height &lt; 200的个案\nstarwars_selected %&gt;% \n  arrange(desc(height)) %&gt;% \n  filter(height &lt; 200)\n\n# A tibble: 70 × 6\n   name                height  mass sex   species   films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;list&gt;   \n 1 Ki-Adi-Mundi           198    82 male  Cerean    &lt;chr [3]&gt;\n 2 Dexter Jettster        198   102 male  Besalisk  &lt;chr [1]&gt;\n 3 Jar Jar Binks          196    66 male  Gungan    &lt;chr [2]&gt;\n 4 Kit Fisto              196    87 male  Nautolan  &lt;chr [3]&gt;\n 5 Mas Amedda             196    NA male  Chagrian  &lt;chr [2]&gt;\n 6 Qui-Gon Jinn           193    89 male  Human     &lt;chr [1]&gt;\n 7 Dooku                  193    80 male  Human     &lt;chr [2]&gt;\n 8 Wat Tambor             193    48 male  Skakoan   &lt;chr [1]&gt;\n 9 Nute Gunray            191    90 male  Neimodian &lt;chr [3]&gt;\n10 Bail Prestor Organa    191    NA male  Human     &lt;chr [2]&gt;\n# ℹ 60 more rows\n\n#用逗号分隔多个提取条件\nstarwars_selected %&gt;% \n    filter(height &lt; 200, species == \"Human\")  %&gt;% \n    arrange(desc(height))\n\n# A tibble: 30 × 6\n   name                height  mass sex   species films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;list&gt;   \n 1 Qui-Gon Jinn           193  89   male  Human   &lt;chr [1]&gt;\n 2 Dooku                  193  80   male  Human   &lt;chr [2]&gt;\n 3 Bail Prestor Organa    191  NA   male  Human   &lt;chr [2]&gt;\n 4 Anakin Skywalker       188  84   male  Human   &lt;chr [3]&gt;\n 5 Mace Windu             188  84   male  Human   &lt;chr [3]&gt;\n 6 Raymus Antilles        188  79   male  Human   &lt;chr [2]&gt;\n 7 Gregar Typho           185  85   male  Human   &lt;chr [1]&gt;\n 8 Biggs Darklighter      183  84   male  Human   &lt;chr [1]&gt;\n 9 Boba Fett              183  78.2 male  Human   &lt;chr [3]&gt;\n10 Cliegg Lars            183  NA   male  Human   &lt;chr [1]&gt;\n# ℹ 20 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\nstarwars_selected %&gt;% \n    filter((species == \"Human\"|species == \"Droid\") & \n         height &lt; 200 ) %&gt;% \n    arrange(desc(height))\n\n# A tibble: 34 × 6\n   name                height  mass sex   species films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;list&gt;   \n 1 Qui-Gon Jinn           193  89   male  Human   &lt;chr [1]&gt;\n 2 Dooku                  193  80   male  Human   &lt;chr [2]&gt;\n 3 Bail Prestor Organa    191  NA   male  Human   &lt;chr [2]&gt;\n 4 Anakin Skywalker       188  84   male  Human   &lt;chr [3]&gt;\n 5 Mace Windu             188  84   male  Human   &lt;chr [3]&gt;\n 6 Raymus Antilles        188  79   male  Human   &lt;chr [2]&gt;\n 7 Gregar Typho           185  85   male  Human   &lt;chr [1]&gt;\n 8 Biggs Darklighter      183  84   male  Human   &lt;chr [1]&gt;\n 9 Boba Fett              183  78.2 male  Human   &lt;chr [3]&gt;\n10 Cliegg Lars            183  NA   male  Human   &lt;chr [1]&gt;\n# ℹ 24 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#%in% 属于\nstarwars_selected %&gt;% \n    filter((species %in% c(\"Human\",\"Droid\")) & \n         height &lt; 200 ) %&gt;% \n    arrange(desc(height)) \n\n# A tibble: 34 × 6\n   name                height  mass sex   species films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;list&gt;   \n 1 Qui-Gon Jinn           193  89   male  Human   &lt;chr [1]&gt;\n 2 Dooku                  193  80   male  Human   &lt;chr [2]&gt;\n 3 Bail Prestor Organa    191  NA   male  Human   &lt;chr [2]&gt;\n 4 Anakin Skywalker       188  84   male  Human   &lt;chr [3]&gt;\n 5 Mace Windu             188  84   male  Human   &lt;chr [3]&gt;\n 6 Raymus Antilles        188  79   male  Human   &lt;chr [2]&gt;\n 7 Gregar Typho           185  85   male  Human   &lt;chr [1]&gt;\n 8 Biggs Darklighter      183  84   male  Human   &lt;chr [1]&gt;\n 9 Boba Fett              183  78.2 male  Human   &lt;chr [3]&gt;\n10 Cliegg Lars            183  NA   male  Human   &lt;chr [1]&gt;\n# ℹ 24 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#filter(!is.na(height))保留height没有缺失值的个案\nstarwars_selected %&gt;% \n  arrange(desc(height)) %&gt;% \n  filter(!is.na(height))\n\n# A tibble: 81 × 6\n   name         height  mass sex    species  films    \n   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;list&gt;   \n 1 Yarael Poof     264    NA male   Quermian &lt;chr [1]&gt;\n 2 Tarfful         234   136 male   Wookiee  &lt;chr [1]&gt;\n 3 Lama Su         229    88 male   Kaminoan &lt;chr [1]&gt;\n 4 Chewbacca       228   112 male   Wookiee  &lt;chr [5]&gt;\n 5 Roos Tarpals    224    82 male   Gungan   &lt;chr [1]&gt;\n 6 Grievous        216   159 male   Kaleesh  &lt;chr [1]&gt;\n 7 Taun We         213    NA female Kaminoan &lt;chr [1]&gt;\n 8 Rugor Nass      206    NA male   Gungan   &lt;chr [1]&gt;\n 9 Tion Medon      206    80 male   Pau'an   &lt;chr [1]&gt;\n10 Darth Vader     202   136 male   Human    &lt;chr [4]&gt;\n# ℹ 71 more rows"
  },
  {
    "objectID": "5dplyr.html#slice",
    "href": "5dplyr.html#slice",
    "title": "Data Manipulation with dplyr",
    "section": "slice()",
    "text": "slice()\nslice() lets you index rows by their (integer) locations. It allows you to select, remove, and duplicate rows.\nslice_min() and slice_max() select rows with highest or lowest values of a variable.\n\n#提取第5到第10行\nstarwars %&gt;% slice(5:10)\n\n# A tibble: 6 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Leia Org…    150    49 brown      light      brown             19 fema… femin…\n2 Owen Lars    178   120 brown, gr… light      blue              52 male  mascu…\n3 Beru Whi…    165    75 brown      light      blue              47 fema… femin…\n4 R5-D4         97    32 &lt;NA&gt;       white, red red               NA none  mascu…\n5 Biggs Da…    183    84 black      light      brown             24 male  mascu…\n6 Obi-Wan …    182    77 auburn, w… fair       blue-gray         57 male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#提取前3行\nstarwars %&gt;% slice_head(n = 3)\n\n# A tibble: 3 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Luke Sky…    172    77 blond      fair       blue              19 male  mascu…\n2 C-3PO        167    75 &lt;NA&gt;       gold       yellow           112 none  mascu…\n3 R2-D2         96    32 &lt;NA&gt;       white, bl… red               33 none  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#提取后3行\nstarwars %&gt;% slice_tail(n = 3)\n\n# A tibble: 3 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 BB8           NA    NA none       none       black             NA none  mascu…\n2 Captain …     NA    NA unknown    unknown    unknown           NA &lt;NA&gt;  &lt;NA&gt;  \n3 Padmé Am…    165    45 brown      light      brown             46 fema… femin…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#随机抽样3行\nstarwars %&gt;% slice_sample(n = 5)\n\n# A tibble: 5 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Ric Olié     183    NA brown      fair       blue              NA &lt;NA&gt;  &lt;NA&gt;  \n2 Wat Tamb…    193    48 none       green, gr… unknown           NA male  mascu…\n3 Mon Moth…    150    NA auburn     fair       blue              48 fema… femin…\n4 Jabba De…    175  1358 &lt;NA&gt;       green-tan… orange           600 herm… mascu…\n5 Ackbar       180    83 none       brown mot… orange            41 male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#随机抽样比例0.1\nstarwars %&gt;% slice_sample(prop = 0.1)\n\n# A tibble: 8 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Bossk        190   113 none       green      red               53 male  mascu…\n2 Jabba De…    175  1358 &lt;NA&gt;       green-tan… orange           600 herm… mascu…\n3 Padmé Am…    165    45 brown      light      brown             46 fema… femin…\n4 Tarfful      234   136 brown      brown      blue              NA male  mascu…\n5 Captain …     NA    NA unknown    unknown    unknown           NA &lt;NA&gt;  &lt;NA&gt;  \n6 Obi-Wan …    182    77 auburn, w… fair       blue-gray         57 male  mascu…\n7 C-3PO        167    75 &lt;NA&gt;       gold       yellow           112 none  mascu…\n8 Ki-Adi-M…    198    82 white      pale       yellow            92 male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#切取某个变量最大或最小的几个个案\nstarwars %&gt;%\n  filter(!is.na(height)) %&gt;%\n  slice_max(height, n = 3)\n\n# A tibble: 3 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Yarael P…    264    NA none       white      yellow            NA male  mascu…\n2 Tarfful      234   136 brown      brown      blue              NA male  mascu…\n3 Lama Su      229    88 none       grey       black             NA male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#distinct",
    "href": "5dplyr.html#distinct",
    "title": "Data Manipulation with dplyr",
    "section": "distinct()",
    "text": "distinct()\n剔除重复的行。\n\n## 剔除所有列的值都相同的行\ndf4 &lt;- data.frame(ID =c(1,2,3,4,2),\n                  name = c(\"John\",\"Bill\",\"Jim\",\"Kate\", \"Bill\"))\ndf4\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n5  2 Bill\n\ndf4 &lt;- distinct(df4)\ndf4\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n\n\n\n## 剔除某一列的值相同的行\ndf5 &lt;- data.frame(ID =c(1,2,3,4,2),\n                  name = c(\"John\",\"Bill\",\"Jim\",\"Kate\", \"Alex\"))\ndf5\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n5  2 Alex\n\ndf5 &lt;- distinct(df5, ID,.keep_all = TRUE)\ndf5\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n\nunique(df4)\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate"
  },
  {
    "objectID": "5dplyr.html#count",
    "href": "5dplyr.html#count",
    "title": "Data Manipulation with dplyr",
    "section": "count()",
    "text": "count()\nThe simple way you can aggregate data is to count it: to find out the number of observations.\n\nstarwars %&gt;% \n  count()\n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1    87\n\n#按性别计数\nstarwars %&gt;% \n  count(sex)\n\n# A tibble: 5 × 2\n  sex                n\n  &lt;chr&gt;          &lt;int&gt;\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 &lt;NA&gt;               4\n\n#计数和排序\nstarwars %&gt;% \n  count(sex, sort = TRUE)\n\n# A tibble: 5 × 2\n  sex                n\n  &lt;chr&gt;          &lt;int&gt;\n1 male              60\n2 female            16\n3 none               6\n4 &lt;NA&gt;               4\n5 hermaphroditic     1\n\n#按性别分组，各组个案的体重之和\nstarwars %&gt;% \n  count(sex, wt = mass, sort = TRUE)\n\n# A tibble: 5 × 2\n  sex                n\n  &lt;chr&gt;          &lt;dbl&gt;\n1 male           3564.\n2 hermaphroditic 1358 \n3 female          492.\n4 none            279 \n5 &lt;NA&gt;             48"
  },
  {
    "objectID": "5dplyr.html#group_by",
    "href": "5dplyr.html#group_by",
    "title": "Data Manipulation with dplyr",
    "section": "group_by()",
    "text": "group_by()\n对个案分组。"
  },
  {
    "objectID": "5dplyr.html#summarize",
    "href": "5dplyr.html#summarize",
    "title": "Data Manipulation with dplyr",
    "section": "summarize()",
    "text": "summarize()\nsummarise() and summarize() are synonyms.\nsummary functions\n\nsum()\nmean()\nmedian()\nmin()\nmax()\nn()\n\n\nstarwars_selected %&gt;% \n  filter(height != \"NA\", mass != \"NA\", sex != \"NA\") %&gt;% \n  group_by(sex) %&gt;% \n  summarize(number = n(), median_height = median(height), \n            median_weight = median(mass)) %&gt;% \n  arrange(desc(number))\n\n# A tibble: 4 × 4\n  sex            number median_height median_weight\n  &lt;chr&gt;           &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1 male               44           183          80  \n2 female              9           168          55  \n3 none                4           132          53.5\n4 hermaphroditic      1           175        1358"
  },
  {
    "objectID": "5dplyr.html#top_n",
    "href": "5dplyr.html#top_n",
    "title": "Data Manipulation with dplyr",
    "section": "top_n()",
    "text": "top_n()\n\nstarwars_selected %&gt;% \n  filter(height != \"NA\", mass != \"NA\", sex != \"NA\") %&gt;% \n  group_by(sex) %&gt;% \n  top_n(1,height)\n\n# A tibble: 4 × 6\n# Groups:   sex [4]\n  name                  height  mass sex            species    films    \n  &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;      &lt;list&gt;   \n1 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt       &lt;chr [3]&gt;\n2 IG-88                    200   140 none           Droid      &lt;chr [1]&gt;\n3 Adi Gallia               184    50 female         Tholothian &lt;chr [2]&gt;\n4 Tarfful                  234   136 male           Wookiee    &lt;chr [1]&gt;\n\nstarwars_selected %&gt;% \n  filter(height != \"NA\", mass != \"NA\", sex != \"NA\") %&gt;% \n  group_by(sex) %&gt;% \n  top_n(2,mass) %&gt;% \n  arrange(sex)\n\n# A tibble: 8 × 6\n# Groups:   sex [4]\n  name                  height  mass sex            species films    \n  &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;list&gt;   \n1 Beru Whitesun lars       165    75 female         Human   &lt;chr [3]&gt;\n2 Shaak Ti                 178    57 female         Togruta &lt;chr [2]&gt;\n3 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt    &lt;chr [3]&gt;\n4 Darth Vader              202   136 male           Human   &lt;chr [4]&gt;\n5 Grievous                 216   159 male           Kaleesh &lt;chr [1]&gt;\n6 Tarfful                  234   136 male           Wookiee &lt;chr [1]&gt;\n7 C-3PO                    167    75 none           Droid   &lt;chr [6]&gt;\n8 IG-88                    200   140 none           Droid   &lt;chr [1]&gt;"
  },
  {
    "objectID": "5dplyr.html#缺失值-missing-data",
    "href": "5dplyr.html#缺失值-missing-data",
    "title": "Data Manipulation with dplyr",
    "section": "缺失值 Missing data",
    "text": "缺失值 Missing data\n\n#有missing data, 无法计算均值\nmean(starwars$height)\n\n[1] NA\n\nmean(starwars$height,na.rm = TRUE)\n\n[1] 174.358\n\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  na.omit()\n\n# A tibble: 73 × 4\n   name               gender    hair_color    height\n   &lt;chr&gt;              &lt;chr&gt;     &lt;chr&gt;          &lt;int&gt;\n 1 Luke Skywalker     masculine blond            172\n 2 Darth Vader        masculine none             202\n 3 Leia Organa        feminine  brown            150\n 4 Owen Lars          masculine brown, grey      178\n 5 Beru Whitesun lars feminine  brown            165\n 6 Biggs Darklighter  masculine black            183\n 7 Obi-Wan Kenobi     masculine auburn, white    182\n 8 Anakin Skywalker   masculine blond            188\n 9 Wilhuff Tarkin     masculine auburn, grey     180\n10 Chewbacca          masculine brown            228\n# ℹ 63 more rows\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n# 查看有缺失值的个案\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  filter(!complete.cases(.)) \n\n# A tibble: 14 × 4\n   name                  gender    hair_color height\n   &lt;chr&gt;                 &lt;chr&gt;     &lt;chr&gt;       &lt;int&gt;\n 1 C-3PO                 masculine &lt;NA&gt;          167\n 2 R2-D2                 masculine &lt;NA&gt;           96\n 3 R5-D4                 masculine &lt;NA&gt;           97\n 4 Greedo                masculine &lt;NA&gt;          173\n 5 Jabba Desilijic Tiure masculine &lt;NA&gt;          175\n 6 Arvel Crynyd          masculine brown          NA\n 7 Ric Olié              &lt;NA&gt;      brown         183\n 8 Quarsh Panaka         &lt;NA&gt;      black         183\n 9 Sly Moore             &lt;NA&gt;      none          178\n10 Finn                  masculine black          NA\n11 Rey                   feminine  brown          NA\n12 Poe Dameron           masculine brown          NA\n13 BB8                   masculine none           NA\n14 Captain Phasma        &lt;NA&gt;      unknown        NA\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  filter(!complete.cases(.)) %&gt;% \n  drop_na(height)\n\n# A tibble: 8 × 4\n  name                  gender    hair_color height\n  &lt;chr&gt;                 &lt;chr&gt;     &lt;chr&gt;       &lt;int&gt;\n1 C-3PO                 masculine &lt;NA&gt;          167\n2 R2-D2                 masculine &lt;NA&gt;           96\n3 R5-D4                 masculine &lt;NA&gt;           97\n4 Greedo                masculine &lt;NA&gt;          173\n5 Jabba Desilijic Tiure masculine &lt;NA&gt;          175\n6 Ric Olié              &lt;NA&gt;      brown         183\n7 Quarsh Panaka         &lt;NA&gt;      black         183\n8 Sly Moore             &lt;NA&gt;      none          178\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  filter(complete.cases(.)) %&gt;% \n  mutate(hair_color2 = replace_na(hair_color, \"none\"))\n\n# A tibble: 73 × 5\n   name               gender    hair_color    height hair_color2  \n   &lt;chr&gt;              &lt;chr&gt;     &lt;chr&gt;          &lt;int&gt; &lt;chr&gt;        \n 1 Luke Skywalker     masculine blond            172 blond        \n 2 Darth Vader        masculine none             202 none         \n 3 Leia Organa        feminine  brown            150 brown        \n 4 Owen Lars          masculine brown, grey      178 brown, grey  \n 5 Beru Whitesun lars feminine  brown            165 brown        \n 6 Biggs Darklighter  masculine black            183 black        \n 7 Obi-Wan Kenobi     masculine auburn, white    182 auburn, white\n 8 Anakin Skywalker   masculine blond            188 blond        \n 9 Wilhuff Tarkin     masculine auburn, grey     180 auburn, grey \n10 Chewbacca          masculine brown            228 brown        \n# ℹ 63 more rows\n\nstarwars         \n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#本章作业",
    "href": "5dplyr.html#本章作业",
    "title": "Data Manipulation with dplyr",
    "section": "本章作业",
    "text": "本章作业\n数据集：mpg {ggplot2}\n\n用select()函数从mpg提取5个变量⽣成新的数据框。\n用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。\n任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n提交要求：R script"
  },
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "L3.html",
    "href": "L3.html",
    "title": "第3讲",
    "section": "",
    "text": "讲义\n\n\nR绘制直方图：hist函数的运用\nR 直方图中如何自定义组数和组距？\n箱线图 boxplot函数\nR 条形图 barplot函数\n散点图的绘制——R中的plot函数\n\n\n\n讲义"
  },
  {
    "objectID": "L3.html#教学视频",
    "href": "L3.html#教学视频",
    "title": "第3讲",
    "section": "",
    "text": "R绘制直方图：hist函数的运用\nR 直方图中如何自定义组数和组距？\n箱线图 boxplot函数\nR 条形图 barplot函数\n散点图的绘制——R中的plot函数"
  },
  {
    "objectID": "L3.html#习题讲评",
    "href": "L3.html#习题讲评",
    "title": "第3讲",
    "section": "",
    "text": "讲义"
  },
  {
    "objectID": "L6.html",
    "href": "L6.html",
    "title": "第6讲",
    "section": "",
    "text": "讲义6.1 描述统计量的计算\n讲义6.1 绘制概率密度曲线\n\n\nR描述统计量的批量计算describe函数\nR计算分位数quantile函数\n利用R绘制正态分布概率密度曲线\nR中rchisq函数和for循环的应用——不同自由度下的卡方分布比较\n\n\n\n第6讲习题答案Script\n\n\n\nR如何快速预览变量分布？summarytools::dfSummary()\nR描述统计输出结果的表格化及导出到word文档"
  },
  {
    "objectID": "L6.html#教学视频",
    "href": "L6.html#教学视频",
    "title": "第6讲",
    "section": "",
    "text": "R描述统计量的批量计算describe函数\nR计算分位数quantile函数\n利用R绘制正态分布概率密度曲线\nR中rchisq函数和for循环的应用——不同自由度下的卡方分布比较"
  },
  {
    "objectID": "L6.html#习题答案",
    "href": "L6.html#习题答案",
    "title": "第6讲",
    "section": "",
    "text": "第6讲习题答案Script"
  },
  {
    "objectID": "L6.html#拓展资源",
    "href": "L6.html#拓展资源",
    "title": "第6讲",
    "section": "",
    "text": "R如何快速预览变量分布？summarytools::dfSummary()\nR描述统计输出结果的表格化及导出到word文档"
  },
  {
    "objectID": "script5.html",
    "href": "script5.html",
    "title": "第5讲 tidyverse",
    "section": "",
    "text": "“Tidy datasets are all alike, but every messy dataset is messy in its own way.” — Hadley Wickham\nref: R for Data Science\n# install.packages(\"nycflights13\")\n# install.packages(\"dlookr\")\n# install.packages(\"flextable\")\n\nlibrary(nycflights13)\nlibrary(dlookr)\n\nRegistered S3 methods overwritten by 'dlookr':\n  method          from  \n  plot.transform  scales\n  print.transform scales\n\n\n\nAttaching package: 'dlookr'\n\n\nThe following object is masked from 'package:nycflights13':\n\n    flights\n\n\nThe following object is masked from 'package:base':\n\n    transform\n\nlibrary(flextable)"
  },
  {
    "objectID": "script5.html#dplyr函数的共性",
    "href": "script5.html#dplyr函数的共性",
    "title": "第5讲 tidyverse",
    "section": "3.1 dplyr函数的共性",
    "text": "3.1 dplyr函数的共性\n第1项参数是data frame.\n第2项参数描述动作。\n输出结果是一个新的data frame."
  },
  {
    "objectID": "script5.html#dplyr函数的分类",
    "href": "script5.html#dplyr函数的分类",
    "title": "第5讲 tidyverse",
    "section": "3.2 dplyr函数的分类",
    "text": "3.2 dplyr函数的分类\n\n行的管理 Rows:\n\nfilter() chooses rows based on column values.\narrange() changes the order of the rows.\ndistinct() removes duplicate rows.\nna.omit() removes rows with missing values.\ndrop.na() removes rows with missing values.\nslice() chooses rows based on location.\n\n列的管理 Columns:\n\nmutate() changes the values of columns and creates new columns.\nselect() changes whether or not a column is included.\nrename() changes the name of columns.\nif_else() changes the values of columns based on a condition.\ncase_when() changes the values of columns based on multiple conditions.\nrecode() changes the values of columns based on a condition.\nrelocate() changes the order of the columns.\n\n行组的管理Groups of rows:\n\nsummarise() collapses a group into a single row.\ncount()\ntop_n()"
  },
  {
    "objectID": "script5.html#rows",
    "href": "script5.html#rows",
    "title": "第5讲 tidyverse",
    "section": "3.3 Rows",
    "text": "3.3 Rows\n\n3.3.1 保留filter()\n\nflights %&gt;%  \n  filter(dep_delay &gt; 120) #保留dep_delay大于120的行\n\n# A tibble: 81 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    10     4     2343           2030       193      121           2251\n 2  2013     3    12     1819           1600       139     1945           1739\n 3  2013     6    26     1626           1415       131     1856           1655\n 4  2013     9    20     1307           1030       157     1607           1350\n 5  2013     7    21       20           2119       181      234           2354\n 6  2013     7    10      251           1900       471      804           2216\n 7  2013     5    23     2300           1925       215      141           2219\n 8  2013     7     1     1544           1142       242     1717           1336\n 9  2013     7    22      104           1859       365      305           2121\n10  2013     7     9     2057           1849       128     2315           2104\n# ℹ 71 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n&gt;=（大于或等于）\n&lt;（小于）\n&lt;=（小于或等于）\n==（等于）\n!=（不等于）\n& 或 or, 来表示”和”（同时检查两个条件）\n| 来表示”或”（检查任一条件）\n\nflights %&gt;% \n  filter(month == 1 & day == 1) #筛选出1月1日的航班\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1     1656           1700        -4     1941           1955\n2  2013     1     1      926            928        -2     1233           1220\n3  2013     1     1     1653           1700        -7     2005           2018\n4  2013     1     1     1400           1250        70     1645           1502\n5  2013     1     1      937            940        -3     1238           1235\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month == 1 | month == 2) #筛选出1月或2月的航班\n\n# A tibble: 464 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     2    17       NA           1500        NA       NA           1653\n 2  2013     2    24     1425           1400        25     1558           1513\n 3  2013     2    15     1501           1505        -4     1707           1700\n 4  2013     2    13     2033           2000        33     2138           2125\n 5  2013     1    17     1823           1703        80     2006           1810\n 6  2013     1     6     1827           1830        -3     2201           2205\n 7  2013     2    10     1508           1432        36     1642           1609\n 8  2013     2     1      816            825        -9      950            945\n 9  2013     1    26     1052           1039        13     1336           1330\n10  2013     2    22     1526           1458        28     1850           1816\n# ℹ 454 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month %in% c(1, 2)) #筛选出1月或2月的航班\n\n# A tibble: 464 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     2    17       NA           1500        NA       NA           1653\n 2  2013     2    24     1425           1400        25     1558           1513\n 3  2013     2    15     1501           1505        -4     1707           1700\n 4  2013     2    13     2033           2000        33     2138           2125\n 5  2013     1    17     1823           1703        80     2006           1810\n 6  2013     1     6     1827           1830        -3     2201           2205\n 7  2013     2    10     1508           1432        36     1642           1609\n 8  2013     2     1      816            825        -9      950            945\n 9  2013     1    26     1052           1039        13     1336           1330\n10  2013     2    22     1526           1458        28     1850           1816\n# ℹ 454 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n注意：当你运行 filter() 时，dplyr 执行过滤操作，创建一个新的数据框，然后打印它。它不会修改现有的 flights 数据集，因为 dplyr 函数永远不会修改它们的输入。要保存结果，你需要使用赋值操作符，&lt;-\n\n#筛选出1月1日的航班,并保存到flights_jan1\nflights_jan1 &lt;- flights %&gt;% \n  filter(month == 1 & day == 1) \n\n常见错误\n\n# flights %&gt;% \n#   filter(month = 1) #错误，应该用==而不是=\n\n\n# flights %&gt;%\n#    filter(month == 1 | 2)  #错误，应该用month == 1 | month == 2\n\n\n\n3.3.2 排序arange()\n\nflights %&gt;% \n  arrange(year, month, day, dep_time) #按照year, month, day, dep_time排序\n\n# A tibble: 3,000 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      926            928        -2     1233           1220\n 2  2013     1     1      937            940        -3     1238           1235\n 3  2013     1     1     1400           1250        70     1645           1502\n 4  2013     1     1     1653           1700        -7     2005           2018\n 5  2013     1     1     1656           1700        -4     1941           1955\n 6  2013     1     2      634            630         4      806            810\n 7  2013     1     2      944            800       104     1051            914\n 8  2013     1     2     1737           1720        17     1908           1910\n 9  2013     1     2     1935           1856        39     2138           2103\n10  2013     1     2     2115           2059        16     2345           2316\n# ℹ 2,990 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights %&gt;% \n  arrange(desc(dep_delay)) #按照dep_time降序排序\n\n# A tibble: 3,000 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1    10     1121           1635      1126     1239           1810\n 2  2013     6    28      121           1659       502      329           1919\n 3  2013     7    10      251           1900       471      804           2216\n 4  2013     7    22      104           1859       365      305           2121\n 5  2013    11    22     2303           1724       339      122           1953\n 6  2013     6     2      219           2055       324      322           2230\n 7  2013     6    22      135           2029       306      412           2359\n 8  2013     4    10       51           1950       301      330           2311\n 9  2013    12    16     1629           1145       284     1817           1315\n10  2013    12     9     1654           1230       264     1928           1455\n# ℹ 2,990 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.3.3 去重distinct()\n\nflights %&gt;% \n  distinct() #去重\n\n# A tibble: 3,000 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     2    17       NA           1500        NA       NA           1653\n 6  2013     6    30      905            900         5     1200           1206\n 7  2013     9    15     1017           1025        -8     1245           1325\n 8  2013     5     7     1623           1627        -4     1819           1818\n 9  2013     3    14      703            645        18      854            846\n10  2013     9     4      739            740        -1     1030           1055\n# ℹ 2,990 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights %&gt;% \n  distinct(year, month, day) #按照year, month, day去重\n\n# A tibble: 365 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     6    17\n 2  2013    12    26\n 3  2013     8    26\n 4  2013     8    17\n 5  2013     2    17\n 6  2013     6    30\n 7  2013     9    15\n 8  2013     5     7\n 9  2013     3    14\n10  2013     9     4\n# ℹ 355 more rows\n\nflights %&gt;% \n  distinct(origin, dest) #按照origin, dest去重\n\n# A tibble: 194 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    LAS  \n 2 LGA    MCO  \n 3 EWR    SNA  \n 4 EWR    PBI  \n 5 EWR    CLT  \n 6 EWR    FLL  \n 7 LGA    DFW  \n 8 EWR    MEM  \n 9 JFK    SFO  \n10 LGA    ATL  \n# ℹ 184 more rows\n\n\n\n\n3.3.4 缺失值is.na()\n\nflights %&gt;% \n  filter(is.na(dep_time)) #保留dep_time为NA的行\n\n# A tibble: 82 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     2    17       NA           1500        NA       NA           1653\n 2  2013     4    17       NA            720        NA       NA           1003\n 3  2013     5    23       NA           2129        NA       NA           2356\n 4  2013     2     8       NA           1935        NA       NA           2233\n 5  2013    10     7       NA           2100        NA       NA           2235\n 6  2013     8     2       NA           1355        NA       NA           1550\n 7  2013    11     7       NA           1520        NA       NA           1726\n 8  2013     2    26       NA           1700        NA       NA           1839\n 9  2013     4    25       NA           1600        NA       NA           1720\n10  2013     2     8       NA           1510        NA       NA           1710\n# ℹ 72 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;% \n  filter(!is.na(dep_time)) #保留dep_time为NA的行\n\n# A tibble: 2,918 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     6    30      905            900         5     1200           1206\n 6  2013     9    15     1017           1025        -8     1245           1325\n 7  2013     5     7     1623           1627        -4     1819           1818\n 8  2013     3    14      703            645        18      854            846\n 9  2013     9     4      739            740        -1     1030           1055\n10  2013     7    31      853            853         0     1209           1212\n# ℹ 2,908 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.3.5 删除有缺失值的行na.omit()/drop_na()\n\nflights %&gt;% \n  na.omit() #删除含有NA的行\n\n# A tibble: 2,911 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     6    30      905            900         5     1200           1206\n 6  2013     9    15     1017           1025        -8     1245           1325\n 7  2013     5     7     1623           1627        -4     1819           1818\n 8  2013     3    14      703            645        18      854            846\n 9  2013     9     4      739            740        -1     1030           1055\n10  2013     7    31      853            853         0     1209           1212\n# ℹ 2,901 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  drop_na(dep_time, arr_time) #删除dep_time, arr_time为NA的行\n\n# A tibble: 2,913 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     6    30      905            900         5     1200           1206\n 6  2013     9    15     1017           1025        -8     1245           1325\n 7  2013     5     7     1623           1627        -4     1819           1818\n 8  2013     3    14      703            645        18      854            846\n 9  2013     9     4      739            740        -1     1030           1055\n10  2013     7    31      853            853         0     1209           1212\n# ℹ 2,903 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "script5.html#columns",
    "href": "script5.html#columns",
    "title": "第5讲 tidyverse",
    "section": "3.4 Columns",
    "text": "3.4 Columns\n\n3.4.1 追加变量mutate()\n\nflights %&gt;% \n  mutate(\n    gain = dep_delay - arr_delay, #计算gain\n    speed = air_time / distance * 60) #计算飞行速度\n\n# A tibble: 3,000 × 21\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     2    17       NA           1500        NA       NA           1653\n 6  2013     6    30      905            900         5     1200           1206\n 7  2013     9    15     1017           1025        -8     1245           1325\n 8  2013     5     7     1623           1627        -4     1819           1818\n 9  2013     3    14      703            645        18      854            846\n10  2013     9     4      739            740        -1     1030           1055\n# ℹ 2,990 more rows\n# ℹ 13 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, gain &lt;dbl&gt;, speed &lt;dbl&gt;\n\n\n\nflights %&gt;% \n  mutate(\n    gain = dep_delay - arr_delay, #计算gain\n    speed = air_time / distance * 60,\n    .before = 1) #将gain和speed放在第1列,第2列\n\n# A tibble: 3,000 × 21\n    gain speed  year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1    16  7.81  2013     6    17     1033           1040        -7     1246\n 2   -20  9.16  2013    12    26     1343           1329        14     1658\n 3    46  7.15  2013     8    26     1258           1218        40     1510\n 4    12  8.15  2013     8    17     1558           1600        -2     1835\n 5    NA NA     2013     2    17       NA           1500        NA       NA\n 6    11  8.56  2013     6    30      905            900         5     1200\n 7    32  7.99  2013     9    15     1017           1025        -8     1245\n 8    -5  8.25  2013     5     7     1623           1627        -4     1819\n 9    10  9.19  2013     3    14      703            645        18      854\n10    24  7.73  2013     9     4      739            740        -1     1030\n# ℹ 2,990 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;% \n  mutate(\n    gain = dep_delay - arr_delay, #计算gain\n    speed = air_time / distance * 60,\n    .after = day) #将gain和speed放在day列后\n\n# A tibble: 3,000 × 21\n    year month   day  gain speed dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013     6    17    16  7.81     1033           1040        -7     1246\n 2  2013    12    26   -20  9.16     1343           1329        14     1658\n 3  2013     8    26    46  7.15     1258           1218        40     1510\n 4  2013     8    17    12  8.15     1558           1600        -2     1835\n 5  2013     2    17    NA NA          NA           1500        NA       NA\n 6  2013     6    30    11  8.56      905            900         5     1200\n 7  2013     9    15    32  7.99     1017           1025        -8     1245\n 8  2013     5     7    -5  8.25     1623           1627        -4     1819\n 9  2013     3    14    10  9.19      703            645        18      854\n10  2013     9     4    24  7.73      739            740        -1     1030\n# ℹ 2,990 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n注意：当你运行 mutate() 时，dplyr 执行追加变量，创建一个新的数据框，然后打印它。它不会修改现有的 flights 数据集，因为 dplyr函数永远不会修改它们的输入。要保存结果，你需要使用赋值操作符，&lt;-\n\n\n3.4.2 选择变量select()\n\nflights %&gt;% \n  select(year, month, day) #选择year, month, day列\n\n# A tibble: 3,000 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     6    17\n 2  2013    12    26\n 3  2013     8    26\n 4  2013     8    17\n 5  2013     2    17\n 6  2013     6    30\n 7  2013     9    15\n 8  2013     5     7\n 9  2013     3    14\n10  2013     9     4\n# ℹ 2,990 more rows\n\nflights %&gt;% \n  select(year:day) #选择year到day列\n\n# A tibble: 3,000 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     6    17\n 2  2013    12    26\n 3  2013     8    26\n 4  2013     8    17\n 5  2013     2    17\n 6  2013     6    30\n 7  2013     9    15\n 8  2013     5     7\n 9  2013     3    14\n10  2013     9     4\n# ℹ 2,990 more rows\n\nflights %&gt;%\n  select(year:day, ends_with(\"delay\")) #选择year到day列和以delay结尾的列\n\n# A tibble: 3,000 × 5\n    year month   day dep_delay arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1  2013     6    17        -7       -23\n 2  2013    12    26        14        34\n 3  2013     8    26        40        -6\n 4  2013     8    17        -2       -14\n 5  2013     2    17        NA        NA\n 6  2013     6    30         5        -6\n 7  2013     9    15        -8       -40\n 8  2013     5     7        -4         1\n 9  2013     3    14        18         8\n10  2013     9     4        -1       -25\n# ℹ 2,990 more rows\n\nflights %&gt;%\n  select(!year:day) #选择除year到day列之外的列\n\n# A tibble: 3,000 × 16\n   dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier\n      &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;  \n 1     1033           1040        -7     1246           1309       -23 UA     \n 2     1343           1329        14     1658           1624        34 DL     \n 3     1258           1218        40     1510           1516        -6 UA     \n 4     1558           1600        -2     1835           1849       -14 B6     \n 5       NA           1500        NA       NA           1653        NA US     \n 6      905            900         5     1200           1206        -6 B6     \n 7     1017           1025        -8     1245           1325       -40 AA     \n 8     1623           1627        -4     1819           1818         1 EV     \n 9      703            645        18      854            846         8 US     \n10      739            740        -1     1030           1055       -25 VX     \n# ℹ 2,990 more rows\n# ℹ 9 more variables: flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  select(where(is.character)) #选择类型是字符串的列\n\n# A tibble: 3,000 × 4\n   carrier tailnum origin dest \n   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;\n 1 UA      N447UA  EWR    LAS  \n 2 DL      N373NW  LGA    MCO  \n 3 UA      N38727  EWR    SNA  \n 4 B6      N558JB  EWR    PBI  \n 5 US      &lt;NA&gt;    EWR    CLT  \n 6 B6      N807JB  EWR    FLL  \n 7 AA      N3KMAA  LGA    DFW  \n 8 EV      N14558  EWR    MEM  \n 9 US      N169UW  EWR    CLT  \n10 VX      N846VA  JFK    SFO  \n# ℹ 2,990 more rows\n\n\nThere are a number of helper functions you can use within select():\nstarts_with(“abc”): matches names that begin with “abc”.\nends_with(“xyz”): matches names that end with “xyz”.\ncontains(“ijk”): matches names that contain “ijk”.\nnum_range(“x”, 1:3): matches x1, x2 and x3.\n\n\n3.4.3 重命名变量rename()\n\nflights %&gt;% \n  rename(tail_num = tailnum) #将tailnum列重命名为tail_num\n\n# A tibble: 3,000 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     2    17       NA           1500        NA       NA           1653\n 6  2013     6    30      905            900         5     1200           1206\n 7  2013     9    15     1017           1025        -8     1245           1325\n 8  2013     5     7     1623           1627        -4     1819           1818\n 9  2013     3    14      703            645        18      854            846\n10  2013     9     4      739            740        -1     1030           1055\n# ℹ 2,990 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tail_num &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.4.4 二值转换if_else()\n\nflights %&gt;%\n  mutate(season = if_else(month %in% c(6, 7, 8), \"summer\", \"non-summer\"))\n\n# A tibble: 3,000 × 20\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     2    17       NA           1500        NA       NA           1653\n 6  2013     6    30      905            900         5     1200           1206\n 7  2013     9    15     1017           1025        -8     1245           1325\n 8  2013     5     7     1623           1627        -4     1819           1818\n 9  2013     3    14      703            645        18      854            846\n10  2013     9     4      739            740        -1     1030           1055\n# ℹ 2,990 more rows\n# ℹ 12 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, season &lt;chr&gt;\n\n\n\n\n3.4.5 多值转换case_when()\n\nflights |&gt; \n  mutate(\n    status = case_when(\n      is.na(arr_delay)      ~ \"cancelled\", #如果arr_delay为NA,则status为cancelled\n      arr_delay &lt; -30       ~ \"very early\",\n      arr_delay &lt; -15       ~ \"early\",\n      abs(arr_delay) &lt;= 15  ~ \"on time\",\n      arr_delay &lt; 60        ~ \"late\",\n      arr_delay &lt; Inf       ~ \"very late\",\n    ),\n    .keep = \"used\" #保留arr_delay列\n  )\n\n# A tibble: 3,000 × 2\n   arr_delay status    \n       &lt;dbl&gt; &lt;chr&gt;     \n 1       -23 early     \n 2        34 late      \n 3        -6 on time   \n 4       -14 on time   \n 5        NA cancelled \n 6        -6 on time   \n 7       -40 very early\n 8         1 on time   \n 9         8 on time   \n10       -25 early     \n# ℹ 2,990 more rows\n\n\n\n\n3.4.6 重新编码recode()\n\n# recode()函数 旧值 = 新值\nflights %&gt;%\n  mutate(season = recode(month,\n                         `1` = \"Winter\", `2` = \"Winter\", `12` = \"Winter\", \n                         `3` = \"Spring\", `4` = \"Spring\", `5` = \"Spring\",\n                         `6` = \"Summer\", `7` = \"Summer\", `8` = \"Summer\",\n                         `9` = \"Fall\", `10` = \"Fall\", `11` = \"Fall\"))\n\n# A tibble: 3,000 × 20\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     2    17       NA           1500        NA       NA           1653\n 6  2013     6    30      905            900         5     1200           1206\n 7  2013     9    15     1017           1025        -8     1245           1325\n 8  2013     5     7     1623           1627        -4     1819           1818\n 9  2013     3    14      703            645        18      854            846\n10  2013     9     4      739            740        -1     1030           1055\n# ℹ 2,990 more rows\n# ℹ 12 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, season &lt;chr&gt;\n\n\n\n\n3.4.7 前置变量relocate()\n\nflights %&gt;% \n  relocate(time_hour, air_time) #将time_hour, air_time放到最前面\n\n# A tibble: 3,000 × 19\n   time_hour           air_time  year month   day dep_time sched_dep_time\n   &lt;dttm&gt;                 &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1 2013-06-17 10:00:00      290  2013     6    17     1033           1040\n 2 2013-12-26 13:00:00      145  2013    12    26     1343           1329\n 3 2013-08-26 12:00:00      290  2013     8    26     1258           1218\n 4 2013-08-17 16:00:00      139  2013     8    17     1558           1600\n 5 2013-02-17 15:00:00       NA  2013     2    17       NA           1500\n 6 2013-06-30 09:00:00      152  2013     6    30      905            900\n 7 2013-09-15 10:00:00      185  2013     9    15     1017           1025\n 8 2013-05-07 16:00:00      130  2013     5     7     1623           1627\n 9 2013-03-14 06:00:00       81  2013     3    14      703            645\n10 2013-09-04 07:00:00      333  2013     9     4      739            740\n# ℹ 2,990 more rows\n# ℹ 12 more variables: dep_delay &lt;dbl&gt;, arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;,\n#   arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;"
  },
  {
    "objectID": "script5.html#the-pipe",
    "href": "script5.html#the-pipe",
    "title": "第5讲 tidyverse",
    "section": "3.5 The pipe",
    "text": "3.5 The pipe\n\nflights |&gt; \n  filter(dest == \"IAH\") |&gt; \n  mutate(speed = distance / air_time * 60) |&gt; \n  select(year:day, dep_time, carrier, flight, speed) |&gt; \n  arrange(desc(speed))\n\n# A tibble: 64 × 7\n    year month   day dep_time carrier flight speed\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt; &lt;chr&gt;    &lt;int&gt; &lt;dbl&gt;\n 1  2013     9     3      742 UA         559  503.\n 2  2013     8    25     1908 UA        1744  497.\n 3  2013     9    11     1419 UA        1695  488.\n 4  2013     8    28     1334 UA        1565  483.\n 5  2013     4    29     2027 UA         301  480 \n 6  2013     7    31      542 UA         698  477.\n 7  2013     3     3     1904 UA        1128  475.\n 8  2013     6    26     1626 UA        1108  469.\n 9  2013     8    11      642 UA        1591  462.\n10  2013     6    10     2125 UA         380  462.\n# ℹ 54 more rows"
  },
  {
    "objectID": "script5.html#groups",
    "href": "script5.html#groups",
    "title": "第5讲 tidyverse",
    "section": "3.6 Groups",
    "text": "3.6 Groups\n\n3.6.1 group_by()\n\nflights %&gt;% \n  group_by(month) #按照month分组\n\n# A tibble: 3,000 × 19\n# Groups:   month [12]\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     6    17     1033           1040        -7     1246           1309\n 2  2013    12    26     1343           1329        14     1658           1624\n 3  2013     8    26     1258           1218        40     1510           1516\n 4  2013     8    17     1558           1600        -2     1835           1849\n 5  2013     2    17       NA           1500        NA       NA           1653\n 6  2013     6    30      905            900         5     1200           1206\n 7  2013     9    15     1017           1025        -8     1245           1325\n 8  2013     5     7     1623           1627        -4     1819           1818\n 9  2013     3    14      703            645        18      854            846\n10  2013     9     4      739            740        -1     1030           1055\n# ℹ 2,990 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\ngroup_by() 不会改变数据，但输出显示它是按“月份”分组的。这意味着随后的操作现在将“按月”进行。group_by() 为数据框添加了这个分组特征，这改变了随后应用于数据的动作。\n\n\n3.6.2 summarize()\n\nflights %&gt;% \n  group_by(month) %&gt;% \n  summarise(avg_delay = mean(dep_delay)) #按照month分组，计算dep_delay的均值\n\n# A tibble: 12 × 2\n   month avg_delay\n   &lt;int&gt;     &lt;dbl&gt;\n 1     1        NA\n 2     2        NA\n 3     3        NA\n 4     4        NA\n 5     5        NA\n 6     6        NA\n 7     7        NA\n 8     8        NA\n 9     9        NA\n10    10        NA\n11    11        NA\n12    12        NA\n\n\nNA: missing value\n当向量中有NA，mean()函数默认返回NA，如果想忽略NA值，可以使用na.rm = TRUE\n\nflights %&gt;% \n  group_by(month) %&gt;% \n  summarise(avg_delay = mean(dep_delay, na.rm = TRUE), #na.rm = TRUE表示忽略NA值\n            n = n()\n  ) #按照month分组，计算dep_delay的均值和n\n\n# A tibble: 12 × 3\n   month avg_delay     n\n   &lt;int&gt;     &lt;dbl&gt; &lt;int&gt;\n 1     1     13.2    235\n 2     2     12.3    229\n 3     3     14.0    269\n 4     4     13.5    250\n 5     5     10.4    252\n 6     6     20.0    248\n 7     7     27.8    265\n 8     8     11.5    251\n 9     9      4.84   251\n10    10      8.76   264\n11    11      8.95   225\n12    12     17.1    261\n\n\n\n# 统计每天的航班数量\nflights %&gt;% \n  group_by(year, month, day) %&gt;% \n  summarise(n = n(),\n            .groups = \"drop\") #按照year, month, day分组，计算n\n\n# A tibble: 365 × 4\n    year month   day     n\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1     5\n 2  2013     1     2     5\n 3  2013     1     3     8\n 4  2013     1     4     7\n 5  2013     1     5     6\n 6  2013     1     6     8\n 7  2013     1     7    11\n 8  2013     1     8     9\n 9  2013     1     9     8\n10  2013     1    10     7\n# ℹ 355 more rows\n\n\n\n\n3.6.3 .by\n\nflights %&gt;% \n  summarize(delay = mean(dep_delay, na.rm = TRUE),\n            n = n(),\n            .by = month \n  ) #按月份分组，计算dep_delay的均值和n\n\n# A tibble: 12 × 3\n   month delay     n\n   &lt;int&gt; &lt;dbl&gt; &lt;int&gt;\n 1     6 20.0    248\n 2    12 17.1    261\n 3     8 11.5    251\n 4     2 12.3    229\n 5     9  4.84   251\n 6     5 10.4    252\n 7     3 14.0    269\n 8     7 27.8    265\n 9     4 13.5    250\n10    10  8.76   264\n11    11  8.95   225\n12     1 13.2    235\n\nflights %&gt;% \n  summarize(ave_delay = mean(dep_delay, na.rm = TRUE),\n            n = n(),\n            .by = c(origin, dest)\n  ) %&gt;% #按出发地和目的地分组，计算dep_delay的均值和n\n  arrange(ave_delay) #按ave_delay排序\n\n# A tibble: 194 × 4\n   origin dest  ave_delay     n\n   &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;int&gt;\n 1 LGA    GSP      -15        1\n 2 JFK    EGE       -9        1\n 3 JFK    PSE       -8.67     3\n 4 LGA    PHL       -8        1\n 5 LGA    TYS       -7.67     5\n 6 JFK    MVY       -7        2\n 7 EWR    SBN       -7        1\n 8 LGA    CVG       -7        1\n 9 EWR    GRR       -7        2\n10 LGA    RIC       -6.67     6\n# ℹ 184 more rows"
  },
  {
    "objectID": "L5.html",
    "href": "L5.html",
    "title": "第5讲",
    "section": "",
    "text": "代码\n\n\n函数select()和mutate()\n函数if_else()对变量值进行条件转换\n函数filter()筛选个案\n如何删除含有缺失值的个案？\n\n\n\n\n\n第1题至第2题\n\n第1题：数据 mpg {ggplot2}\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n1.4 设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n提交R script代码。\n习题2 :数据nycflights13::flights\n2.1 根据distance的远近，将航班分为短途、中途和长途三个类别。创建新变量distance_group,其值为”short”, “medium”, “long”。统计每个类别的航班数量。\n短途飞行（Short-haul flight）：飞行距离少于500英里的航班。\n中途飞行（Medium-haul flight）：飞行距离在500到1,550英里之间的航班。\n长途飞行（Long-haul flight）：飞行距离超过1,550英里的航班\n2.2 如果你想尽可能避免延误，你应该选择哪个时间段起飞的航班？\n2.3 哪个航空公司(carrier)的航班平均延误时间最长？\n\n\n\n\n\n第1题\n\n第1题\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gt)\n\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n\n#library(gt)\ndata(mpg)\n\nmpg %&gt;% \n  select(manufacturer:cyl) %&gt;% \n  head() #查看前6行\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(1:5) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(4,5,7:9) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\nmpg %&gt;% \n  select(year,cyl,drv:hwy) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\n\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。(1 miles per gallon = 0.425 kilometers per liter)\n\nmpgnew &lt;- mpg %&gt;% mutate(cty.kpl = 0.425*cty, \n               hwy.kpl = 0.425*hwy)\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ncty.kpl\nhwy.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n7.650\n12.325\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n8.925\n12.325\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n8.500\n13.175\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n8.925\n12.750\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n6.800\n11.050\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n7.650\n11.050\n\n\n\n\n\n\n\nmpg$hwy.kpl &lt;- 0.425*mpg$hwy\nmpg$cty.kpl &lt;- 0.425*mpg$cty\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\n\n\n\n\n\n\n\n\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n\nmpgnew &lt;- mpg %&gt;% \n  mutate(transmission = \n           if_else(substring(trans, 1,4) == \"auto\", \n                   \"auto\",\"manual\"))\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\n\n\n\n\n\n\n\n#二值转换 if_else\n\nmpg$transmission &lt;- if_else(\n  substring(mpg$trans, 1,4) == \"auto\", \n  \"auto\",\"manual\") \n\n#多值转换 case_when\nmpg$drive &lt;- case_when(\n  mpg$drv == \"f\" ~ \"front-wheel\",\n  mpg$drv == \"r\" ~ \"rear-wheel\",\n  mpg$drv == \"4\" ~ \"four-wheel\")\n\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\nfront-wheel\n\n\n\n\n\n\n\n\n1.4 设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n\n# the & operator is used to combine two conditions, where both conditions must be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" & \n           cyl == 8 & \n          year == 2008) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n6.375\n4.675\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n7.225\n5.100\nauto\nrear-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n8.075\n5.950\nauto\nfour-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n5.950\n4.675\nauto\nfour-wheel\n\n\n\n\n\n\n\nmpg %&gt;% \n  filter(substr(trans, 1, 4) == \"auto\" & \n        class %in% c(\"compact\", \"subcompact\") &\n          !fl %in% c(\"c\" ,\"d\" ,\"e\")) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n10.625\n6.800\nauto\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\n\n\n\n\n\n# the | operator combines the two conditions, where only one of the conditions needs to be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" | \n           cyl == 8 |\n          year == 2008)  %&gt;% \n  head() %&gt;% \n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n11.900\n8.500\nmanual\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\naudi\na4 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\ncompact\n10.625\n7.225\nauto\nfour-wheel\n\n\n\n\n\n\n\n\n\n\n\nR for Data Science 2nd edition https://r4ds.hadley.nz/data-tidy\nR如何快速预览变量分布？summarytools::dfSummary()"
  },
  {
    "objectID": "L5.html#教学视频",
    "href": "L5.html#教学视频",
    "title": "第5讲",
    "section": "",
    "text": "函数select()和mutate()\n函数if_else()对变量值进行条件转换\n函数filter()筛选个案\n如何删除含有缺失值的个案？"
  },
  {
    "objectID": "L5.html#本章习题",
    "href": "L5.html#本章习题",
    "title": "第5讲",
    "section": "",
    "text": "第1题至第2题\n\n第1题：数据 mpg {ggplot2}\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n1.4 设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n提交R script代码。\n习题2 :数据nycflights13::flights\n2.1 根据distance的远近，将航班分为短途、中途和长途三个类别。创建新变量distance_group,其值为”short”, “medium”, “long”。统计每个类别的航班数量。\n短途飞行（Short-haul flight）：飞行距离少于500英里的航班。\n中途飞行（Medium-haul flight）：飞行距离在500到1,550英里之间的航班。\n长途飞行（Long-haul flight）：飞行距离超过1,550英里的航班\n2.2 如果你想尽可能避免延误，你应该选择哪个时间段起飞的航班？\n2.3 哪个航空公司(carrier)的航班平均延误时间最长？"
  },
  {
    "objectID": "L5.html#习题答案",
    "href": "L5.html#习题答案",
    "title": "第5讲",
    "section": "",
    "text": "第1题\n\n第1题\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gt)\n\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n\n#library(gt)\ndata(mpg)\n\nmpg %&gt;% \n  select(manufacturer:cyl) %&gt;% \n  head() #查看前6行\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(1:5) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(4,5,7:9) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\nmpg %&gt;% \n  select(year,cyl,drv:hwy) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\n\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。(1 miles per gallon = 0.425 kilometers per liter)\n\nmpgnew &lt;- mpg %&gt;% mutate(cty.kpl = 0.425*cty, \n               hwy.kpl = 0.425*hwy)\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ncty.kpl\nhwy.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n7.650\n12.325\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n8.925\n12.325\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n8.500\n13.175\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n8.925\n12.750\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n6.800\n11.050\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n7.650\n11.050\n\n\n\n\n\n\n\nmpg$hwy.kpl &lt;- 0.425*mpg$hwy\nmpg$cty.kpl &lt;- 0.425*mpg$cty\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\n\n\n\n\n\n\n\n\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n\nmpgnew &lt;- mpg %&gt;% \n  mutate(transmission = \n           if_else(substring(trans, 1,4) == \"auto\", \n                   \"auto\",\"manual\"))\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\n\n\n\n\n\n\n\n#二值转换 if_else\n\nmpg$transmission &lt;- if_else(\n  substring(mpg$trans, 1,4) == \"auto\", \n  \"auto\",\"manual\") \n\n#多值转换 case_when\nmpg$drive &lt;- case_when(\n  mpg$drv == \"f\" ~ \"front-wheel\",\n  mpg$drv == \"r\" ~ \"rear-wheel\",\n  mpg$drv == \"4\" ~ \"four-wheel\")\n\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\nfront-wheel\n\n\n\n\n\n\n\n\n1.4 设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n\n# the & operator is used to combine two conditions, where both conditions must be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" & \n           cyl == 8 & \n          year == 2008) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n6.375\n4.675\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n7.225\n5.100\nauto\nrear-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n8.075\n5.950\nauto\nfour-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n5.950\n4.675\nauto\nfour-wheel\n\n\n\n\n\n\n\nmpg %&gt;% \n  filter(substr(trans, 1, 4) == \"auto\" & \n        class %in% c(\"compact\", \"subcompact\") &\n          !fl %in% c(\"c\" ,\"d\" ,\"e\")) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n10.625\n6.800\nauto\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\n\n\n\n\n\n# the | operator combines the two conditions, where only one of the conditions needs to be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" | \n           cyl == 8 |\n          year == 2008)  %&gt;% \n  head() %&gt;% \n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n11.900\n8.500\nmanual\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\naudi\na4 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\ncompact\n10.625\n7.225\nauto\nfour-wheel"
  },
  {
    "objectID": "L5.html#拓展资源",
    "href": "L5.html#拓展资源",
    "title": "第5讲",
    "section": "",
    "text": "R for Data Science 2nd edition https://r4ds.hadley.nz/data-tidy\nR如何快速预览变量分布？summarytools::dfSummary()"
  },
  {
    "objectID": "L10.html",
    "href": "L10.html",
    "title": "第10讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L11.html",
    "href": "L11.html",
    "title": "第11讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "s5.html",
    "href": "s5.html",
    "title": "L5",
    "section": "",
    "text": "“Tidy datasets are all alike, but every messy dataset is messy in its own way.” — Hadley Wickham"
  },
  {
    "objectID": "s5.html#dplyr函数的共性",
    "href": "s5.html#dplyr函数的共性",
    "title": "L5",
    "section": "dplyr函数的共性",
    "text": "dplyr函数的共性\n第1项参数是data frame.\n第2项参数描述动作。\n输出结果是一个新的data frame."
  },
  {
    "objectID": "s5.html#dplyr函数的分类",
    "href": "s5.html#dplyr函数的分类",
    "title": "L5",
    "section": "dplyr函数的分类",
    "text": "dplyr函数的分类\n\n列的管理 Columns:\n\nselect() changes whether or not a column is included.\nrename() changes the name of columns.\nmutate() changes the values of columns and creates new columns.\nrelocate() changes the order of the columns.\n\n行的管理 Rows:\n\nfilter() chooses rows based on column values.\nslice() chooses rows based on location.\narrange() changes the order of the rows.\n\n行组的管理Groups of rows:\n\nsummarise() collapses a group into a single row.\ncount()\ntop_n()\n\n\n\nRows\n\nfilter()\n\nflights %&gt;%  \n  filter(dep_delay &gt; 120) #筛选出dep_delay大于120的行\n\n# A tibble: 9,723 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      848           1835       853     1001           1950\n 2  2013     1     1      957            733       144     1056            853\n 3  2013     1     1     1114            900       134     1447           1222\n 4  2013     1     1     1540           1338       122     2020           1825\n 5  2013     1     1     1815           1325       290     2120           1542\n 6  2013     1     1     1842           1422       260     1958           1535\n 7  2013     1     1     1856           1645       131     2212           2005\n 8  2013     1     1     1934           1725       129     2126           1855\n 9  2013     1     1     1938           1703       155     2109           1823\n10  2013     1     1     1942           1705       157     2124           1830\n# ℹ 9,713 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n&gt;=（大于或等于）\n&lt;（小于）\n&lt;=（小于或等于）\n==（等于）\n!=（不等于）\n& 或 or, 来表示”和”（同时检查两个条件）\n| 来表示”或”（检查任一条件）\n\nflights %&gt;% \n  filter(month == 1 & day == 1) #筛选出1月1日的航班\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month == 1 | month == 2) #筛选出1月或2月的航班\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month %in% c(1, 2)) #筛选出1月或2月的航班\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n注意：当你运行 filter() 时，dplyr 执行过滤操作，创建一个新的数据框，然后打印它。它不会修改现有的 flights 数据集，因为 dplyr 函数永远不会修改它们的输入。要保存结果，你需要使用赋值操作符，&lt;-\n\n#筛选出1月1日的航班,并保存到flights_jan1\nflights_jan1 &lt;- flights %&gt;% \n  filter(month == 1 & day == 1) \n\n\n\narange()"
  },
  {
    "objectID": "L4.html",
    "href": "L4.html",
    "title": "第4讲",
    "section": "",
    "text": "4.1 ggplot2 讲义\n4.2 ggplot2 Script\n\n\nggplot2绘制直方图\nggplot2如何在直方图上标注频数？\nggplot2绘制条形图\nggplot2如何在条形图上标注各组频数？\nggplot2绘制帕累托图\nggplot2绘制箱线图\nggplot2绘制散点图\n\n\n\n第4讲习题答案代码\n\n\n\nggplot2：为何你的颜色设置不起作用?\nggplot2：常见报错与解决方案\n如何快速找到自己喜欢的颜色？colourpicker\n不写代码也能绘制ggplot图形的R插件 ggplot2 builder\n\nggplot2 extensions - gallery https://exts.ggplot2.tidyverse.org/gallery/\ncolor codes https://htmlcolorcodes.com\nColors in R http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\nWickham, Hadley. ggplot2: elegant graphics for data analysis. springer, 2016. https://ggplot2-book.org/\nWickham, Hadley, Garrett Grolemund. R for Data Science https://r4ds.had.co.nz/"
  },
  {
    "objectID": "L4.html#教学视频",
    "href": "L4.html#教学视频",
    "title": "第4讲",
    "section": "",
    "text": "ggplot2绘制直方图\nggplot2如何在直方图上标注频数？\nggplot2绘制条形图\nggplot2如何在条形图上标注各组频数？\nggplot2绘制帕累托图\nggplot2绘制箱线图\nggplot2绘制散点图"
  },
  {
    "objectID": "L4.html#习题答案",
    "href": "L4.html#习题答案",
    "title": "第4讲",
    "section": "",
    "text": "第4讲习题答案代码"
  },
  {
    "objectID": "L4.html#拓展资源",
    "href": "L4.html#拓展资源",
    "title": "第4讲",
    "section": "",
    "text": "ggplot2：为何你的颜色设置不起作用?\nggplot2：常见报错与解决方案\n如何快速找到自己喜欢的颜色？colourpicker\n不写代码也能绘制ggplot图形的R插件 ggplot2 builder\n\nggplot2 extensions - gallery https://exts.ggplot2.tidyverse.org/gallery/\ncolor codes https://htmlcolorcodes.com\nColors in R http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\nWickham, Hadley. ggplot2: elegant graphics for data analysis. springer, 2016. https://ggplot2-book.org/\nWickham, Hadley, Garrett Grolemund. R for Data Science https://r4ds.had.co.nz/"
  },
  {
    "objectID": "L7.html",
    "href": "L7.html",
    "title": "第7讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L2.html",
    "href": "L2.html",
    "title": "第2讲",
    "section": "",
    "text": "讲义\n\n\nR的数据类型\nR的数据结构：向量和矩阵\nR的数据结构：数据框\nR的数据结构：列表list"
  },
  {
    "objectID": "L2.html#教学视频",
    "href": "L2.html#教学视频",
    "title": "第2讲",
    "section": "",
    "text": "R的数据类型\nR的数据结构：向量和矩阵\nR的数据结构：数据框\nR的数据结构：列表list"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R语言与统计应用24春",
    "section": "",
    "text": "欢迎访问《R语言与统计应用课程》课程网站！\n统计学课程网站"
  },
  {
    "objectID": "index.html#教学软件",
    "href": "index.html#教学软件",
    "title": "R语言与统计应用24春",
    "section": "教学软件",
    "text": "教学软件\n\nR https://www.r-project.org/\nR Studio https://posit.co/download/rstudio-desktop/"
  },
  {
    "objectID": "index.html#r语言与统计应用课前准备",
    "href": "index.html#r语言与统计应用课前准备",
    "title": "R语言与统计应用24春",
    "section": "R语言与统计应用课前准备",
    "text": "R语言与统计应用课前准备\nR和R Studio的下载\nR和RStudio的安装\n若无法安装R和R Studio, 请观看：\n不用安装就能用的RStudio——RStudio Cloud"
  },
  {
    "objectID": "index.html#教学视频",
    "href": "index.html#教学视频",
    "title": "R语言与统计应用24春",
    "section": "教学视频",
    "text": "教学视频\n\nR数据分析实战\n\n\n教学平台\n\n\n91速课(https://www.91suke.com)：发布作业，提交作业，测验，考勤等\n在91速课中设置姓名和学号的方法\nQQ群：提交小组作业，提问答疑"
  },
  {
    "objectID": "L1.html",
    "href": "L1.html",
    "title": "第1讲",
    "section": "",
    "text": "讲义\n\n\nR Studio 主界面\n如何安装R扩展包\nRStudio如何导入EXCEL文件\nR Studio中的Project–如何高效管理数据、代码、图形\n\n\n\n\nCRAN Task Views https://cran.r-project.org/web/views/\nMost Downloaded R Packages https://www.r-pkg.org/"
  },
  {
    "objectID": "L1.html#教学视频",
    "href": "L1.html#教学视频",
    "title": "第1讲",
    "section": "",
    "text": "R Studio 主界面\n如何安装R扩展包\nRStudio如何导入EXCEL文件\nR Studio中的Project–如何高效管理数据、代码、图形"
  },
  {
    "objectID": "L1.html#拓展资源",
    "href": "L1.html#拓展资源",
    "title": "第1讲",
    "section": "",
    "text": "CRAN Task Views https://cran.r-project.org/web/views/\nMost Downloaded R Packages https://www.r-pkg.org/"
  },
  {
    "objectID": "L9.html",
    "href": "L9.html",
    "title": "第9讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  }
]