[
  {
    "objectID": "L8.html",
    "href": "L8.html",
    "title": "第8讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L9.html",
    "href": "L9.html",
    "title": "第9讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L1.html",
    "href": "L1.html",
    "title": "第1讲",
    "section": "",
    "text": "讲义\n\n\nR Studio 主界面\n如何安装R扩展包\nRStudio如何导入EXCEL文件\nR Studio中的Project–如何高效管理数据、代码、图形\n\n\n\nCRAN Task Views https://cran.r-project.org/web/views/\nMost Downloaded R Packages https://www.r-pkg.org/\nRStudio Cloud https://rstudio.cloud/"
  },
  {
    "objectID": "L1.html#教学视频",
    "href": "L1.html#教学视频",
    "title": "第1讲",
    "section": "",
    "text": "R Studio 主界面\n如何安装R扩展包\nRStudio如何导入EXCEL文件\nR Studio中的Project–如何高效管理数据、代码、图形"
  },
  {
    "objectID": "L1.html#拓展资源",
    "href": "L1.html#拓展资源",
    "title": "第1讲",
    "section": "",
    "text": "CRAN Task Views https://cran.r-project.org/web/views/\nMost Downloaded R Packages https://www.r-pkg.org/\nRStudio Cloud https://rstudio.cloud/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R语言与统计应用24春",
    "section": "",
    "text": "欢迎访问《R语言与统计应用课程》课程网站！\n统计学课程网站"
  },
  {
    "objectID": "index.html#教学软件",
    "href": "index.html#教学软件",
    "title": "R语言与统计应用24春",
    "section": "教学软件",
    "text": "教学软件\n\nR https://www.r-project.org/\nR Studio https://posit.co/download/rstudio-desktop/"
  },
  {
    "objectID": "index.html#r语言与统计应用课前准备",
    "href": "index.html#r语言与统计应用课前准备",
    "title": "R语言与统计应用24春",
    "section": "R语言与统计应用课前准备",
    "text": "R语言与统计应用课前准备\nR和R Studio的下载\nR和RStudio的安装\n若无法安装R和R Studio, 请观看：\n不用安装就能用的RStudio——RStudio Cloud"
  },
  {
    "objectID": "index.html#教学视频",
    "href": "index.html#教学视频",
    "title": "R语言与统计应用24春",
    "section": "教学视频",
    "text": "教学视频\nR数据分析实战\n\n教学平台\n\n91速课(https://www.91suke.com)：发布作业，提交作业，测验，考勤等\n在91速课中设置姓名和学号的方法\n\nQQ群：提交小组作业，提问答疑"
  },
  {
    "objectID": "L2.html",
    "href": "L2.html",
    "title": "第2讲",
    "section": "",
    "text": "讲义\n\n\nR的数据类型\nR的数据结构：向量和矩阵\nR的数据结构：数据框\nR的数据结构：列表list"
  },
  {
    "objectID": "L2.html#教学视频",
    "href": "L2.html#教学视频",
    "title": "第2讲",
    "section": "",
    "text": "R的数据类型\nR的数据结构：向量和矩阵\nR的数据结构：数据框\nR的数据结构：列表list"
  },
  {
    "objectID": "L7.html",
    "href": "L7.html",
    "title": "第7讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L4.html",
    "href": "L4.html",
    "title": "第4讲",
    "section": "",
    "text": "4.1 ggplot2 讲义\n4.2 ggplot2 Script\n\n\nggplot2绘制直方图\nggplot2如何在直方图上标注频数？\nggplot2绘制条形图\nggplot2如何在条形图上标注各组频数？\nggplot2绘制帕累托图\nggplot2绘制箱线图\nggplot2绘制散点图\n\n\n\n第4讲习题答案代码\n\n\n\nggplot2：为何你的颜色设置不起作用?\nggplot2：常见报错与解决方案\n如何快速找到自己喜欢的颜色？colourpicker\n不写代码也能绘制ggplot图形的R插件 ggplot2 builder\nggplot2 extensions - gallery https://exts.ggplot2.tidyverse.org/gallery/\ncolor codes https://htmlcolorcodes.com\nColors in R http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\nWickham, Hadley. ggplot2: elegant graphics for data analysis. springer, 2016. https://ggplot2-book.org/\nWickham, Hadley, Garrett Grolemund. R for Data Science https://r4ds.had.co.nz/"
  },
  {
    "objectID": "L4.html#教学视频",
    "href": "L4.html#教学视频",
    "title": "第4讲",
    "section": "",
    "text": "ggplot2绘制直方图\nggplot2如何在直方图上标注频数？\nggplot2绘制条形图\nggplot2如何在条形图上标注各组频数？\nggplot2绘制帕累托图\nggplot2绘制箱线图\nggplot2绘制散点图"
  },
  {
    "objectID": "L4.html#习题答案",
    "href": "L4.html#习题答案",
    "title": "第4讲",
    "section": "",
    "text": "第4讲习题答案代码"
  },
  {
    "objectID": "L4.html#拓展资源",
    "href": "L4.html#拓展资源",
    "title": "第4讲",
    "section": "",
    "text": "ggplot2：为何你的颜色设置不起作用?\nggplot2：常见报错与解决方案\n如何快速找到自己喜欢的颜色？colourpicker\n不写代码也能绘制ggplot图形的R插件 ggplot2 builder\nggplot2 extensions - gallery https://exts.ggplot2.tidyverse.org/gallery/\ncolor codes https://htmlcolorcodes.com\nColors in R http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\nWickham, Hadley. ggplot2: elegant graphics for data analysis. springer, 2016. https://ggplot2-book.org/\nWickham, Hadley, Garrett Grolemund. R for Data Science https://r4ds.had.co.nz/"
  },
  {
    "objectID": "s5.html",
    "href": "s5.html",
    "title": "L5",
    "section": "",
    "text": "“Tidy datasets are all alike, but every messy dataset is messy in its own way.” — Hadley Wickham"
  },
  {
    "objectID": "s5.html#dplyr函数的共性",
    "href": "s5.html#dplyr函数的共性",
    "title": "L5",
    "section": "dplyr函数的共性",
    "text": "dplyr函数的共性\n第1项参数是data frame.\n第2项参数描述动作。\n输出结果是一个新的data frame."
  },
  {
    "objectID": "s5.html#dplyr函数的分类",
    "href": "s5.html#dplyr函数的分类",
    "title": "L5",
    "section": "dplyr函数的分类",
    "text": "dplyr函数的分类\n\n列的管理 Columns:\n\nselect() changes whether or not a column is included.\nrename() changes the name of columns.\nmutate() changes the values of columns and creates new columns.\nrelocate() changes the order of the columns.\n\n行的管理 Rows:\n\nfilter() chooses rows based on column values.\nslice() chooses rows based on location.\narrange() changes the order of the rows.\n\n行组的管理Groups of rows:\n\nsummarise() collapses a group into a single row.\ncount()\ntop_n()\n\n\n\nRows\n\nfilter()\n\nflights %&gt;%  \n  filter(dep_delay &gt; 120) #筛选出dep_delay大于120的行\n\n# A tibble: 9,723 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      848           1835       853     1001           1950\n 2  2013     1     1      957            733       144     1056            853\n 3  2013     1     1     1114            900       134     1447           1222\n 4  2013     1     1     1540           1338       122     2020           1825\n 5  2013     1     1     1815           1325       290     2120           1542\n 6  2013     1     1     1842           1422       260     1958           1535\n 7  2013     1     1     1856           1645       131     2212           2005\n 8  2013     1     1     1934           1725       129     2126           1855\n 9  2013     1     1     1938           1703       155     2109           1823\n10  2013     1     1     1942           1705       157     2124           1830\n# ℹ 9,713 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n&gt;=（大于或等于）\n&lt;（小于）\n&lt;=（小于或等于）\n==（等于）\n!=（不等于）\n& 或 or, 来表示”和”（同时检查两个条件）\n| 来表示”或”（检查任一条件）\n\nflights %&gt;% \n  filter(month == 1 & day == 1) #筛选出1月1日的航班\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month == 1 | month == 2) #筛选出1月或2月的航班\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month %in% c(1, 2)) #筛选出1月或2月的航班\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n注意：当你运行 filter() 时，dplyr 执行过滤操作，创建一个新的数据框，然后打印它。它不会修改现有的 flights 数据集，因为 dplyr 函数永远不会修改它们的输入。要保存结果，你需要使用赋值操作符，&lt;-\n\n#筛选出1月1日的航班,并保存到flights_jan1\nflights_jan1 &lt;- flights %&gt;% \n  filter(month == 1 & day == 1) \n\n\n\narange()"
  },
  {
    "objectID": "L11.html",
    "href": "L11.html",
    "title": "第11讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L10.html",
    "href": "L10.html",
    "title": "第10讲",
    "section": "",
    "text": "第3章 图表工具\n\n讲义\n\n教学视频\n\nExcel图表工具合集\nEXCEL数据清洗合集\n\n习题讲评\n\nExcel图表工具综合运用——基金经理\n教材第3章习题讲评\n\n拓展资源\n\n在线词云图工具 https://www.wordclouds.com/"
  },
  {
    "objectID": "L5.html",
    "href": "L5.html",
    "title": "第5讲",
    "section": "",
    "text": "代码\n\n\n函数select()和mutate()\n函数if_else()对变量值进行条件转换\n函数filter()筛选个案\n如何删除含有缺失值的个案？\n\n\n\n\n\n第1题\n\n第1题：数据 ggplot2::mpg\n提示：加载包tidyverse，运行data(mpg), 即可调用数据框mpg。\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n1.4 设置三个筛选条件，用filter()函数从mpg筛选出满足条件的个案, 保存到新的数据框。\n提交R script代码。\n\n\n\n第2题\n\n习题2 :数据nycflights13::flights\n提示：加载包nycflights13，运行data(flights), 即可调用数据框flights。\n2.1 根据distance(单位：英里)的数值，将航班分为短途、中途和长途三个类别。创建新变量distance_group,其值为”short”, “medium”, “long”。统计每个类别的航班数量。\n\n短途飞行（Short-haul flight）：飞行距离少于500英里的航班。\n中途飞行（Medium-haul flight）：飞行距离在500到1,550英里之间的航班。\n长途飞行（Long-haul flight）：飞行距离超过1,550英里的航班\n\n2.2 如果你想尽可能避免延误，你应该选择哪个时间段起飞的航班？\n2.3 哪个航空公司(carrier)的平均延误时间最长？\n\n\n\n\n\n\n第1题\n\n第1题\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gt)\n\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n\n#library(gt)\ndata(mpg)\n\nmpg %&gt;% \n  select(manufacturer:cyl) %&gt;% \n  head() #查看前6行\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(1:5) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(4,5,7:9) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\nmpg %&gt;% \n  select(year,cyl,drv:hwy) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\n\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。(1 miles per gallon = 0.425 kilometers per liter)\n\nmpgnew &lt;- mpg %&gt;% mutate(cty.kpl = 0.425*cty, \n               hwy.kpl = 0.425*hwy)\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ncty.kpl\nhwy.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n7.650\n12.325\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n8.925\n12.325\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n8.500\n13.175\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n8.925\n12.750\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n6.800\n11.050\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n7.650\n11.050\n\n\n\n\n\n\n\nmpg$hwy.kpl &lt;- 0.425*mpg$hwy\nmpg$cty.kpl &lt;- 0.425*mpg$cty\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\n\n\n\n\n\n\n\n\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n\nmpgnew &lt;- mpg %&gt;% \n  mutate(transmission = \n           if_else(substring(trans, 1,4) == \"auto\", \n                   \"auto\",\"manual\"))\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\n\n\n\n\n\n\n\n#二值转换 if_else\n\nmpg$transmission &lt;- if_else(\n  substring(mpg$trans, 1,4) == \"auto\", \n  \"auto\",\"manual\") \n\n#多值转换 case_when\nmpg$drive &lt;- case_when(\n  mpg$drv == \"f\" ~ \"front-wheel\",\n  mpg$drv == \"r\" ~ \"rear-wheel\",\n  mpg$drv == \"4\" ~ \"four-wheel\")\n\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\nfront-wheel\n\n\n\n\n\n\n\n\n1.4 设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n\n# the & operator is used to combine two conditions, where both conditions must be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" & \n           cyl == 8 & \n          year == 2008) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n6.375\n4.675\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n7.225\n5.100\nauto\nrear-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n8.075\n5.950\nauto\nfour-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n5.950\n4.675\nauto\nfour-wheel\n\n\n\n\n\n\n\nmpg %&gt;% \n  filter(substr(trans, 1, 4) == \"auto\" & \n        class %in% c(\"compact\", \"subcompact\") &\n          !fl %in% c(\"c\" ,\"d\" ,\"e\")) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n10.625\n6.800\nauto\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\n\n\n\n\n\n# the | operator combines the two conditions, where only one of the conditions needs to be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" | \n           cyl == 8 |\n          year == 2008)  %&gt;% \n  head() %&gt;% \n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n11.900\n8.500\nmanual\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\naudi\na4 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\ncompact\n10.625\n7.225\nauto\nfour-wheel\n\n\n\n\n\n\n\n\n\n\n\n\nR for Data Science 2nd edition https://r4ds.hadley.nz/data-tidy\nR代码风格\nR如何快速预览变量分布？summarytools::dfSummary()\nR代码风格：如何写出美观易读的代码?"
  },
  {
    "objectID": "L5.html#教学视频",
    "href": "L5.html#教学视频",
    "title": "第5讲",
    "section": "",
    "text": "函数select()和mutate()\n函数if_else()对变量值进行条件转换\n函数filter()筛选个案\n如何删除含有缺失值的个案？"
  },
  {
    "objectID": "L5.html#本章习题",
    "href": "L5.html#本章习题",
    "title": "第5讲",
    "section": "",
    "text": "第1题\n\n第1题：数据 ggplot2::mpg\n提示：加载包tidyverse，运行data(mpg), 即可调用数据框mpg。\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n1.4 设置三个筛选条件，用filter()函数从mpg筛选出满足条件的个案, 保存到新的数据框。\n提交R script代码。\n\n\n\n第2题\n\n习题2 :数据nycflights13::flights\n提示：加载包nycflights13，运行data(flights), 即可调用数据框flights。\n2.1 根据distance(单位：英里)的数值，将航班分为短途、中途和长途三个类别。创建新变量distance_group,其值为”short”, “medium”, “long”。统计每个类别的航班数量。\n\n短途飞行（Short-haul flight）：飞行距离少于500英里的航班。\n中途飞行（Medium-haul flight）：飞行距离在500到1,550英里之间的航班。\n长途飞行（Long-haul flight）：飞行距离超过1,550英里的航班\n\n2.2 如果你想尽可能避免延误，你应该选择哪个时间段起飞的航班？\n2.3 哪个航空公司(carrier)的平均延误时间最长？"
  },
  {
    "objectID": "L5.html#习题答案",
    "href": "L5.html#习题答案",
    "title": "第5讲",
    "section": "",
    "text": "第1题\n\n第1题\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gt)\n\n1.1 用select()函数从mpg提取5个变量⽣成新的数据框。\n\n#library(gt)\ndata(mpg)\n\nmpg %&gt;% \n  select(manufacturer:cyl) %&gt;% \n  head() #查看前6行\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(1:5) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n  manufacturer model displ  year   cyl\n  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 audi         a4      1.8  1999     4\n2 audi         a4      1.8  1999     4\n3 audi         a4      2    2008     4\n4 audi         a4      2    2008     4\n5 audi         a4      2.8  1999     6\n6 audi         a4      2.8  1999     6\n\nmpg %&gt;% \n  select(4,5,7:9) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\nmpg %&gt;% \n  select(year,cyl,drv:hwy) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   year   cyl drv     cty   hwy\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n1  1999     4 f        18    29\n2  1999     4 f        21    29\n3  2008     4 f        20    31\n4  2008     4 f        21    30\n5  1999     6 f        16    26\n6  1999     6 f        18    26\n\n\n1.2 用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。(1 miles per gallon = 0.425 kilometers per liter)\n\nmpgnew &lt;- mpg %&gt;% mutate(cty.kpl = 0.425*cty, \n               hwy.kpl = 0.425*hwy)\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ncty.kpl\nhwy.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n7.650\n12.325\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n8.925\n12.325\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n8.500\n13.175\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n8.925\n12.750\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n6.800\n11.050\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n7.650\n11.050\n\n\n\n\n\n\n\nmpg$hwy.kpl &lt;- 0.425*mpg$hwy\nmpg$cty.kpl &lt;- 0.425*mpg$cty\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\n\n\n\n\n\n\n\n\n1.3 任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n\nmpgnew &lt;- mpg %&gt;% \n  mutate(transmission = \n           if_else(substring(trans, 1,4) == \"auto\", \n                   \"auto\",\"manual\"))\n\nhead(mpgnew) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\n\n\n\n\n\n\n\n#二值转换 if_else\n\nmpg$transmission &lt;- if_else(\n  substring(mpg$trans, 1,4) == \"auto\", \n  \"auto\",\"manual\") \n\n#多值转换 case_when\nmpg$drive &lt;- case_when(\n  mpg$drv == \"f\" ~ \"front-wheel\",\n  mpg$drv == \"r\" ~ \"rear-wheel\",\n  mpg$drv == \"4\" ~ \"four-wheel\")\n\n\nhead(mpg) %&gt;% gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n12.325\n8.925\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\ncompact\n11.050\n7.650\nmanual\nfront-wheel\n\n\n\n\n\n\n\n\n1.4 设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n\n# the & operator is used to combine two conditions, where both conditions must be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" & \n           cyl == 8 & \n          year == 2008) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n11\n15\ne\nsuv\n6.375\n4.675\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n5.3\n2008\n8\nauto(l4)\nr\n14\n20\nr\nsuv\n8.500\n5.950\nauto\nrear-wheel\n\n\nchevrolet\nc1500 suburban 2wd\n6.0\n2008\n8\nauto(l4)\nr\n12\n17\nr\nsuv\n7.225\n5.100\nauto\nrear-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n14\n19\nr\nsuv\n8.075\n5.950\nauto\nfour-wheel\n\n\nchevrolet\nk1500 tahoe 4wd\n5.3\n2008\n8\nauto(l4)\n4\n11\n14\ne\nsuv\n5.950\n4.675\nauto\nfour-wheel\n\n\n\n\n\n\n\nmpg %&gt;% \n  filter(substr(trans, 1, 4) == \"auto\" & \n        class %in% c(\"compact\", \"subcompact\") &\n          !fl %in% c(\"c\" ,\"d\" ,\"e\")) %&gt;%\n  head() %&gt;%\n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n12.325\n7.650\nauto\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n11.050\n6.800\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n10.625\n6.800\nauto\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\n\n\n\n\n\n# the | operator combines the two conditions, where only one of the conditions needs to be true for a row to be included in the filtered data frame.\n\nmpg %&gt;% \n  filter(class == \"suv\" | \n           cyl == 8 |\n          year == 2008)  %&gt;% \n  head() %&gt;% \n  gt()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nhwy.kpl\ncty.kpl\ntransmission\ndrive\n\n\n\n\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n13.175\n8.500\nmanual\nfront-wheel\n\n\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n12.750\n8.925\nauto\nfront-wheel\n\n\naudi\na4\n3.1\n2008\n6\nauto(av)\nf\n18\n27\np\ncompact\n11.475\n7.650\nauto\nfront-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n11.900\n8.500\nmanual\nfour-wheel\n\n\naudi\na4 quattro\n2.0\n2008\n4\nauto(s6)\n4\n19\n27\np\ncompact\n11.475\n8.075\nauto\nfour-wheel\n\n\naudi\na4 quattro\n3.1\n2008\n6\nauto(s6)\n4\n17\n25\np\ncompact\n10.625\n7.225\nauto\nfour-wheel"
  },
  {
    "objectID": "L5.html#拓展资源",
    "href": "L5.html#拓展资源",
    "title": "第5讲",
    "section": "",
    "text": "R for Data Science 2nd edition https://r4ds.hadley.nz/data-tidy\nR代码风格\nR如何快速预览变量分布？summarytools::dfSummary()\nR代码风格：如何写出美观易读的代码?"
  },
  {
    "objectID": "script5.html",
    "href": "script5.html",
    "title": "第5讲 tidyverse",
    "section": "",
    "text": "“Tidy datasets are all alike, but every messy dataset is messy in its own way.” — Hadley Wickham\nRef: Wickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science.\n需要安装和加载的包\n# install.packages(\"nycflights13\")\n# install.packages(\"tidyverse\")\n\nlibrary(nycflights13)\nlibrary(tidyverse)"
  },
  {
    "objectID": "script5.html#dplyr函数的共性",
    "href": "script5.html#dplyr函数的共性",
    "title": "第5讲 tidyverse",
    "section": "3.1 dplyr函数的共性",
    "text": "3.1 dplyr函数的共性\n\n第1项参数是data frame.\n第2项参数描述动作。\n输出结果是一个新的data frame."
  },
  {
    "objectID": "script5.html#dplyr函数的分类",
    "href": "script5.html#dplyr函数的分类",
    "title": "第5讲 tidyverse",
    "section": "3.2 dplyr函数的分类",
    "text": "3.2 dplyr函数的分类\n\n行的管理 Rows:\n\nfilter() chooses rows based on column values.\narrange() changes the order of the rows.\ndistinct() removes duplicate rows.\nna.omit() removes rows with missing values.\ndrop.na() removes rows with missing values.\nslice() chooses rows based on location.\n\n列的管理 Columns:\n\nmutate() changes the values of columns and creates new columns.\nselect() changes whether or not a column is included.\nrename() changes the name of columns.\nif_else() changes the values of columns based on a condition.\ncase_when() changes the values of columns based on multiple conditions.\nrecode() changes the values of columns based on a condition.\nrelocate() changes the order of the columns.\n\n行组的管理Groups of rows:\n\nsummarise() collapses a group into a single row.\ncount()\ntop_n()"
  },
  {
    "objectID": "script5.html#rows",
    "href": "script5.html#rows",
    "title": "第5讲 tidyverse",
    "section": "3.3 Rows",
    "text": "3.3 Rows\n\n3.3.1 保留filter()\n\nflights %&gt;%  \n  filter(dep_delay &gt; 120) #保留dep_delay大于120的行\n\n# A tibble: 9,723 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      848           1835       853     1001           1950\n 2  2013     1     1      957            733       144     1056            853\n 3  2013     1     1     1114            900       134     1447           1222\n 4  2013     1     1     1540           1338       122     2020           1825\n 5  2013     1     1     1815           1325       290     2120           1542\n 6  2013     1     1     1842           1422       260     1958           1535\n 7  2013     1     1     1856           1645       131     2212           2005\n 8  2013     1     1     1934           1725       129     2126           1855\n 9  2013     1     1     1938           1703       155     2109           1823\n10  2013     1     1     1942           1705       157     2124           1830\n# ℹ 9,713 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n&gt;=（大于或等于）\n&lt;（小于）\n&lt;=（小于或等于）\n==（等于）\n!=（不等于）\n& 条件组合，同时成立\n| “或”，至少有一个条件成立\n\n\nflights %&gt;% \n  filter(month == 1 & day == 1) #筛选出1月1日的航班\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month == 1 | month == 2) #筛选出1月或2月的航班\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  filter(month %in% c(1, 2)) #筛选出1月或2月的航班\n\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 51,945 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n注意：当你运行 filter() 时，dplyr 执行过滤操作，创建一个新的数据框，然后打印它。它不会修改现有的 flights 数据集，因为 dplyr 函数永远不会修改它们的输入。要保存结果，你需要使用赋值操作符，&lt;-\n\n#筛选出1月1日的航班,并保存到flights_jan1\nflights_jan1 &lt;- flights %&gt;% \n  filter(month == 1 & day == 1) \n\n常见错误\n\n# flights %&gt;% \n#   filter(month = 1) #错误，应该用==而不是=\n\n\n# flights %&gt;%\n#    filter(month == 1 | 2)  #错误，应该用month == 1 | month == 2\n\n\n\n3.3.2 排序arange()\n\nflights %&gt;% \n  arrange(year, month, day, dep_time) #按照year, month, day, dep_time排序\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights %&gt;% \n  arrange(desc(dep_delay)) #desc()按照dep_time降序排序\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     9      641            900      1301     1242           1530\n 2  2013     6    15     1432           1935      1137     1607           2120\n 3  2013     1    10     1121           1635      1126     1239           1810\n 4  2013     9    20     1139           1845      1014     1457           2210\n 5  2013     7    22      845           1600      1005     1044           1815\n 6  2013     4    10     1100           1900       960     1342           2211\n 7  2013     3    17     2321            810       911      135           1020\n 8  2013     6    27      959           1900       899     1236           2226\n 9  2013     7    22     2257            759       898      121           1026\n10  2013    12     5      756           1700       896     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.3.3 删除有缺失值的行na.omit()/drop_na()\n\nflights %&gt;% \n  na.omit() #删除含有NA的行\n\n# A tibble: 327,346 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 327,336 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  drop_na(dep_time, arr_time) #删除dep_time, arr_time为NA的行\n\n# A tibble: 328,063 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 328,053 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.3.4 去重distinct()\n\nflights %&gt;% \n  distinct() #移除所有列都相同的行\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights %&gt;% \n  distinct(year, month, day) #提取year, month, day 的唯一组合\n\n# A tibble: 365 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1\n 2  2013     1     2\n 3  2013     1     3\n 4  2013     1     4\n 5  2013     1     5\n 6  2013     1     6\n 7  2013     1     7\n 8  2013     1     8\n 9  2013     1     9\n10  2013     1    10\n# ℹ 355 more rows\n\nflights %&gt;% \n  distinct(origin, dest) #提取year, month, day 的唯一组合\n\n# A tibble: 224 × 2\n   origin dest \n   &lt;chr&gt;  &lt;chr&gt;\n 1 EWR    IAH  \n 2 LGA    IAH  \n 3 JFK    MIA  \n 4 JFK    BQN  \n 5 LGA    ATL  \n 6 EWR    ORD  \n 7 EWR    FLL  \n 8 LGA    IAD  \n 9 JFK    MCO  \n10 LGA    ORD  \n# ℹ 214 more rows\n\nflights %&gt;% \n  distinct(origin, dest,    #找到year, month, day 的唯一组合\n           .keep_all = TRUE) #保留所有的列。 .keep_all默认为FALSE，不保留其余的列\n\n# A tibble: 224 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 214 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.3.5 缺失值is.na()\n\nflights %&gt;% \n  filter(is.na(dep_time)) #保留dep_time为NA的行\n\n# A tibble: 8,255 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1       NA           1630        NA       NA           1815\n 2  2013     1     1       NA           1935        NA       NA           2240\n 3  2013     1     1       NA           1500        NA       NA           1825\n 4  2013     1     1       NA            600        NA       NA            901\n 5  2013     1     2       NA           1540        NA       NA           1747\n 6  2013     1     2       NA           1620        NA       NA           1746\n 7  2013     1     2       NA           1355        NA       NA           1459\n 8  2013     1     2       NA           1420        NA       NA           1644\n 9  2013     1     2       NA           1321        NA       NA           1536\n10  2013     1     2       NA           1545        NA       NA           1910\n# ℹ 8,245 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;% \n  filter(!is.na(dep_time)) #保留dep_time为NA的行\n\n# A tibble: 328,521 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 328,511 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.3.6 小练习\n第1题: 将满足下列条件的航班筛选出来，保存为一个新的数据框christmas_jfk, 该数据框中一共有多少个航班？\n\n航班出发日期为2013年12月24日.\n出发地(origin)机场是”JFK”.\n\nJohn F. Kennedy International Airport, JFK\nLaGuardia Airport, LGA\nNewark Liberty International Airport, EWR\n\n航空公司(carrier)是”AA”,或者”UA”, 或者”US”.\n\nAA, American Airlines.\nUA, United Airlines\nUS, US Airways\n\n将到达延误时长(arr_delay)中有缺失值的行剔除\n\n第2题: 对数据框christmas_jfk, 按照到达延误时长(arr_delay)降序排列航班\n第3题: 绘制数据框christmas_jfk中出发时间(dep_time)和到达延误时长(arr_delay)的散点图，散点的颜色用航空公司(carrier)来映射, 散点的大小用飞行距离来映射。\n\n\ncode\n\n\nchristmas_jfk &lt;- flights %&gt;% \n  filter(year == 2013 & month == 12 & day == 24 & origin == \"JFK\" ) %&gt;%\n  filter(carrier %in% c(\"AA\", \"UA\", \"US\")) %&gt;% \n  drop_na(arr_delay) %&gt;% \n  arrange(desc(arr_delay))\n\nchristmas_jfk %&gt;% print(width = Inf)\n\n# A tibble: 52 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    12    24     2016           1530       286     2326           1915\n 2  2013    12    24      816            750        26     1311           1255\n 3  2013    12    24      612            615        -3      829            817\n 4  2013    12    24      927            900        27     1237           1225\n 5  2013    12    24      717            720        -3     1056           1045\n 6  2013    12    24     1210           1200        10     1411           1400\n 7  2013    12    24     1909           1900         9     2225           2215\n 8  2013    12    24      804            800         4     1144           1135\n 9  2013    12    24     1536           1510        26     1852           1845\n10  2013    12    24     1700           1700         0     2046           2039\n   arr_delay carrier flight tailnum origin dest  air_time distance  hour minute\n       &lt;dbl&gt; &lt;chr&gt;    &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1       251 AA          85 N374AA  JFK    SFO        341     2586    15     30\n 2        16 AA         936 N5EUAA  JFK    STT        206     1623     7     50\n 3        12 US         840 N558UW  JFK    CLT        112      541     6     15\n 4        12 AA           1 N336AA  JFK    LAX        343     2475     9      0\n 5        11 AA        1345 N319AA  JFK    MIA        168     1089     7     20\n 6        11 US        1817 N540UW  JFK    CLT         88      541    12      0\n 7        10 AA          21 N339AA  JFK    LAX        343     2475    19      0\n 8         9 AA          59 N377AA  JFK    SFO        364     2586     8      0\n 9         7 AA         145 N5FHAA  JFK    MIA        173     1089    15     10\n10         7 UA         512 N597UA  JFK    SFO        363     2586    17      0\n   time_hour          \n   &lt;dttm&gt;             \n 1 2013-12-24 15:00:00\n 2 2013-12-24 07:00:00\n 3 2013-12-24 06:00:00\n 4 2013-12-24 09:00:00\n 5 2013-12-24 07:00:00\n 6 2013-12-24 12:00:00\n 7 2013-12-24 19:00:00\n 8 2013-12-24 08:00:00\n 9 2013-12-24 15:00:00\n10 2013-12-24 17:00:00\n# ℹ 42 more rows\n\nnrow(christmas_jfk)\n\n[1] 52\n\nchristmas_jfk %&gt;% \n  ggplot(aes(dep_time, arr_delay, col = carrier, size = distance)) + \n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\nflights %&gt;%\n  filter(year == 2013, month == 12, day == 24, \n         origin == \"JFK\", carrier %in% c(\"AA\", \"UA\", \"US\")) %&gt;%\n  drop_na(arr_delay) %&gt;% \n  arrange(desc(arr_delay)) %&gt;% \n  ggplot(aes(dep_time, arr_delay, col = carrier, size = distance)) + \n  geom_point(alpha = 0.5)"
  },
  {
    "objectID": "script5.html#columns",
    "href": "script5.html#columns",
    "title": "第5讲 tidyverse",
    "section": "3.4 Columns",
    "text": "3.4 Columns\n\n3.4.1 追加变量mutate()\n\nflights %&gt;% \n  mutate(\n    gain = arr_delay - dep_delay, \n    #gain = 到达延时 -出发延时。gain为正值,表示航班在飞行过程中增加了延迟，航班延迟增加。gain的负值，表示航班在飞行过程中减少了延迟，航班延迟减少，或者航班提前到达。\n    speed = distance / air_time * 60, #计算飞行速度,\n    .after = arr_delay  #将gain和speed放在arr_delay列后，默认是放在最后两列\n)\n\n# A tibble: 336,776 × 21\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 13 more variables: arr_delay &lt;dbl&gt;, gain &lt;dbl&gt;, speed &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nflights %&gt;% \n  mutate(\n    gain = arr_delay - dep_delay,\n    speed = distance / air_time * 60,\n    .before = 1) #将gain和speed放在第1列,第2列\n\n# A tibble: 336,776 × 21\n    gain speed  year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1     9  370.  2013     1     1      517            515         2      830\n 2    16  374.  2013     1     1      533            529         4      850\n 3    31  408.  2013     1     1      542            540         2      923\n 4   -17  517.  2013     1     1      544            545        -1     1004\n 5   -19  394.  2013     1     1      554            600        -6      812\n 6    16  288.  2013     1     1      554            558        -4      740\n 7    24  404.  2013     1     1      555            600        -5      913\n 8   -11  259.  2013     1     1      557            600        -3      709\n 9    -5  405.  2013     1     1      557            600        -3      838\n10    10  319.  2013     1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;% \n  mutate(\n    gain = arr_delay - dep_delay,\n    speed = distance / air_time * 60,\n    .after = day) #将gain和speed放在day列后\n\n# A tibble: 336,776 × 21\n    year month   day  gain speed dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013     1     1     9  370.      517            515         2      830\n 2  2013     1     1    16  374.      533            529         4      850\n 3  2013     1     1    31  408.      542            540         2      923\n 4  2013     1     1   -17  517.      544            545        -1     1004\n 5  2013     1     1   -19  394.      554            600        -6      812\n 6  2013     1     1    16  288.      554            558        -4      740\n 7  2013     1     1    24  404.      555            600        -5      913\n 8  2013     1     1   -11  259.      557            600        -3      709\n 9  2013     1     1    -5  405.      557            600        -3      838\n10  2013     1     1    10  319.      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n注意：\n当运行mutate() 时，追加变量，console中显示了追加的结果，但不会修改现有的数据框。\n要保存这个新的数据框，需要将其赋值&lt;-。\n\n\n3.4.2 选择变量select()\n\nflights %&gt;% \n  select(year, month, day) #选择year, month, day列\n\n# A tibble: 336,776 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# ℹ 336,766 more rows\n\nflights %&gt;% \n  select(year:day) #选择year到day列\n\n# A tibble: 336,776 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# ℹ 336,766 more rows\n\nflights %&gt;%\n  select(year:day, ends_with(\"delay\")) #选择year到day列和以delay结尾的列\n\n# A tibble: 336,776 × 5\n    year month   day dep_delay arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1  2013     1     1         2        11\n 2  2013     1     1         4        20\n 3  2013     1     1         2        33\n 4  2013     1     1        -1       -18\n 5  2013     1     1        -6       -25\n 6  2013     1     1        -4        12\n 7  2013     1     1        -5        19\n 8  2013     1     1        -3       -14\n 9  2013     1     1        -3        -8\n10  2013     1     1        -2         8\n# ℹ 336,766 more rows\n\nflights %&gt;%\n  select(!year:day) #选择除year到day列之外的列\n\n# A tibble: 336,776 × 16\n   dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier\n      &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;  \n 1      517            515         2      830            819        11 UA     \n 2      533            529         4      850            830        20 UA     \n 3      542            540         2      923            850        33 AA     \n 4      544            545        -1     1004           1022       -18 B6     \n 5      554            600        -6      812            837       -25 DL     \n 6      554            558        -4      740            728        12 UA     \n 7      555            600        -5      913            854        19 B6     \n 8      557            600        -3      709            723       -14 EV     \n 9      557            600        -3      838            846        -8 B6     \n10      558            600        -2      753            745         8 AA     \n# ℹ 336,766 more rows\n# ℹ 9 more variables: flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  select(where(is.character)) #选择类型是字符串的列\n\n# A tibble: 336,776 × 4\n   carrier tailnum origin dest \n   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;\n 1 UA      N14228  EWR    IAH  \n 2 UA      N24211  LGA    IAH  \n 3 AA      N619AA  JFK    MIA  \n 4 B6      N804JB  JFK    BQN  \n 5 DL      N668DN  LGA    ATL  \n 6 UA      N39463  EWR    ORD  \n 7 B6      N516JB  EWR    FLL  \n 8 EV      N829AS  LGA    IAD  \n 9 B6      N593JB  JFK    MCO  \n10 AA      N3ALAA  LGA    ORD  \n# ℹ 336,766 more rows\n\n\nThere are a number of helper functions you can use within select():\n\nstarts_with(“abc”): matches names that begin with “abc”.\nends_with(“xyz”): matches names that end with “xyz”.\ncontains(“ijk”): matches names that contain “ijk”.\nnum_range(“x”, 1:3): matches x1, x2 and x3.\n\n\n\n3.4.3 重命名变量rename()\n\nflights %&gt;% \n  rename(tail_num = tailnum) # 新名称 = 旧名称\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tail_num &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n# 保存重命名后的数据框\nmydata &lt;- flights %&gt;% \n  rename(tail_num = tailnum) # 新名称 = 旧名称\n\n\n\n3.4.4 二值转换if_else()\n\nflights %&gt;%\n  mutate(season = if_else(month %in% c(6, 7, 8), \"summer\", \"non-summer\")) %&gt;%\n  relocate(season, .before = month) #将season列放在month列前\n\n# A tibble: 336,776 × 20\n    year season     month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;chr&gt;      &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013 non-summer     1     1      517            515         2      830\n 2  2013 non-summer     1     1      533            529         4      850\n 3  2013 non-summer     1     1      542            540         2      923\n 4  2013 non-summer     1     1      544            545        -1     1004\n 5  2013 non-summer     1     1      554            600        -6      812\n 6  2013 non-summer     1     1      554            558        -4      740\n 7  2013 non-summer     1     1      555            600        -5      913\n 8  2013 non-summer     1     1      557            600        -3      709\n 9  2013 non-summer     1     1      557            600        -3      838\n10  2013 non-summer     1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.4.5 多值转换case_when()\n\nflights  %&gt;%  \n  mutate(\n    status = case_when(\n      is.na(arr_delay)      ~ \"cancelled\", #如果arr_delay为NA,则status为cancelled\n      arr_delay &lt; -30       ~ \"very early\", #如果航班提前超过30分钟到达，status为\"very early\"\n      arr_delay &lt; -15       ~ \"early\", #如果航班提前15到30分钟到达，status为\"early\"\n      abs(arr_delay) &lt;= 15  ~ \"on time\", #如果航班提前或延迟在15分钟以内，status为\"on time\"\n      arr_delay &lt; 60        ~ \"late\", #如果航班延迟小于60分钟，status为\"late\"\n      arr_delay &lt; Inf       ~ \"very late\", #如果航班延迟大于等于60分钟，status为\"late\"\n    ),\n    .after = arr_delay) #将status列放在arr_delay列后\n\n# A tibble: 336,776 × 20\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 12 more variables: arr_delay &lt;dbl&gt;, status &lt;chr&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.4.6 重新编码recode()\n\n# recode()函数 旧值 = 新值\n# case_when 适合于复杂条件的转换\n\nflights %&gt;%\n  mutate(quarter = recode(month,\n                         \"1\" = \"Winter\", \"2\" = \"Winter\", \"12\" = \"Winter\", \n                         \"3\" = \"Spring\", \"4\" = \"Spring\", \"5\" = \"Spring\",\n                         \"6\" = \"Summer\", \"7\" = \"Summer\", \"8\" = \"Summer\",\n                         \"9\" = \"Fall\", \"10\" = \"Fall\", \"11\" = \"Fall\"),\n         .before = month)\n\n# A tibble: 336,776 × 20\n    year quarter month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013 Winter      1     1      517            515         2      830\n 2  2013 Winter      1     1      533            529         4      850\n 3  2013 Winter      1     1      542            540         2      923\n 4  2013 Winter      1     1      544            545        -1     1004\n 5  2013 Winter      1     1      554            600        -6      812\n 6  2013 Winter      1     1      554            558        -4      740\n 7  2013 Winter      1     1      555            600        -5      913\n 8  2013 Winter      1     1      557            600        -3      709\n 9  2013 Winter      1     1      557            600        -3      838\n10  2013 Winter      1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n# 用case_when()更简洁\nflights %&gt;%\n  mutate(quarter = case_when(\n    month %in% c(12, 1, 2) ~ \"Winter\",\n    month %in% c(3, 4, 5) ~ \"Spring\",\n    month %in% c(6, 7, 8) ~ \"Summer\",\n    month %in% c(9, 10, 11) ~ \"Fall\"\n  ), \n  .before = month)\n\n# A tibble: 336,776 × 20\n    year quarter month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013 Winter      1     1      517            515         2      830\n 2  2013 Winter      1     1      533            529         4      850\n 3  2013 Winter      1     1      542            540         2      923\n 4  2013 Winter      1     1      544            545        -1     1004\n 5  2013 Winter      1     1      554            600        -6      812\n 6  2013 Winter      1     1      554            558        -4      740\n 7  2013 Winter      1     1      555            600        -5      913\n 8  2013 Winter      1     1      557            600        -3      709\n 9  2013 Winter      1     1      557            600        -3      838\n10  2013 Winter      1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights %&gt;%\n  mutate(company = recode(carrier,\n                          \"9E\" = \"Endeavor Air\",\n                          \"AA\" = \"American Airlines\",\n                          \"AS\" = \"Alaska Airlines\",\n                          \"B6\" = \"JetBlue Airways\",\n                          \"DL\" = \"Delta Air Lines\",\n                          \"EV\" = \"ExpressJet Airlines\",\n                          \"F9\" = \"Frontier Airlines\",\n                          \"FL\" = \"AirTran Airways\",\n                          \"HA\" = \"Hawaiian Airlines\",\n                          \"MQ\" = \"Envoy Air\",\n                          \"OO\" = \"SkyWest Airlines\",\n                          \"UA\" = \"United Airlines\",\n                          \"US\" = \"US Airways\",\n                          \"VX\" = \"Virgin America\",\n                          \"WN\" = \"Southwest Airlines\",\n                          \"YV\" = \"Mesa Airlines\"),\n         .after = carrier)\n\n# A tibble: 336,776 × 20\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 12 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, company &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n3.4.7 前置变量relocate()\n\nflights %&gt;% \n  relocate(time_hour, air_time) #将time_hour, air_time放到最前面\n\n# A tibble: 336,776 × 19\n   time_hour           air_time  year month   day dep_time sched_dep_time\n   &lt;dttm&gt;                 &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1 2013-01-01 05:00:00      227  2013     1     1      517            515\n 2 2013-01-01 05:00:00      227  2013     1     1      533            529\n 3 2013-01-01 05:00:00      160  2013     1     1      542            540\n 4 2013-01-01 05:00:00      183  2013     1     1      544            545\n 5 2013-01-01 06:00:00      116  2013     1     1      554            600\n 6 2013-01-01 05:00:00      150  2013     1     1      554            558\n 7 2013-01-01 06:00:00      158  2013     1     1      555            600\n 8 2013-01-01 06:00:00       53  2013     1     1      557            600\n 9 2013-01-01 06:00:00      140  2013     1     1      557            600\n10 2013-01-01 06:00:00      138  2013     1     1      558            600\n# ℹ 336,766 more rows\n# ℹ 12 more variables: dep_delay &lt;dbl&gt;, arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;,\n#   arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;\n\n\n\n\n3.4.8 小练习\n第1题：将出发地(origin)是”JFK”机场的航班筛选出来, 创建数据框jfk_flights, 在该数据框中追加如下变量：\n\n追加新变量distance_group。根据distance(单位：英里)的数值，将航班分为短途、中途和长途三类。 distance_group值为”short”, “medium”, “long”。distance_group与distance的对应关系如下：\n\n\n短途飞行（Short-haul flight）：飞行距离少于500英里的航班。\n中途飞行（Medium-haul flight）：飞行距离在500到1,550英里之间的航班。\n长途飞行（Long-haul flight）：飞行距离超过1,550英里的航班\n\n\n追加新变量status。若arr_delay的值为缺失值，则status等于cancelled，若arr_delay的值不是缺失值，则status等于normal。\n追加新变量month_name，将month的值转换为月份的英文名称，例如1转换为January，2转换为February，以此类推。\n\n第2题：绘制出第1题中得到的数据框jfk_flights中航班数量的条形图，横坐标为月份的英文名称，纵坐标为航班数量。\n第3题：绘制出第1题中得到的数据框jfk_flights中每个月份的取消/正常航班数量的条形图，横坐标为月份的英文名称，纵坐标为航班数量。\n\n\ncode\n\n\n# 筛选出发地为\"JFK\"的航班\njfk_flights &lt;- flights %&gt;% \n  filter(origin == \"JFK\")\n\n# 追加新变量distance_group, status和month_name\njfk_flights &lt;- jfk_flights %&gt;%\n  mutate(\n    distance_group = case_when(\n      distance &lt; 500 ~ \"short\",\n      distance &gt;= 500 & distance &lt;= 1550 ~ \"medium\",\n      distance &gt; 1550 ~ \"long\"\n    ),\n    status = if_else(is.na(arr_delay), \"cancelled\", \"normal\"),\n    month_name = month.abb[month],  # 使用内置的月份缩写向量month.abb\n    .after = day  # 将新变量放在day列后\n  )\n\njfk_flights\n\n# A tibble: 111,279 × 22\n    year month   day distance_group status month_name dep_time sched_dep_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;  &lt;chr&gt;         &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1 medium         normal Jan             542            540\n 2  2013     1     1 long           normal Jan             544            545\n 3  2013     1     1 medium         normal Jan             557            600\n 4  2013     1     1 medium         normal Jan             558            600\n 5  2013     1     1 medium         normal Jan             558            600\n 6  2013     1     1 long           normal Jan             558            600\n 7  2013     1     1 short          normal Jan             559            559\n 8  2013     1     1 medium         normal Jan             606            610\n 9  2013     1     1 long           normal Jan             611            600\n10  2013     1     1 medium         normal Jan             613            610\n# ℹ 111,269 more rows\n# ℹ 14 more variables: dep_delay &lt;dbl&gt;, arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;,\n#   arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;\n\n# 将month_name转换为有序因子，确保月份按自然顺序排序\njfk_flights$month_name &lt;- factor(jfk_flights$month_name, \n                                    levels = month.abb, \n                                    ordered = TRUE)\n\n# 绘制柱状图\nggplot(jfk_flights, aes(x = month_name, fill = month_name)) +\n  geom_bar() +\n  xlab(\"Month\") +\n  ylab(\"Number of Flights\") +\n  ggtitle(\"Number of Flights from JFK by Month\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 优化x轴标签显示\n\n\n\n\n\n\n\n# 绘制帕累托图\nggplot(jfk_flights, aes(x = fct_infreq(month_name), fill = month_name)) +\n  geom_bar() +\n  xlab(\"Month\") +\n  ylab(\"Number of Flights\") +\n  ggtitle(\"Number of Flights from JFK by Month\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 优化x轴标签显示\n\n\n\n\n\n\n\n# 绘制柱状图\nggplot(jfk_flights, aes(x = month_name, fill = month_name)) +\n  geom_bar() +\n  facet_wrap( ~ status, scales = \"free_y\") +  # 按status分面，y轴自由缩放\n  xlab(\"Month\") +\n  ylab(\"Number of Flights\") +\n  ggtitle(\"Number of Flights from JFK by Month\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 优化x轴标签显示"
  },
  {
    "objectID": "script5.html#the-pipe",
    "href": "script5.html#the-pipe",
    "title": "第5讲 tidyverse",
    "section": "3.5 The pipe",
    "text": "3.5 The pipe\n合并追加变量的代码,并保存到flights_new数据框中\n\n\nShow the code\n#追加gain, status, quarter和company\n\nflights_new &lt;- flights %&gt;% \n  mutate(\n    gain = arr_delay - dep_delay,\n    speed = distance / air_time * 60,\n    .after = arr_delay) %&gt;%\n    mutate(\n    status = case_when(\n      is.na(arr_delay)      ~ \"cancelled\", \n      arr_delay &lt; -30       ~ \"very early\", \n      arr_delay &lt; -15       ~ \"early\", \n      abs(arr_delay) &lt;= 15  ~ \"on time\", \n      arr_delay &lt; 60        ~ \"late\", \n      arr_delay &lt; Inf       ~ \"very late\", \n    ),\n    .after = arr_delay) %&gt;% \n  mutate(quarter = case_when(\n    month %in% c(12, 1, 2) ~ \"Winter\",\n    month %in% c(3, 4, 5) ~ \"Spring\",\n    month %in% c(6, 7, 8) ~ \"Summer\",\n    month %in% c(9, 10, 11) ~ \"Fall\"\n  ), \n  .before = month) %&gt;%\n  mutate(company = recode(carrier,\n                          \"9E\" = \"Endeavor Air\",\n                          \"AA\" = \"American Airlines\",\n                          \"AS\" = \"Alaska Airlines\",\n                          \"B6\" = \"JetBlue Airways\",\n                          \"DL\" = \"Delta Air Lines\",\n                          \"EV\" = \"ExpressJet Airlines\",\n                          \"F9\" = \"Frontier Airlines\",\n                          \"FL\" = \"AirTran Airways\",\n                          \"HA\" = \"Hawaiian Airlines\",\n                          \"MQ\" = \"Envoy Air\",\n                          \"OO\" = \"SkyWest Airlines\",\n                          \"UA\" = \"United Airlines\",\n                          \"US\" = \"US Airways\",\n                          \"VX\" = \"Virgin America\",\n                          \"WN\" = \"Southwest Airlines\",\n                          \"YV\" = \"Mesa Airlines\"),\n         .after = carrier) \n\nflights_new \n\n\n# A tibble: 336,776 × 24\n    year quarter month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;chr&gt;   &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013 Winter      1     1      517            515         2      830\n 2  2013 Winter      1     1      533            529         4      850\n 3  2013 Winter      1     1      542            540         2      923\n 4  2013 Winter      1     1      544            545        -1     1004\n 5  2013 Winter      1     1      554            600        -6      812\n 6  2013 Winter      1     1      554            558        -4      740\n 7  2013 Winter      1     1      555            600        -5      913\n 8  2013 Winter      1     1      557            600        -3      709\n 9  2013 Winter      1     1      557            600        -3      838\n10  2013 Winter      1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 16 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, status &lt;chr&gt;,\n#   gain &lt;dbl&gt;, speed &lt;dbl&gt;, carrier &lt;chr&gt;, company &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "script5.html#groups",
    "href": "script5.html#groups",
    "title": "第5讲 tidyverse",
    "section": "3.6 Groups",
    "text": "3.6 Groups\n\n3.6.1 group_by()\n\nflights %&gt;% \n  group_by(month) #按照month分组\n\n# A tibble: 336,776 × 19\n# Groups:   month [12]\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\ngroup_by() 不会改变数据，但输出显示它是按”月份”分组的。这意味着随后的操作现在将”按月”进行。group_by() 为数据框添加了这个分组特征，这改变了随后应用于数据的动作。\n\n\n3.6.2 summarize()\n\nflights %&gt;% \n  group_by(month) %&gt;% \n  summarise(mean_delay = mean(dep_delay)) #按照month分组，计算dep_delay的均值\n\n# A tibble: 12 × 2\n   month mean_delay\n   &lt;int&gt;      &lt;dbl&gt;\n 1     1         NA\n 2     2         NA\n 3     3         NA\n 4     4         NA\n 5     5         NA\n 6     6         NA\n 7     7         NA\n 8     8         NA\n 9     9         NA\n10    10         NA\n11    11         NA\n12    12         NA\n\n\nNA: missing value\n当向量中有NA，mean()函数默认返回NA，如果想忽略NA值，可以使用na.rm = TRUE\n\nflights %&gt;% \n  group_by(month) %&gt;% \n  summarise(mean_delay = mean(dep_delay, na.rm = TRUE), #na.rm = TRUE表示忽略NA值\n            n = n()\n  ) #按照month分组，计算dep_delay的均值和n\n\n# A tibble: 12 × 3\n   month mean_delay     n\n   &lt;int&gt;      &lt;dbl&gt; &lt;int&gt;\n 1     1      10.0  27004\n 2     2      10.8  24951\n 3     3      13.2  28834\n 4     4      13.9  28330\n 5     5      13.0  28796\n 6     6      20.8  28243\n 7     7      21.7  29425\n 8     8      12.6  29327\n 9     9       6.72 27574\n10    10       6.24 28889\n11    11       5.44 27268\n12    12      16.6  28135\n\n\n\n# 统计每天的航班数量\nflights %&gt;% \n  group_by(year, month, day) %&gt;% \n  summarise(n = n()) #生成的数据框是一个有分组结构的数据框\n\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 365 × 4\n# Groups:   year, month [12]\n    year month   day     n\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1   842\n 2  2013     1     2   943\n 3  2013     1     3   914\n 4  2013     1     4   915\n 5  2013     1     5   720\n 6  2013     1     6   832\n 7  2013     1     7   933\n 8  2013     1     8   899\n 9  2013     1     9   902\n10  2013     1    10   932\n# ℹ 355 more rows\n\nflights %&gt;% \n  group_by(year, month, day) %&gt;% \n  summarise(n = n(),           #按照year, month, day分组，计算n\n            .groups = \"drop\"   #生成的数据框是没有分组结构\n            ) \n\n# A tibble: 365 × 4\n    year month   day     n\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1   842\n 2  2013     1     2   943\n 3  2013     1     3   914\n 4  2013     1     4   915\n 5  2013     1     5   720\n 6  2013     1     6   832\n 7  2013     1     7   933\n 8  2013     1     8   899\n 9  2013     1     9   902\n10  2013     1    10   932\n# ℹ 355 more rows\n\n\n\n\n3.6.3 .by\n\nflights %&gt;% \n  summarize(mean_delay = mean(dep_delay, na.rm = TRUE) %&gt;% round(3),\n            n = n(),\n            .by = month \n  ) %&gt;% #按月份分组，计算dep_delay的均值和n\n  arrange(desc(mean_delay)) #按mean_delay降序\n\n# A tibble: 12 × 3\n   month mean_delay     n\n   &lt;int&gt;      &lt;dbl&gt; &lt;int&gt;\n 1     7      21.7  29425\n 2     6      20.8  28243\n 3    12      16.6  28135\n 4     4      13.9  28330\n 5     3      13.2  28834\n 6     5      13.0  28796\n 7     8      12.6  29327\n 8     2      10.8  24951\n 9     1      10.0  27004\n10     9       6.72 27574\n11    10       6.24 28889\n12    11       5.44 27268\n\nflights %&gt;% \n  summarize(mean_delay = mean(dep_delay, na.rm = TRUE) %&gt;% round(3),\n            n = n(),\n            .by = c(origin)  #按origin分组，计算dep_delay的均值和n\n            ) %&gt;% \n  arrange(desc(mean_delay)) #按mean_delay降序\n\n# A tibble: 3 × 3\n  origin mean_delay      n\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;int&gt;\n1 EWR          15.1 120835\n2 JFK          12.1 111279\n3 LGA          10.3 104662\n\nflights %&gt;% \n  summarize(mean_delay = mean(dep_delay, na.rm = TRUE)%&gt;% round(3),\n            n = n(),\n            .by = c(dest) #按dest分组，计算dep_delay的均值和n\n            ) %&gt;%\n  arrange(desc(mean_delay)) #按mean_delay降序\n\n# A tibble: 105 × 3\n   dest  mean_delay     n\n   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;\n 1 CAE         35.6   116\n 2 TUL         34.9   315\n 3 OKC         30.6   346\n 4 BHM         29.7   297\n 5 TYS         28.5   631\n 6 JAC         26.5    25\n 7 DSM         26.2   569\n 8 RIC         23.6  2454\n 9 ALB         23.6   439\n10 MSN         23.6   572\n# ℹ 95 more rows\n\nflights %&gt;% \n  summarize(mean_delay = mean(dep_delay, na.rm = TRUE)%&gt;% round(3),\n            n = n(),\n            .by = c(origin, dest) #按origin, dest分组，计算dep_delay的均值和n\n            ) %&gt;%\n  arrange(desc(mean_delay)) #按mean_delay降序\n\n# A tibble: 224 × 4\n   origin dest  mean_delay     n\n   &lt;chr&gt;  &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;\n 1 EWR    TYS         41.8   323\n 2 EWR    CAE         36.3   104\n 3 EWR    TUL         34.9   315\n 4 LGA    SBN         31.3     6\n 5 EWR    OKC         30.6   346\n 6 LGA    BHM         29.8   296\n 7 LGA    CAE         29.5    12\n 8 EWR    DSM         29.3   411\n 9 EWR    JAC         28.7    23\n10 EWR    ROC         27.9   513\n# ℹ 214 more rows\n\n\n\n\n3.6.4 小练习\n第1题：如果你想尽可能避免延误，你应该选择哪个时间段起飞的航班？\n第2题：哪三家航空公司(carrier)的平均延误时间(arr_delay)最长？\n第3题：哪个月份的平均延误时间(arr_delay)最长？\n第4题：将延误时间(arr_delay)超过15分钟的定义为延误航班。 计算各个月份的延误航班的比例，并按比例降序排列。\n第5题：将延误时间(arr_delay)超过15分钟的定义为延误航班。 计算各个航空公司(carrier)的延误航班的比例，并按各航空公司航班数量降序排列。\n第6题：从JFK机场出发(origin)的航班中，航班数量最多的5家航空公司是哪些？并统计出其航班数量？\n\n\ncode\n\n\n# 第1题\nflights %&gt;%\n  group_by(hour) %&gt;%\n  summarise(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %&gt;%\n  arrange(avg_arr_delay) %&gt;% \n  print(n = Inf)\n\n# A tibble: 20 × 2\n    hour avg_arr_delay\n   &lt;dbl&gt;         &lt;dbl&gt;\n 1     7        -5.30 \n 2     5        -4.80 \n 3     6        -3.38 \n 4     9        -1.45 \n 5     8        -1.11 \n 6    10         0.954\n 7    11         1.48 \n 8    12         3.49 \n 9    13         6.54 \n10    14         9.20 \n11    23        11.8  \n12    15        12.3  \n13    16        12.6  \n14    18        14.8  \n15    22        16.0  \n16    17        16.0  \n17    19        16.7  \n18    20        16.7  \n19    21        18.4  \n20     1       NaN    \n\n# 第2题\nflights %&gt;%\n  group_by(carrier) %&gt;%\n  summarise(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %&gt;%\n  arrange(desc(avg_arr_delay)) %&gt;%\n  top_n(3, avg_arr_delay)\n\n# A tibble: 3 × 2\n  carrier avg_arr_delay\n  &lt;chr&gt;           &lt;dbl&gt;\n1 F9               21.9\n2 FL               20.1\n3 EV               15.8\n\n# 第3题\nflights %&gt;%\n  group_by(month) %&gt;%\n  summarise(avg_arr_delay = mean(arr_delay, na.rm = TRUE)) %&gt;%\n  arrange(desc(avg_arr_delay)) \n\n# A tibble: 12 × 2\n   month avg_arr_delay\n   &lt;int&gt;         &lt;dbl&gt;\n 1     7        16.7  \n 2     6        16.5  \n 3    12        14.9  \n 4     4        11.2  \n 5     1         6.13 \n 6     8         6.04 \n 7     3         5.81 \n 8     2         5.61 \n 9     5         3.52 \n10    11         0.461\n11    10        -0.167\n12     9        -4.02 \n\n# 第4题\nflights %&gt;%\n  mutate(is_delayed = arr_delay &gt; 15) %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    total_flights = n(),\n    delayed_flights = sum(is_delayed, na.rm = TRUE),\n    delay_proportion = delayed_flights / total_flights\n  ) %&gt;%\n  arrange(desc(delay_proportion)) \n\n# A tibble: 12 × 4\n   month total_flights delayed_flights delay_proportion\n   &lt;int&gt;         &lt;int&gt;           &lt;int&gt;            &lt;dbl&gt;\n 1    12         28135            8812            0.313\n 2     7         29425            8902            0.303\n 3     6         28243            8340            0.295\n 4     4         28330            7700            0.272\n 5     8         29327            6852            0.234\n 6     1         27004            6001            0.222\n 7     3         28834            6374            0.221\n 8     2         24951            5418            0.217\n 9     5         28796            6178            0.215\n10    11         27268            4680            0.172\n11    10         28889            4798            0.166\n12     9         27574            3575            0.130\n\n# 第5题\nflights %&gt;%\n  mutate(is_delayed = arr_delay &gt; 15) %&gt;%\n  group_by(carrier) %&gt;%\n  summarise(\n    total_flights = n(),\n    delayed_flights = sum(is_delayed, na.rm = TRUE),\n    delay_proportion = delayed_flights / total_flights\n  ) %&gt;%\n  arrange(desc(total_flights)) \n\n# A tibble: 16 × 4\n   carrier total_flights delayed_flights delay_proportion\n   &lt;chr&gt;           &lt;int&gt;           &lt;int&gt;            &lt;dbl&gt;\n 1 UA              58665           12592            0.215\n 2 B6              54635           14111            0.258\n 3 EV              54173           16028            0.296\n 4 DL              48110            8690            0.181\n 5 AA              32729            6004            0.183\n 6 MQ              26397            6777            0.257\n 7 US              20536            3559            0.173\n 8 9E              18460            4309            0.233\n 9 WN              12275            2994            0.244\n10 VX               5162             924            0.179\n11 FL               3260            1065            0.327\n12 AS                714             102            0.143\n13 F9                685             254            0.371\n14 YV                601             171            0.285\n15 HA                342              43            0.126\n16 OO                 32               7            0.219\n\n# 第6题\nflights %&gt;%\n  filter(origin == \"JFK\") %&gt;%\n  group_by(carrier) %&gt;%\n  summarise(number_of_flights = n()) %&gt;%\n  arrange(desc(number_of_flights)) %&gt;%\n  top_n(5, number_of_flights) \n\n# A tibble: 5 × 2\n  carrier number_of_flights\n  &lt;chr&gt;               &lt;int&gt;\n1 B6                  42076\n2 DL                  20701\n3 9E                  14651\n4 AA                  13783\n5 MQ                   7193"
  },
  {
    "objectID": "L6.html",
    "href": "L6.html",
    "title": "第6讲",
    "section": "",
    "text": "讲义6.1 描述统计量的计算\n讲义6.1 绘制概率密度曲线\n\n\nR描述统计量的批量计算describe函数\nR计算分位数quantile函数\n利用R绘制正态分布概率密度曲线\nR中rchisq函数和for循环的应用——不同自由度下的卡方分布比较\n\n\n\n\n\n第1题\n\n第1题：数据：ggplot2::mpg\n要求：将代码与输出结果转成图片后提交。\n1.1 报告该数据集中所有定量变量的均值、中位数、最⼤值、最小值、四分位数、⽅差、标准差、偏度和峰度。\n1.2 将mpg中的汽车按照drv的不同分为三组（front-wheel, four-wheel, rear-wheel）, 计算各组的cty和hwy的均值、中位数、最⼤值、最小值和标准差。\n\n\n\n第2题\n\n第2题：绘制概率密度曲线 2.1 在同⼀个坐标系下绘制N(0,1),N(-1,0.25),N(2,4)的概率密度曲线。\n2.2 在同⼀个坐标系下绘制N(0,1), t(2), t(5),t(30)的概率密度曲线。\n2.3 在同⼀个坐标系下绘制chisq(5), chisq(10), chisq(30)的概率密度曲线。\n2.4 同⼀个坐标系下绘制F(2, 5), F(5, 10)的概率密度曲线。\n\n\n\n第3题\n\n第3题:绘制直方图。 用循环语句完成下列图形的绘制：\n3.1 ⽣成1000个服从自由度为4的卡方分布的随机数，绘制其直⽅图。\n3.2 ⽣成1000个服从自由度为8的卡方分布的随机数，绘制其直⽅图。\n3.3 ⽣成1000个服从自由度为12的卡方分布的随机数，绘制其直⽅图。\n3.4 ⽣成1000个服从自由度为16的卡方分布的随机数，绘制其直⽅图。\n3.5 ⽣成1000个服从自由度为20的卡方分布的随机数，绘制其直⽅图。\n3.6 ⽣成1000个服从自由度为24的卡方分布的随机数，绘制其直⽅图。\n\n\n\n\n第6讲习题答案Script\n\n\n\nR如何快速预览变量分布？summarytools::dfSummary()\nR描述统计输出结果的表格化及导出到word文档\nR 如何快速诊断数据的缺失值异常值和分布特征?\nR如何快速考察数据分布？批量绘制条形图、直方图、箱线图、QQ图"
  },
  {
    "objectID": "L6.html#教学视频",
    "href": "L6.html#教学视频",
    "title": "第6讲",
    "section": "",
    "text": "R描述统计量的批量计算describe函数\nR计算分位数quantile函数\n利用R绘制正态分布概率密度曲线\nR中rchisq函数和for循环的应用——不同自由度下的卡方分布比较"
  },
  {
    "objectID": "L6.html#本章习题",
    "href": "L6.html#本章习题",
    "title": "第6讲",
    "section": "",
    "text": "第1题\n\n第1题：数据：ggplot2::mpg\n要求：将代码与输出结果转成图片后提交。\n1.1 报告该数据集中所有定量变量的均值、中位数、最⼤值、最小值、四分位数、⽅差、标准差、偏度和峰度。\n1.2 将mpg中的汽车按照drv的不同分为三组（front-wheel, four-wheel, rear-wheel）, 计算各组的cty和hwy的均值、中位数、最⼤值、最小值和标准差。\n\n\n\n第2题\n\n第2题：绘制概率密度曲线 2.1 在同⼀个坐标系下绘制N(0,1),N(-1,0.25),N(2,4)的概率密度曲线。\n2.2 在同⼀个坐标系下绘制N(0,1), t(2), t(5),t(30)的概率密度曲线。\n2.3 在同⼀个坐标系下绘制chisq(5), chisq(10), chisq(30)的概率密度曲线。\n2.4 同⼀个坐标系下绘制F(2, 5), F(5, 10)的概率密度曲线。\n\n\n\n第3题\n\n第3题:绘制直方图。 用循环语句完成下列图形的绘制：\n3.1 ⽣成1000个服从自由度为4的卡方分布的随机数，绘制其直⽅图。\n3.2 ⽣成1000个服从自由度为8的卡方分布的随机数，绘制其直⽅图。\n3.3 ⽣成1000个服从自由度为12的卡方分布的随机数，绘制其直⽅图。\n3.4 ⽣成1000个服从自由度为16的卡方分布的随机数，绘制其直⽅图。\n3.5 ⽣成1000个服从自由度为20的卡方分布的随机数，绘制其直⽅图。\n3.6 ⽣成1000个服从自由度为24的卡方分布的随机数，绘制其直⽅图。"
  },
  {
    "objectID": "L6.html#习题答案",
    "href": "L6.html#习题答案",
    "title": "第6讲",
    "section": "",
    "text": "第6讲习题答案Script"
  },
  {
    "objectID": "L6.html#拓展资源",
    "href": "L6.html#拓展资源",
    "title": "第6讲",
    "section": "",
    "text": "R如何快速预览变量分布？summarytools::dfSummary()\nR描述统计输出结果的表格化及导出到word文档\nR 如何快速诊断数据的缺失值异常值和分布特征?\nR如何快速考察数据分布？批量绘制条形图、直方图、箱线图、QQ图"
  },
  {
    "objectID": "L3.html",
    "href": "L3.html",
    "title": "第3讲",
    "section": "",
    "text": "讲义\n\n\nR绘制直方图：hist函数的运用\nR 直方图中如何自定义组数和组距？\n箱线图 boxplot函数\nR 条形图 barplot函数\n散点图的绘制——R中的plot函数\n\n\n\n讲义"
  },
  {
    "objectID": "L3.html#教学视频",
    "href": "L3.html#教学视频",
    "title": "第3讲",
    "section": "",
    "text": "R绘制直方图：hist函数的运用\nR 直方图中如何自定义组数和组距？\n箱线图 boxplot函数\nR 条形图 barplot函数\n散点图的绘制——R中的plot函数"
  },
  {
    "objectID": "L3.html#习题讲评",
    "href": "L3.html#习题讲评",
    "title": "第3讲",
    "section": "",
    "text": "讲义"
  },
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "5dplyr.html",
    "href": "5dplyr.html",
    "title": "Data Manipulation with dplyr",
    "section": "",
    "text": "本节使用数据集starwars。\n#加载包dplyr\nlibrary(dplyr)\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#dplyr函数的分类",
    "href": "5dplyr.html#dplyr函数的分类",
    "title": "Data Manipulation with dplyr",
    "section": "dplyr函数的分类",
    "text": "dplyr函数的分类\n所有的dplyr函数，第1项参数都是数据框（data frame 或者 tibble)\ndplyr提供了一系列管理数据的函数，根据管理的对象不同，可以将这些函数分为对列的管理、对行的管理、对行组的管理三类。\n\n列的管理 Columns:\n\nselect() changes whether or not a column is included.\nrename() changes the name of columns.\nmutate() changes the values of columns and creates new columns.\nrelocate() changes the order of the columns.\n\n行的管理 Rows:\n\nfilter() chooses rows based on column values.\nslice() chooses rows based on location.\narrange() changes the order of the rows.\n\n行组的管理Groups of rows:\n\nsummarise() collapses a group into a single row.\ncount()\ntop_n()"
  },
  {
    "objectID": "5dplyr.html#dplyr函数的共性-commonalities",
    "href": "5dplyr.html#dplyr函数的共性-commonalities",
    "title": "Data Manipulation with dplyr",
    "section": "dplyr函数的共性 Commonalities",
    "text": "dplyr函数的共性 Commonalities\n\n第1项参数是data frame.\n第2项参数描述动作。\n输出结果是一个新的data frame."
  },
  {
    "objectID": "5dplyr.html#select",
    "href": "5dplyr.html#select",
    "title": "Data Manipulation with dplyr",
    "section": "select()",
    "text": "select()\n\ncontains()\nstarts_with()\nends_with()\nlast_col()\n?select_helpers\n\n\n#names()列出数据框所有变量名\nnames(starwars)\n\n [1] \"name\"       \"height\"     \"mass\"       \"hair_color\" \"skin_color\"\n [6] \"eye_color\"  \"birth_year\" \"sex\"        \"gender\"     \"homeworld\" \n[11] \"species\"    \"films\"      \"vehicles\"   \"starships\" \n\n#选择需要的变量，创建新的数据框\nstarwars_selected &lt;- starwars %&gt;% select(\n  name, height, mass, sex, species, films)\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#选择一个范围，变量名1：变量2\ndata1 &lt;- starwars %&gt;% \n       select(name:mass)\ndata1\n\n# A tibble: 87 × 3\n   name               height  mass\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt;\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun Lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n\n#设置条件 contains()\ndata2 &lt;- starwars %&gt;% \n       select(name, species, contains(\"color\"))\ndata2\n\n# A tibble: 87 × 5\n   name               species hair_color    skin_color  eye_color\n   &lt;chr&gt;              &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;    \n 1 Luke Skywalker     Human   blond         fair        blue     \n 2 C-3PO              Droid   &lt;NA&gt;          gold        yellow   \n 3 R2-D2              Droid   &lt;NA&gt;          white, blue red      \n 4 Darth Vader        Human   none          white       yellow   \n 5 Leia Organa        Human   brown         light       brown    \n 6 Owen Lars          Human   brown, grey   light       blue     \n 7 Beru Whitesun Lars Human   brown         light       blue     \n 8 R5-D4              Droid   &lt;NA&gt;          white, red  red      \n 9 Biggs Darklighter  Human   black         light       brown    \n10 Obi-Wan Kenobi     Human   auburn, white fair        blue-gray\n# ℹ 77 more rows"
  },
  {
    "objectID": "5dplyr.html#mutate",
    "href": "5dplyr.html#mutate",
    "title": "Data Manipulation with dplyr",
    "section": "mutate()",
    "text": "mutate()\n在数据集中追加新的变量。\n\n#生成新变量\nstarwars_selected %&gt;% \n  mutate(BMI = mass/((height/100)^2)) %&gt;% \n  arrange(desc(BMI))\n\n# A tibble: 87 × 7\n   name                  height  mass sex            species        films    BMI\n   &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;          &lt;list&gt; &lt;dbl&gt;\n 1 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt           &lt;chr&gt;  443. \n 2 Dud Bolt                  94    45 male           Vulptereen     &lt;chr&gt;   50.9\n 3 Yoda                      66    17 male           Yoda's species &lt;chr&gt;   39.0\n 4 Owen Lars                178   120 male           Human          &lt;chr&gt;   37.9\n 5 IG-88                    200   140 none           Droid          &lt;chr&gt;   35  \n 6 R2-D2                     96    32 none           Droid          &lt;chr&gt;   34.7\n 7 Grievous                 216   159 male           Kaleesh        &lt;chr&gt;   34.1\n 8 R5-D4                     97    32 none           Droid          &lt;chr&gt;   34.0\n 9 Jek Tono Porkins         180   110 &lt;NA&gt;           &lt;NA&gt;           &lt;chr&gt;   34.0\n10 Darth Vader              202   136 male           Human          &lt;chr&gt;   33.3\n# ℹ 77 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\nstarwars_selected %&gt;% \n  mutate(wt_rank = min_rank(desc(mass))) %&gt;% \n  arrange((wt_rank)) \n\n# A tibble: 87 × 7\n   name                  height  mass sex            species    films  wt_rank\n   &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;      &lt;list&gt;   &lt;int&gt;\n 1 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt       &lt;chr&gt;        1\n 2 Grievous                 216   159 male           Kaleesh    &lt;chr&gt;        2\n 3 IG-88                    200   140 none           Droid      &lt;chr&gt;        3\n 4 Darth Vader              202   136 male           Human      &lt;chr&gt;        4\n 5 Tarfful                  234   136 male           Wookiee    &lt;chr&gt;        4\n 6 Owen Lars                178   120 male           Human      &lt;chr&gt;        6\n 7 Bossk                    190   113 male           Trandoshan &lt;chr&gt;        7\n 8 Chewbacca                228   112 male           Wookiee    &lt;chr&gt;        8\n 9 Jek Tono Porkins         180   110 &lt;NA&gt;           &lt;NA&gt;       &lt;chr&gt;        9\n10 Dexter Jettster          198   102 male           Besalisk   &lt;chr&gt;       10\n# ℹ 77 more rows\n\n#overwrite the variable\nstarwars_selected %&gt;% \n  mutate(height = height/100) %&gt;% \n  arrange(desc(height))\n\n# A tibble: 87 × 6\n   name         height  mass sex    species  films    \n   &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;list&gt;   \n 1 Yarael Poof    2.64    NA male   Quermian &lt;chr [1]&gt;\n 2 Tarfful        2.34   136 male   Wookiee  &lt;chr [1]&gt;\n 3 Lama Su        2.29    88 male   Kaminoan &lt;chr [1]&gt;\n 4 Chewbacca      2.28   112 male   Wookiee  &lt;chr [5]&gt;\n 5 Roos Tarpals   2.24    82 male   Gungan   &lt;chr [1]&gt;\n 6 Grievous       2.16   159 male   Kaleesh  &lt;chr [1]&gt;\n 7 Taun We        2.13    NA female Kaminoan &lt;chr [1]&gt;\n 8 Rugor Nass     2.06    NA male   Gungan   &lt;chr [1]&gt;\n 9 Tion Medon     2.06    80 male   Pau'an   &lt;chr [1]&gt;\n10 Darth Vader    2.02   136 male   Human    &lt;chr [4]&gt;\n# ℹ 77 more rows\n\n#everything() selects all variable.\nstarwars %&gt;%\n  mutate(height_m = height / 100) %&gt;%\n  select(height_m, height, everything())\n\n# A tibble: 87 × 15\n   height_m height name    mass hair_color skin_color eye_color birth_year sex  \n      &lt;dbl&gt;  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;\n 1     1.72    172 Luke …    77 blond      fair       blue            19   male \n 2     1.67    167 C-3PO     75 &lt;NA&gt;       gold       yellow         112   none \n 3     0.96     96 R2-D2     32 &lt;NA&gt;       white, bl… red             33   none \n 4     2.02    202 Darth…   136 none       white      yellow          41.9 male \n 5     1.5     150 Leia …    49 brown      light      brown           19   fema…\n 6     1.78    178 Owen …   120 brown, gr… light      blue            52   male \n 7     1.65    165 Beru …    75 brown      light      blue            47   fema…\n 8     0.97     97 R5-D4     32 &lt;NA&gt;       white, red red             NA   none \n 9     1.83    183 Biggs…    84 black      light      brown           24   male \n10     1.82    182 Obi-W…    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 6 more variables: gender &lt;chr&gt;, homeworld &lt;chr&gt;, species &lt;chr&gt;,\n#   films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#rename",
    "href": "5dplyr.html#rename",
    "title": "Data Manipulation with dplyr",
    "section": "rename()",
    "text": "rename()\n\n#重命名变量，rename(新名=旧名)\nstarwars_selected %&gt;% \n  rename(weight = mass)\n\n# A tibble: 87 × 6\n   name               height weight sex    species films    \n   &lt;chr&gt;               &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172     77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167     75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96     32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202    136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150     49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178    120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun Lars    165     75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97     32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183     84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182     77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#在select 的时候重命名\ndata3 &lt;- starwars %&gt;% \n  select(name, height, weight = mass)\ndata3\n\n# A tibble: 87 × 3\n   name               height weight\n   &lt;chr&gt;               &lt;int&gt;  &lt;dbl&gt;\n 1 Luke Skywalker        172     77\n 2 C-3PO                 167     75\n 3 R2-D2                  96     32\n 4 Darth Vader           202    136\n 5 Leia Organa           150     49\n 6 Owen Lars             178    120\n 7 Beru Whitesun Lars    165     75\n 8 R5-D4                  97     32\n 9 Biggs Darklighter     183     84\n10 Obi-Wan Kenobi        182     77\n# ℹ 77 more rows"
  },
  {
    "objectID": "5dplyr.html#transmute",
    "href": "5dplyr.html#transmute",
    "title": "Data Manipulation with dplyr",
    "section": "transmute()",
    "text": "transmute()\ntransmute()是select()和mutate()的结合。\nTransmute is like a combination of select and mutate: you are getting back just a subset of the columns, but you are transforming and changing them at the same time.\n\ndata4 &lt;- starwars %&gt;% \n  filter(height != \"NA\") %&gt;% \n  transmute(name, height, mass, bmi = mass/((height/100)^2))\ndata4\n\n# A tibble: 81 × 4\n   name               height  mass   bmi\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Luke Skywalker        172    77  26.0\n 2 C-3PO                 167    75  26.9\n 3 R2-D2                  96    32  34.7\n 4 Darth Vader           202   136  33.3\n 5 Leia Organa           150    49  21.8\n 6 Owen Lars             178   120  37.9\n 7 Beru Whitesun Lars    165    75  27.5\n 8 R5-D4                  97    32  34.0\n 9 Biggs Darklighter     183    84  25.1\n10 Obi-Wan Kenobi        182    77  23.2\n# ℹ 71 more rows"
  },
  {
    "objectID": "5dplyr.html#relocate",
    "href": "5dplyr.html#relocate",
    "title": "Data Manipulation with dplyr",
    "section": "relocate()",
    "text": "relocate()\n调整列的排列顺序。\n\nstarwars %&gt;% relocate(sex:homeworld, .before = height)\n\n# A tibble: 87 × 14\n   name      sex   gender homeworld height  mass hair_color skin_color eye_color\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;    \n 1 Luke Sky… male  mascu… Tatooine     172    77 blond      fair       blue     \n 2 C-3PO     none  mascu… Tatooine     167    75 &lt;NA&gt;       gold       yellow   \n 3 R2-D2     none  mascu… Naboo         96    32 &lt;NA&gt;       white, bl… red      \n 4 Darth Va… male  mascu… Tatooine     202   136 none       white      yellow   \n 5 Leia Org… fema… femin… Alderaan     150    49 brown      light      brown    \n 6 Owen Lars male  mascu… Tatooine     178   120 brown, gr… light      blue     \n 7 Beru Whi… fema… femin… Tatooine     165    75 brown      light      blue     \n 8 R5-D4     none  mascu… Tatooine      97    32 &lt;NA&gt;       white, red red      \n 9 Biggs Da… male  mascu… Tatooine     183    84 black      light      brown    \n10 Obi-Wan … male  mascu… Stewjon      182    77 auburn, w… fair       blue-gray\n# ℹ 77 more rows\n# ℹ 5 more variables: birth_year &lt;dbl&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars %&gt;% \n  select(name, species, everything())\n\n# A tibble: 87 × 14\n   name    species height  mass hair_color skin_color eye_color birth_year sex  \n   &lt;chr&gt;   &lt;chr&gt;    &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;\n 1 Luke S… Human      172    77 blond      fair       blue            19   male \n 2 C-3PO   Droid      167    75 &lt;NA&gt;       gold       yellow         112   none \n 3 R2-D2   Droid       96    32 &lt;NA&gt;       white, bl… red             33   none \n 4 Darth … Human      202   136 none       white      yellow          41.9 male \n 5 Leia O… Human      150    49 brown      light      brown           19   fema…\n 6 Owen L… Human      178   120 brown, gr… light      blue            52   male \n 7 Beru W… Human      165    75 brown      light      blue            47   fema…\n 8 R5-D4   Droid       97    32 &lt;NA&gt;       white, red red             NA   none \n 9 Biggs … Human      183    84 black      light      brown           24   male \n10 Obi-Wa… Human      182    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 5 more variables: gender &lt;chr&gt;, homeworld &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#if_else",
    "href": "5dplyr.html#if_else",
    "title": "Data Manipulation with dplyr",
    "section": "if_else()",
    "text": "if_else()\n对变量值进行条件转换。\n\n#加载包tidyr，drop_na()属于包tidyr\nlibrary(tidyr)\nsize_of_weight &lt;- starwars_selected %&gt;% \n  drop_na(mass) %&gt;% \n  mutate(weight_size = if_else(mass &gt;100, \n                               \"large\",\n                               \"small\"))\nsize_of_weight\n\n# A tibble: 59 × 7\n   name               height  mass sex    species films     weight_size\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;    &lt;chr&gt;      \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt; small      \n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt; small      \n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt; small      \n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt; large      \n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt; small      \n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt; large      \n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt; small      \n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt; small      \n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt; small      \n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt; small      \n# ℹ 49 more rows"
  },
  {
    "objectID": "5dplyr.html#recode",
    "href": "5dplyr.html#recode",
    "title": "Data Manipulation with dplyr",
    "section": "recode()",
    "text": "recode()\n对变量值进行重新编码。\n\n# overwrite the original variable.\nsize_of_weight %&gt;% \n  mutate(weight_size = recode(weight_size,\n                              \"large\" =1,\n                              \"small\" =2))\n\n# A tibble: 59 × 7\n   name               height  mass sex    species films     weight_size\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;          &lt;dbl&gt;\n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;           2\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;           2\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;           2\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;           1\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;           2\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;           1\n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt;           2\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;           2\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;           2\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;           2\n# ℹ 49 more rows\n\nsize_of_weight\n\n# A tibble: 59 × 7\n   name               height  mass sex    species films     weight_size\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;    &lt;chr&gt;      \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt; small      \n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt; small      \n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt; small      \n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt; large      \n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt; small      \n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt; large      \n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt; small      \n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt; small      \n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt; small      \n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt; small      \n# ℹ 49 more rows"
  },
  {
    "objectID": "5dplyr.html#duplicated",
    "href": "5dplyr.html#duplicated",
    "title": "Data Manipulation with dplyr",
    "section": "duplicated()",
    "text": "duplicated()\n\n# Create a Data Frame\ndf6 &lt;- data.frame(x1 = c(1:5),\n                    x2 = letters[1:5],\n                    x3 = seq(2,10,2),\n                    x1 = LETTERS[22:26],\n                    check.names = FALSE)\ndf6\n\n  x1 x2 x3 x1\n1  1  a  2  V\n2  2  b  4  W\n3  3  c  6  X\n4  4  d  8  Y\n5  5  e 10  Z\n\n# Find Duplicate Column Names\nduplicated_names &lt;- duplicated(colnames(df6))\n\n# Remove Duplicate Column Names\ndf6[!duplicated_names]\n\n  x1 x2 x3\n1  1  a  2\n2  2  b  4\n3  3  c  6\n4  4  d  8\n5  5  e 10"
  },
  {
    "objectID": "5dplyr.html#as.factor",
    "href": "5dplyr.html#as.factor",
    "title": "Data Manipulation with dplyr",
    "section": "as.factor()",
    "text": "as.factor()\n将字符串转换为因子。\n\nstarwars_selected %&gt;% \n  mutate(vore = as.factor(species)) %&gt;% \n  glimpse()\n\nRows: 87\nColumns: 7\n$ name    &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Organ…\n$ height  &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 228,…\n$ mass    &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.0, …\n$ sex     &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\", \"n…\n$ species &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Human\",…\n$ films   &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the Jedi…\n$ vore    &lt;fct&gt; Human, Droid, Droid, Human, Human, Human, Human, Droid, Human,…"
  },
  {
    "objectID": "5dplyr.html#arrange",
    "href": "5dplyr.html#arrange",
    "title": "Data Manipulation with dplyr",
    "section": "arrange()",
    "text": "arrange()\n将个案按某个变量排序。\n\n#升序\nstarwars_selected %&gt;% arrange(height)\n\n# A tibble: 87 × 6\n   name                  height  mass sex   species        films    \n   &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;          &lt;list&gt;   \n 1 Yoda                      66    17 male  Yoda's species &lt;chr [5]&gt;\n 2 Ratts Tyerel              79    15 male  Aleena         &lt;chr [1]&gt;\n 3 Wicket Systri Warrick     88    20 male  Ewok           &lt;chr [1]&gt;\n 4 Dud Bolt                  94    45 male  Vulptereen     &lt;chr [1]&gt;\n 5 R2-D2                     96    32 none  Droid          &lt;chr [7]&gt;\n 6 R4-P17                    96    NA none  Droid          &lt;chr [2]&gt;\n 7 R5-D4                     97    32 none  Droid          &lt;chr [1]&gt;\n 8 Sebulba                  112    40 male  Dug            &lt;chr [1]&gt;\n 9 Gasgano                  122    NA male  Xexto          &lt;chr [1]&gt;\n10 Watto                    137    NA male  Toydarian      &lt;chr [2]&gt;\n# ℹ 77 more rows\n\n#降序 desc()\nstarwars_selected %&gt;% \n  arrange(desc(height))\n\n# A tibble: 87 × 6\n   name         height  mass sex    species  films    \n   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;list&gt;   \n 1 Yarael Poof     264    NA male   Quermian &lt;chr [1]&gt;\n 2 Tarfful         234   136 male   Wookiee  &lt;chr [1]&gt;\n 3 Lama Su         229    88 male   Kaminoan &lt;chr [1]&gt;\n 4 Chewbacca       228   112 male   Wookiee  &lt;chr [5]&gt;\n 5 Roos Tarpals    224    82 male   Gungan   &lt;chr [1]&gt;\n 6 Grievous        216   159 male   Kaleesh  &lt;chr [1]&gt;\n 7 Taun We         213    NA female Kaminoan &lt;chr [1]&gt;\n 8 Rugor Nass      206    NA male   Gungan   &lt;chr [1]&gt;\n 9 Tion Medon      206    80 male   Pau'an   &lt;chr [1]&gt;\n10 Darth Vader     202   136 male   Human    &lt;chr [4]&gt;\n# ℹ 77 more rows\n\n# 查看前6行\nhead(starwars_selected)\n\n# A tibble: 6 × 6\n  name           height  mass sex    species films    \n  &lt;chr&gt;           &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n1 Luke Skywalker    172    77 male   Human   &lt;chr [5]&gt;\n2 C-3PO             167    75 none   Droid   &lt;chr [6]&gt;\n3 R2-D2              96    32 none   Droid   &lt;chr [7]&gt;\n4 Darth Vader       202   136 male   Human   &lt;chr [4]&gt;\n5 Leia Organa       150    49 female Human   &lt;chr [5]&gt;\n6 Owen Lars         178   120 male   Human   &lt;chr [3]&gt;\n\n# see a few values from all the columns\nglimpse(starwars_selected)\n\nRows: 87\nColumns: 6\n$ name    &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Organ…\n$ height  &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 228,…\n$ mass    &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.0, …\n$ sex     &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\", \"n…\n$ species &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Human\",…\n$ films   &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the Jedi…"
  },
  {
    "objectID": "5dplyr.html#filter",
    "href": "5dplyr.html#filter",
    "title": "Data Manipulation with dplyr",
    "section": "filter()",
    "text": "filter()\n提取满足条件的个案。\n\n#列出变量的取值种类\nunique(starwars$species)\n\n [1] \"Human\"          \"Droid\"          \"Wookiee\"        \"Rodian\"        \n [5] \"Hutt\"           NA               \"Yoda's species\" \"Trandoshan\"    \n [9] \"Mon Calamari\"   \"Ewok\"           \"Sullustan\"      \"Neimodian\"     \n[13] \"Gungan\"         \"Toydarian\"      \"Dug\"            \"Zabrak\"        \n[17] \"Twi'lek\"        \"Aleena\"         \"Vulptereen\"     \"Xexto\"         \n[21] \"Toong\"          \"Cerean\"         \"Nautolan\"       \"Tholothian\"    \n[25] \"Iktotchi\"       \"Quermian\"       \"Kel Dor\"        \"Chagrian\"      \n[29] \"Geonosian\"      \"Mirialan\"       \"Clawdite\"       \"Besalisk\"      \n[33] \"Kaminoan\"       \"Skakoan\"        \"Muun\"           \"Togruta\"       \n[37] \"Kaleesh\"        \"Pau'an\"        \n\n#提取species == \"Droid\"的个案\nstarwars_selected %&gt;% \n  filter(species == \"Droid\") %&gt;% \n  arrange(height) \n\n# A tibble: 6 × 6\n  name   height  mass sex   species films    \n  &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;list&gt;   \n1 R2-D2      96    32 none  Droid   &lt;chr [7]&gt;\n2 R4-P17     96    NA none  Droid   &lt;chr [2]&gt;\n3 R5-D4      97    32 none  Droid   &lt;chr [1]&gt;\n4 C-3PO     167    75 none  Droid   &lt;chr [6]&gt;\n5 IG-88     200   140 none  Droid   &lt;chr [1]&gt;\n6 BB8        NA    NA none  Droid   &lt;chr [1]&gt;\n\n#提取height &lt; 200的个案\nstarwars_selected %&gt;% \n  arrange(desc(height)) %&gt;% \n  filter(height &lt; 200)\n\n# A tibble: 70 × 6\n   name                height  mass sex   species   films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;list&gt;   \n 1 Ki-Adi-Mundi           198    82 male  Cerean    &lt;chr [3]&gt;\n 2 Dexter Jettster        198   102 male  Besalisk  &lt;chr [1]&gt;\n 3 Jar Jar Binks          196    66 male  Gungan    &lt;chr [2]&gt;\n 4 Kit Fisto              196    87 male  Nautolan  &lt;chr [3]&gt;\n 5 Mas Amedda             196    NA male  Chagrian  &lt;chr [2]&gt;\n 6 Qui-Gon Jinn           193    89 male  Human     &lt;chr [1]&gt;\n 7 Dooku                  193    80 male  Human     &lt;chr [2]&gt;\n 8 Wat Tambor             193    48 male  Skakoan   &lt;chr [1]&gt;\n 9 Nute Gunray            191    90 male  Neimodian &lt;chr [3]&gt;\n10 Bail Prestor Organa    191    NA male  Human     &lt;chr [2]&gt;\n# ℹ 60 more rows\n\n#用逗号分隔多个提取条件\nstarwars_selected %&gt;% \n    filter(height &lt; 200, species == \"Human\")  %&gt;% \n    arrange(desc(height))\n\n# A tibble: 29 × 6\n   name                height  mass sex    species films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Qui-Gon Jinn           193  89   male   Human   &lt;chr [1]&gt;\n 2 Dooku                  193  80   male   Human   &lt;chr [2]&gt;\n 3 Bail Prestor Organa    191  NA   male   Human   &lt;chr [2]&gt;\n 4 Anakin Skywalker       188  84   male   Human   &lt;chr [3]&gt;\n 5 Mace Windu             188  84   male   Human   &lt;chr [3]&gt;\n 6 Raymus Antilles        188  79   male   Human   &lt;chr [2]&gt;\n 7 Padmé Amidala          185  45   female Human   &lt;chr [3]&gt;\n 8 Biggs Darklighter      183  84   male   Human   &lt;chr [1]&gt;\n 9 Boba Fett              183  78.2 male   Human   &lt;chr [3]&gt;\n10 Ric Olié               183  NA   male   Human   &lt;chr [1]&gt;\n# ℹ 19 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\nstarwars_selected %&gt;% \n    filter((species == \"Human\"|species == \"Droid\") & \n         height &lt; 200 ) %&gt;% \n    arrange(desc(height))\n\n# A tibble: 33 × 6\n   name                height  mass sex    species films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Qui-Gon Jinn           193  89   male   Human   &lt;chr [1]&gt;\n 2 Dooku                  193  80   male   Human   &lt;chr [2]&gt;\n 3 Bail Prestor Organa    191  NA   male   Human   &lt;chr [2]&gt;\n 4 Anakin Skywalker       188  84   male   Human   &lt;chr [3]&gt;\n 5 Mace Windu             188  84   male   Human   &lt;chr [3]&gt;\n 6 Raymus Antilles        188  79   male   Human   &lt;chr [2]&gt;\n 7 Padmé Amidala          185  45   female Human   &lt;chr [3]&gt;\n 8 Biggs Darklighter      183  84   male   Human   &lt;chr [1]&gt;\n 9 Boba Fett              183  78.2 male   Human   &lt;chr [3]&gt;\n10 Ric Olié               183  NA   male   Human   &lt;chr [1]&gt;\n# ℹ 23 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#%in% 属于\nstarwars_selected %&gt;% \n    filter((species %in% c(\"Human\",\"Droid\")) & \n         height &lt; 200 ) %&gt;% \n    arrange(desc(height)) \n\n# A tibble: 33 × 6\n   name                height  mass sex    species films    \n   &lt;chr&gt;                &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Qui-Gon Jinn           193  89   male   Human   &lt;chr [1]&gt;\n 2 Dooku                  193  80   male   Human   &lt;chr [2]&gt;\n 3 Bail Prestor Organa    191  NA   male   Human   &lt;chr [2]&gt;\n 4 Anakin Skywalker       188  84   male   Human   &lt;chr [3]&gt;\n 5 Mace Windu             188  84   male   Human   &lt;chr [3]&gt;\n 6 Raymus Antilles        188  79   male   Human   &lt;chr [2]&gt;\n 7 Padmé Amidala          185  45   female Human   &lt;chr [3]&gt;\n 8 Biggs Darklighter      183  84   male   Human   &lt;chr [1]&gt;\n 9 Boba Fett              183  78.2 male   Human   &lt;chr [3]&gt;\n10 Ric Olié               183  NA   male   Human   &lt;chr [1]&gt;\n# ℹ 23 more rows\n\nstarwars_selected\n\n# A tibble: 87 × 6\n   name               height  mass sex    species films    \n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 Luke Skywalker        172    77 male   Human   &lt;chr [5]&gt;\n 2 C-3PO                 167    75 none   Droid   &lt;chr [6]&gt;\n 3 R2-D2                  96    32 none   Droid   &lt;chr [7]&gt;\n 4 Darth Vader           202   136 male   Human   &lt;chr [4]&gt;\n 5 Leia Organa           150    49 female Human   &lt;chr [5]&gt;\n 6 Owen Lars             178   120 male   Human   &lt;chr [3]&gt;\n 7 Beru Whitesun Lars    165    75 female Human   &lt;chr [3]&gt;\n 8 R5-D4                  97    32 none   Droid   &lt;chr [1]&gt;\n 9 Biggs Darklighter     183    84 male   Human   &lt;chr [1]&gt;\n10 Obi-Wan Kenobi        182    77 male   Human   &lt;chr [6]&gt;\n# ℹ 77 more rows\n\n#filter(!is.na(height))保留height没有缺失值的个案\nstarwars_selected %&gt;% \n  arrange(desc(height)) %&gt;% \n  filter(!is.na(height))\n\n# A tibble: 81 × 6\n   name         height  mass sex    species  films    \n   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;list&gt;   \n 1 Yarael Poof     264    NA male   Quermian &lt;chr [1]&gt;\n 2 Tarfful         234   136 male   Wookiee  &lt;chr [1]&gt;\n 3 Lama Su         229    88 male   Kaminoan &lt;chr [1]&gt;\n 4 Chewbacca       228   112 male   Wookiee  &lt;chr [5]&gt;\n 5 Roos Tarpals    224    82 male   Gungan   &lt;chr [1]&gt;\n 6 Grievous        216   159 male   Kaleesh  &lt;chr [1]&gt;\n 7 Taun We         213    NA female Kaminoan &lt;chr [1]&gt;\n 8 Rugor Nass      206    NA male   Gungan   &lt;chr [1]&gt;\n 9 Tion Medon      206    80 male   Pau'an   &lt;chr [1]&gt;\n10 Darth Vader     202   136 male   Human    &lt;chr [4]&gt;\n# ℹ 71 more rows"
  },
  {
    "objectID": "5dplyr.html#slice",
    "href": "5dplyr.html#slice",
    "title": "Data Manipulation with dplyr",
    "section": "slice()",
    "text": "slice()\nslice() lets you index rows by their (integer) locations. It allows you to select, remove, and duplicate rows.\nslice_min() and slice_max() select rows with highest or lowest values of a variable.\n\n#提取第5到第10行\nstarwars %&gt;% slice(5:10)\n\n# A tibble: 6 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Leia Org…    150    49 brown      light      brown             19 fema… femin…\n2 Owen Lars    178   120 brown, gr… light      blue              52 male  mascu…\n3 Beru Whi…    165    75 brown      light      blue              47 fema… femin…\n4 R5-D4         97    32 &lt;NA&gt;       white, red red               NA none  mascu…\n5 Biggs Da…    183    84 black      light      brown             24 male  mascu…\n6 Obi-Wan …    182    77 auburn, w… fair       blue-gray         57 male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#提取前3行\nstarwars %&gt;% slice_head(n = 3)\n\n# A tibble: 3 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Luke Sky…    172    77 blond      fair       blue              19 male  mascu…\n2 C-3PO        167    75 &lt;NA&gt;       gold       yellow           112 none  mascu…\n3 R2-D2         96    32 &lt;NA&gt;       white, bl… red               33 none  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#提取后3行\nstarwars %&gt;% slice_tail(n = 3)\n\n# A tibble: 3 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Poe Dame…     NA    NA brown      light      brown             NA male  mascu…\n2 BB8           NA    NA none       none       black             NA none  mascu…\n3 Captain …     NA    NA none       none       unknown           NA fema… femin…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#随机抽样3行\nstarwars %&gt;% slice_sample(n = 5)\n\n# A tibble: 5 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Chewbacca    228 112   brown      unknown    blue             200 male  mascu…\n2 IG-88        200 140   none       metal      red               15 none  mascu…\n3 Biggs Da…    183  84   black      light      brown             24 male  mascu…\n4 Yoda          66  17   white      green      brown            896 male  mascu…\n5 Luminara…    170  56.2 black      yellow     blue              58 fema… femin…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#随机抽样比例0.1\nstarwars %&gt;% slice_sample(prop = 0.1)\n\n# A tibble: 8 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 R4-P17        96    NA none       silver, r… red, blue         NA none  femin…\n2 Cordé        157    NA brown      light      brown             NA &lt;NA&gt;  &lt;NA&gt;  \n3 Padmé Am…    185    45 brown      light      brown             46 fema… femin…\n4 Dexter J…    198   102 none       brown      yellow            NA male  mascu…\n5 Shaak Ti     178    57 none       red, blue… black             NA fema… femin…\n6 Mon Moth…    150    NA auburn     fair       blue              48 fema… femin…\n7 Obi-Wan …    182    77 auburn, w… fair       blue-gray         57 male  mascu…\n8 Rugor Na…    206    NA none       green      orange            NA male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n#切取某个变量最大或最小的几个个案\nstarwars %&gt;%\n  filter(!is.na(height)) %&gt;%\n  slice_max(height, n = 3)\n\n# A tibble: 3 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Yarael P…    264    NA none       white      yellow            NA male  mascu…\n2 Tarfful      234   136 brown      brown      blue              NA male  mascu…\n3 Lama Su      229    88 none       grey       black             NA male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#distinct",
    "href": "5dplyr.html#distinct",
    "title": "Data Manipulation with dplyr",
    "section": "distinct()",
    "text": "distinct()\n剔除重复的行。\n\n## 剔除所有列的值都相同的行\ndf4 &lt;- data.frame(ID =c(1,2,3,4,2),\n                  name = c(\"John\",\"Bill\",\"Jim\",\"Kate\", \"Bill\"))\ndf4\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n5  2 Bill\n\ndf4 &lt;- distinct(df4)\ndf4\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n\n\n\n## 剔除某一列的值相同的行\ndf5 &lt;- data.frame(ID =c(1,2,3,4,2),\n                  name = c(\"John\",\"Bill\",\"Jim\",\"Kate\", \"Alex\"))\ndf5\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n5  2 Alex\n\ndf5 &lt;- distinct(df5, ID,.keep_all = TRUE)\ndf5\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate\n\nunique(df4)\n\n  ID name\n1  1 John\n2  2 Bill\n3  3  Jim\n4  4 Kate"
  },
  {
    "objectID": "5dplyr.html#count",
    "href": "5dplyr.html#count",
    "title": "Data Manipulation with dplyr",
    "section": "count()",
    "text": "count()\nThe simple way you can aggregate data is to count it: to find out the number of observations.\n\nstarwars %&gt;% \n  count()\n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1    87\n\n#按性别计数\nstarwars %&gt;% \n  count(sex)\n\n# A tibble: 5 × 2\n  sex                n\n  &lt;chr&gt;          &lt;int&gt;\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 &lt;NA&gt;               4\n\n#计数和排序\nstarwars %&gt;% \n  count(sex, sort = TRUE)\n\n# A tibble: 5 × 2\n  sex                n\n  &lt;chr&gt;          &lt;int&gt;\n1 male              60\n2 female            16\n3 none               6\n4 &lt;NA&gt;               4\n5 hermaphroditic     1\n\n#按性别分组，各组个案的体重之和\nstarwars %&gt;% \n  count(sex, wt = mass, sort = TRUE)\n\n# A tibble: 5 × 2\n  sex                n\n  &lt;chr&gt;          &lt;dbl&gt;\n1 male           3369.\n2 hermaphroditic 1358 \n3 female          492.\n4 none            279 \n5 &lt;NA&gt;            243"
  },
  {
    "objectID": "5dplyr.html#group_by",
    "href": "5dplyr.html#group_by",
    "title": "Data Manipulation with dplyr",
    "section": "group_by()",
    "text": "group_by()\n对个案分组。"
  },
  {
    "objectID": "5dplyr.html#summarize",
    "href": "5dplyr.html#summarize",
    "title": "Data Manipulation with dplyr",
    "section": "summarize()",
    "text": "summarize()\nsummarise() and summarize() are synonyms.\nsummary functions\n\nsum()\nmean()\nmedian()\nmin()\nmax()\nn()\n\n\nstarwars_selected %&gt;% \n  filter(height != \"NA\", mass != \"NA\", sex != \"NA\") %&gt;% \n  group_by(sex) %&gt;% \n  summarize(number = n(), median_height = median(height), \n            median_weight = median(mass)) %&gt;% \n  arrange(desc(number))\n\n# A tibble: 4 × 4\n  sex            number median_height median_weight\n  &lt;chr&gt;           &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1 male               42           183          80  \n2 female              9           170          55  \n3 none                4           132          53.5\n4 hermaphroditic      1           175        1358"
  },
  {
    "objectID": "5dplyr.html#top_n",
    "href": "5dplyr.html#top_n",
    "title": "Data Manipulation with dplyr",
    "section": "top_n()",
    "text": "top_n()\n\nstarwars_selected %&gt;% \n  filter(height != \"NA\", mass != \"NA\", sex != \"NA\") %&gt;% \n  group_by(sex) %&gt;% \n  top_n(1,height)\n\n# A tibble: 4 × 6\n# Groups:   sex [4]\n  name                  height  mass sex            species films    \n  &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;list&gt;   \n1 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt    &lt;chr [3]&gt;\n2 IG-88                    200   140 none           Droid   &lt;chr [1]&gt;\n3 Padmé Amidala            185    45 female         Human   &lt;chr [3]&gt;\n4 Tarfful                  234   136 male           Wookiee &lt;chr [1]&gt;\n\nstarwars_selected %&gt;% \n  filter(height != \"NA\", mass != \"NA\", sex != \"NA\") %&gt;% \n  group_by(sex) %&gt;% \n  top_n(2,mass) %&gt;% \n  arrange(sex)\n\n# A tibble: 8 × 6\n# Groups:   sex [4]\n  name                  height  mass sex            species films    \n  &lt;chr&gt;                  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;list&gt;   \n1 Beru Whitesun Lars       165    75 female         Human   &lt;chr [3]&gt;\n2 Shaak Ti                 178    57 female         Togruta &lt;chr [2]&gt;\n3 Jabba Desilijic Tiure    175  1358 hermaphroditic Hutt    &lt;chr [3]&gt;\n4 Darth Vader              202   136 male           Human   &lt;chr [4]&gt;\n5 Grievous                 216   159 male           Kaleesh &lt;chr [1]&gt;\n6 Tarfful                  234   136 male           Wookiee &lt;chr [1]&gt;\n7 C-3PO                    167    75 none           Droid   &lt;chr [6]&gt;\n8 IG-88                    200   140 none           Droid   &lt;chr [1]&gt;"
  },
  {
    "objectID": "5dplyr.html#缺失值-missing-data",
    "href": "5dplyr.html#缺失值-missing-data",
    "title": "Data Manipulation with dplyr",
    "section": "缺失值 Missing data",
    "text": "缺失值 Missing data\n\n#有missing data, 无法计算均值\nmean(starwars$height)\n\n[1] NA\n\nmean(starwars$height,na.rm = TRUE)\n\n[1] 174.6049\n\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  na.omit()\n\n# A tibble: 72 × 4\n   name               gender    hair_color    height\n   &lt;chr&gt;              &lt;chr&gt;     &lt;chr&gt;          &lt;int&gt;\n 1 Luke Skywalker     masculine blond            172\n 2 Darth Vader        masculine none             202\n 3 Leia Organa        feminine  brown            150\n 4 Owen Lars          masculine brown, grey      178\n 5 Beru Whitesun Lars feminine  brown            165\n 6 Biggs Darklighter  masculine black            183\n 7 Obi-Wan Kenobi     masculine auburn, white    182\n 8 Anakin Skywalker   masculine blond            188\n 9 Wilhuff Tarkin     masculine auburn, grey     180\n10 Chewbacca          masculine brown            228\n# ℹ 62 more rows\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n# 查看有缺失值的个案\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  filter(!complete.cases(.)) \n\n# A tibble: 15 × 4\n   name                  gender    hair_color height\n   &lt;chr&gt;                 &lt;chr&gt;     &lt;chr&gt;       &lt;int&gt;\n 1 C-3PO                 masculine &lt;NA&gt;          167\n 2 R2-D2                 masculine &lt;NA&gt;           96\n 3 R5-D4                 masculine &lt;NA&gt;           97\n 4 Greedo                masculine &lt;NA&gt;          173\n 5 Jabba Desilijic Tiure masculine &lt;NA&gt;          175\n 6 Jek Tono Porkins      &lt;NA&gt;      brown         180\n 7 Arvel Crynyd          masculine brown          NA\n 8 Gregar Typho          &lt;NA&gt;      black         185\n 9 Cordé                 &lt;NA&gt;      brown         157\n10 Sly Moore             &lt;NA&gt;      none          178\n11 Finn                  masculine black          NA\n12 Rey                   feminine  brown          NA\n13 Poe Dameron           masculine brown          NA\n14 BB8                   masculine none           NA\n15 Captain Phasma        feminine  none           NA\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  filter(!complete.cases(.)) %&gt;% \n  drop_na(height)\n\n# A tibble: 9 × 4\n  name                  gender    hair_color height\n  &lt;chr&gt;                 &lt;chr&gt;     &lt;chr&gt;       &lt;int&gt;\n1 C-3PO                 masculine &lt;NA&gt;          167\n2 R2-D2                 masculine &lt;NA&gt;           96\n3 R5-D4                 masculine &lt;NA&gt;           97\n4 Greedo                masculine &lt;NA&gt;          173\n5 Jabba Desilijic Tiure masculine &lt;NA&gt;          175\n6 Jek Tono Porkins      &lt;NA&gt;      brown         180\n7 Gregar Typho          &lt;NA&gt;      black         185\n8 Cordé                 &lt;NA&gt;      brown         157\n9 Sly Moore             &lt;NA&gt;      none          178\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nstarwars %&gt;% \n  select(name, gender, hair_color, height) %&gt;% \n  filter(complete.cases(.)) %&gt;% \n  mutate(hair_color2 = replace_na(hair_color, \"none\"))\n\n# A tibble: 72 × 5\n   name               gender    hair_color    height hair_color2  \n   &lt;chr&gt;              &lt;chr&gt;     &lt;chr&gt;          &lt;int&gt; &lt;chr&gt;        \n 1 Luke Skywalker     masculine blond            172 blond        \n 2 Darth Vader        masculine none             202 none         \n 3 Leia Organa        feminine  brown            150 brown        \n 4 Owen Lars          masculine brown, grey      178 brown, grey  \n 5 Beru Whitesun Lars feminine  brown            165 brown        \n 6 Biggs Darklighter  masculine black            183 black        \n 7 Obi-Wan Kenobi     masculine auburn, white    182 auburn, white\n 8 Anakin Skywalker   masculine blond            188 blond        \n 9 Wilhuff Tarkin     masculine auburn, grey     180 auburn, grey \n10 Chewbacca          masculine brown            228 brown        \n# ℹ 62 more rows\n\nstarwars         \n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "5dplyr.html#本章作业",
    "href": "5dplyr.html#本章作业",
    "title": "Data Manipulation with dplyr",
    "section": "本章作业",
    "text": "本章作业\n数据集：mpg {ggplot2}\n\n用select()函数从mpg提取5个变量⽣成新的数据框。\n用mutate()函数在数据框中追加新的变量，将油耗变量cty和hwy（miles per gallon）转换成转公里/升(kilometers per liter)的油耗指标。\n任选mpg中的某个变量，用if_else()函数对该变量的数值进⾏条件转换。\n设置三个筛选条件，用filter()函数从mpg筛选个案⽣成新的数据框。\n提交要求：R script"
  },
  {
    "objectID": "style.html",
    "href": "style.html",
    "title": "R代码风格",
    "section": "",
    "text": "# install.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "style.html#逗号后空格号",
    "href": "style.html#逗号后空格号",
    "title": "R代码风格",
    "section": "1.1 逗号后空格号",
    "text": "1.1 逗号后空格号\n\n# good\nmpg[, 1]\n\n# A tibble: 234 × 1\n   manufacturer\n   &lt;chr&gt;       \n 1 audi        \n 2 audi        \n 3 audi        \n 4 audi        \n 5 audi        \n 6 audi        \n 7 audi        \n 8 audi        \n 9 audi        \n10 audi        \n# ℹ 224 more rows\n\nhist(mpg$hwy, breaks = 20, col = \"skyblue\", \n     main = \"Histogram of Highway Mileage\", \n     xlab = \"Miles per Gallon\")\n\n# bad\nmpg[ ,1]\n\n# A tibble: 234 × 1\n   manufacturer\n   &lt;chr&gt;       \n 1 audi        \n 2 audi        \n 3 audi        \n 4 audi        \n 5 audi        \n 6 audi        \n 7 audi        \n 8 audi        \n 9 audi        \n10 audi        \n# ℹ 224 more rows\n\nhist(mpg$hwy ,breaks = 20 ,col = \"skyblue\", \n     main = \"Histogram of Highway Mileage\", \n     xlab = \"Miles per Gallon\")"
  },
  {
    "objectID": "style.html#运算符前后空格",
    "href": "style.html#运算符前后空格",
    "title": "R代码风格",
    "section": "1.2 运算符前后空格",
    "text": "1.2 运算符前后空格\n=、==、+、-、&lt;-, ~, %&gt;%，｜等用空格包围\n\n# good\nmodel1 &lt;- lm(cty ~ displ + cyl, data = mpg)\nsummary(model1)\n\n\nCall:\nlm(formula = cty ~ displ + cyl, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9276 -1.4750 -0.0891  1.0686 13.9261 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  28.2885     0.6876  41.139  &lt; 2e-16 ***\ndispl        -1.1979     0.3408  -3.515 0.000529 ***\ncyl          -1.2347     0.2732  -4.519 9.91e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.466 on 231 degrees of freedom\nMultiple R-squared:  0.6671,    Adjusted R-squared:  0.6642 \nF-statistic: 231.4 on 2 and 231 DF,  p-value: &lt; 2.2e-16\n\nmpg %&gt;% lm(cty ~ displ + cyl, data = .) %&gt;% summary()\n\n\nCall:\nlm(formula = cty ~ displ + cyl, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9276 -1.4750 -0.0891  1.0686 13.9261 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  28.2885     0.6876  41.139  &lt; 2e-16 ***\ndispl        -1.1979     0.3408  -3.515 0.000529 ***\ncyl          -1.2347     0.2732  -4.519 9.91e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.466 on 231 degrees of freedom\nMultiple R-squared:  0.6671,    Adjusted R-squared:  0.6642 \nF-statistic: 231.4 on 2 and 231 DF,  p-value: &lt; 2.2e-16\n\n# bad\nmodel1&lt;-lm(cty~displ+cyl,data=mpg)\nsummary(model1)\n\n\nCall:\nlm(formula = cty ~ displ + cyl, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9276 -1.4750 -0.0891  1.0686 13.9261 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  28.2885     0.6876  41.139  &lt; 2e-16 ***\ndispl        -1.1979     0.3408  -3.515 0.000529 ***\ncyl          -1.2347     0.2732  -4.519 9.91e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.466 on 231 degrees of freedom\nMultiple R-squared:  0.6671,    Adjusted R-squared:  0.6642 \nF-statistic: 231.4 on 2 and 231 DF,  p-value: &lt; 2.2e-16\n\nmpg%&gt;%lm(cty~displ+cyl,data=.)%&gt;%summary()\n\n\nCall:\nlm(formula = cty ~ displ + cyl, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9276 -1.4750 -0.0891  1.0686 13.9261 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  28.2885     0.6876  41.139  &lt; 2e-16 ***\ndispl        -1.1979     0.3408  -3.515 0.000529 ***\ncyl          -1.2347     0.2732  -4.519 9.91e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.466 on 231 degrees of freedom\nMultiple R-squared:  0.6671,    Adjusted R-squared:  0.6642 \nF-statistic: 231.4 on 2 and 231 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "style.html#无需空格的情况",
    "href": "style.html#无需空格的情况",
    "title": "R代码风格",
    "section": "1.3 无需空格的情况",
    "text": "1.3 无需空格的情况\n具有高优先级的运算符包括：::、:::、$、@、[、[[、^，不用空格包围\n\n# good\nmpg$cty\n\n  [1] 18 21 20 21 16 18 18 18 16 20 19 15 17 17 15 15 17 16 14 11 14 13 12 16 15\n [26] 16 15 15 14 11 11 14 19 22 18 18 17 18 17 16 16 17 17 11 15 15 16 16 15 14\n [51] 13 14 14 14  9 11 11 13 13  9 13 11 13 11 12  9 13 13 12  9 11 11 13 11 11\n [76] 11 12 14 15 14 13 13 13 14 14 13 13 13 11 13 18 18 17 16 15 15 15 15 14 28\n[101] 24 25 23 24 26 25 24 21 18 18 21 21 18 18 19 19 19 20 20 17 16 17 17 15 15\n[126] 14  9 14 13 11 11 12 12 11 11 11 12 14 13 13 13 21 19 23 23 19 19 18 19 19\n[151] 14 15 14 12 18 16 17 18 16 18 18 20 19 20 18 21 19 19 19 20 20 19 20 15 16\n[176] 15 15 16 14 21 21 21 21 18 18 19 21 21 21 22 18 18 18 24 24 26 28 26 11 13\n[201] 15 16 17 15 15 15 16 21 19 21 22 17 33 21 19 22 21 21 21 16 17 35 29 21 19\n[226] 20 20 21 18 19 21 16 18 17\n\nmpg[, 1]\n\n# A tibble: 234 × 1\n   manufacturer\n   &lt;chr&gt;       \n 1 audi        \n 2 audi        \n 3 audi        \n 4 audi        \n 5 audi        \n 6 audi        \n 7 audi        \n 8 audi        \n 9 audi        \n10 audi        \n# ℹ 224 more rows\n\npsych::describe(mpg)\n\n              vars   n    mean    sd median trimmed   mad    min  max range\nmanufacturer*    1 234    7.76  5.13    6.0    7.68  5.93    1.0   15  14.0\nmodel*           2 234   19.09 11.15   18.5   18.98 14.08    1.0   38  37.0\ndispl            3 234    3.47  1.29    3.3    3.39  1.33    1.6    7   5.4\nyear             4 234 2003.50  4.51 2003.5 2003.50  6.67 1999.0 2008   9.0\ncyl              5 234    5.89  1.61    6.0    5.86  2.97    4.0    8   4.0\ntrans*           6 234    5.65  2.88    4.0    5.53  1.48    1.0   10   9.0\ndrv*             7 234    1.67  0.66    2.0    1.59  1.48    1.0    3   2.0\ncty              8 234   16.86  4.26   17.0   16.61  4.45    9.0   35  26.0\nhwy              9 234   23.44  5.95   24.0   23.23  7.41   12.0   44  32.0\nfl*             10 234    4.63  0.70    5.0    4.77  0.00    1.0    5   4.0\nclass*          11 234    4.59  1.99    5.0    4.64  2.97    1.0    7   6.0\n               skew kurtosis   se\nmanufacturer*  0.21    -1.63 0.34\nmodel*         0.11    -1.23 0.73\ndispl          0.44    -0.91 0.08\nyear           0.00    -2.01 0.29\ncyl            0.11    -1.46 0.11\ntrans*         0.29    -1.65 0.19\ndrv*           0.48    -0.76 0.04\ncty            0.79     1.43 0.28\nhwy            0.36     0.14 0.39\nfl*           -2.25     5.76 0.05\nclass*        -0.14    -1.52 0.13\n\n# bad\nmpg $ cty\n\n  [1] 18 21 20 21 16 18 18 18 16 20 19 15 17 17 15 15 17 16 14 11 14 13 12 16 15\n [26] 16 15 15 14 11 11 14 19 22 18 18 17 18 17 16 16 17 17 11 15 15 16 16 15 14\n [51] 13 14 14 14  9 11 11 13 13  9 13 11 13 11 12  9 13 13 12  9 11 11 13 11 11\n [76] 11 12 14 15 14 13 13 13 14 14 13 13 13 11 13 18 18 17 16 15 15 15 15 14 28\n[101] 24 25 23 24 26 25 24 21 18 18 21 21 18 18 19 19 19 20 20 17 16 17 17 15 15\n[126] 14  9 14 13 11 11 12 12 11 11 11 12 14 13 13 13 21 19 23 23 19 19 18 19 19\n[151] 14 15 14 12 18 16 17 18 16 18 18 20 19 20 18 21 19 19 19 20 20 19 20 15 16\n[176] 15 15 16 14 21 21 21 21 18 18 19 21 21 21 22 18 18 18 24 24 26 28 26 11 13\n[201] 15 16 17 15 15 15 16 21 19 21 22 17 33 21 19 22 21 21 21 16 17 35 29 21 19\n[226] 20 20 21 18 19 21 16 18 17\n\nmpg [ , 1]\n\n# A tibble: 234 × 1\n   manufacturer\n   &lt;chr&gt;       \n 1 audi        \n 2 audi        \n 3 audi        \n 4 audi        \n 5 audi        \n 6 audi        \n 7 audi        \n 8 audi        \n 9 audi        \n10 audi        \n# ℹ 224 more rows\n\npsych :: describe(mpg)\n\n              vars   n    mean    sd median trimmed   mad    min  max range\nmanufacturer*    1 234    7.76  5.13    6.0    7.68  5.93    1.0   15  14.0\nmodel*           2 234   19.09 11.15   18.5   18.98 14.08    1.0   38  37.0\ndispl            3 234    3.47  1.29    3.3    3.39  1.33    1.6    7   5.4\nyear             4 234 2003.50  4.51 2003.5 2003.50  6.67 1999.0 2008   9.0\ncyl              5 234    5.89  1.61    6.0    5.86  2.97    4.0    8   4.0\ntrans*           6 234    5.65  2.88    4.0    5.53  1.48    1.0   10   9.0\ndrv*             7 234    1.67  0.66    2.0    1.59  1.48    1.0    3   2.0\ncty              8 234   16.86  4.26   17.0   16.61  4.45    9.0   35  26.0\nhwy              9 234   23.44  5.95   24.0   23.23  7.41   12.0   44  32.0\nfl*             10 234    4.63  0.70    5.0    4.77  0.00    1.0    5   4.0\nclass*          11 234    4.59  1.99    5.0    4.64  2.97    1.0    7   6.0\n               skew kurtosis   se\nmanufacturer*  0.21    -1.63 0.34\nmodel*         0.11    -1.23 0.73\ndispl          0.44    -0.91 0.08\nyear           0.00    -2.01 0.29\ncyl            0.11    -1.46 0.11\ntrans*         0.29    -1.65 0.19\ndrv*           0.48    -0.76 0.04\ncty            0.79     1.43 0.28\nhwy            0.36     0.14 0.39\nfl*           -2.25     5.76 0.05\nclass*        -0.14    -1.52 0.13"
  }
]